var CABLES;(()=>{"use strict";var __webpack_modules__={122:()=>{let GLOB_EXP=/(?:^|[^\\])\*/,NOT_LINE_ENDING=/[^\r\n]/g;const Preprocessor=function(t,e,i){this.source=""+t,this.baseDir="string"==typeof e?e:".",this.includes="object"==typeof e?e:{},this.preserveLineNumbers="boolean"==typeof i&&i,this.isNode=!("undefined"!=typeof window&&window.window),this.errorSourceAhead=50,this.defines=[]};Preprocessor.EXPR=/([ ]*)\/\/[ ]+#(include_once|include|ifn?def|if|endif|else|elif|put|define)/g,Preprocessor.ALL=/([^\r\n]*)\r?(?:\n|$)/,Preprocessor.INCLUDE=/(include_once|include)[ ]+"([^"\\]*(\\.[^"\\]*)*)"[ ]*\r?(?:\n|$)/g,Preprocessor.IF=/(ifdef|ifndef|if)[ ]*([^\r\n]+)\r?\n/g,Preprocessor.ENDIF=/(endif|else|elif)([ ]+[^\r\n]+)?\r?(?:\n|$)/g,Preprocessor.PUT=/put[ ]+([^\n]+)[ ]*/g,Preprocessor.DEFINE=/define[ ]+([^\n\r]+)\r?(?:\n|$)/g,Preprocessor.VAR=/define[ ]+var[ ]+([a-zA-Z_][a-zA-Z0-9_]*)[ ]*=[ ]*(.+)/g,Preprocessor.BOOLVAR=/define[ ]+([a-zA-Z_][a-zA-Z0-9_]*)[ ]*/g,Preprocessor.FUNCTION=/define[ ]+function[ ]+([a-zA-Z_][a-zA-Z0-9_]*)[ ]*(.+)/g,Preprocessor.stripSlashes=function(t){return(t+"").replace(/\\(.?)/g,(function(t,e){switch(e){case"\\":return"\\";case"0":return"\0";case"":return"";default:return e}}))},Preprocessor.addSlashes=function(t){return(t+"").replace(/([\\"'])/g,"\\$1").replace(/\0/g,"\\0")},Preprocessor.indent=function(t,e){let i=t.split("\n");for(let t=0;t<i.length;t++)i[t]=e+i[t];return i.join("\n")},Preprocessor.nlToStr=function(t){return"["+t.replace(/\r/g,"").replace(/\n/g,"\\n")+"]"},Preprocessor.evaluate=function(defines,expr){let evalFunction=function(){for(let key in defines)defines.hasOwnProperty(key)&&("var"===defines[key].type?eval("var "+key+" = "+defines[key].value+";"):eval("function "+key+defines[key].value));return eval(expr)};return evalFunction()},Preprocessor.prototype.process=function(t,e){t=t||{},(e="function"==typeof e?e:function(){})("Defines: "+JSON.stringify(t));let i,s,r,n,o,a,h=[],l=!1;for(;null!==(i=Preprocessor.EXPR.exec(this.source));){e(i[2]+" @ "+i.index+"-"+Preprocessor.EXPR.lastIndex);let d=i[1];if(l&&h.length>0&&"endif"!==i[2]&&"else"!==i[2]&&"elif"!==i[2]){if(a=h.pop(),e("  pop ("+h.length+"): "+JSON.stringify(a)),Preprocessor.ALL.lastIndex=i.index,null===(s=Preprocessor.ALL.exec(this.source)))throw new Error("Illegal #"+i[2]+": "+this.source.substring(i.index,i.index+this.errorSourceAhead)+"...");h.push(o={include:a.include,index:a.index,lastIndex:Preprocessor.ALL.lastIndex}),e("  push ("+h.length+"): "+JSON.stringify(o))}else switch(i[2]){case"ifdef":case"ifndef":case"if":if(Preprocessor.IF.lastIndex=i.index,null===(s=Preprocessor.IF.exec(this.source)))throw new Error("Illegal #"+i[2]+": "+this.source.substring(i.index,i.index+this.errorSourceAhead)+"...");e("  test: "+s[2]),e("  defines  "+JSON.stringify(t)),n="ifdef"===s[1]?void 0!==t[s[2]]:"ifndef"===s[1]?void 0===t[s[2]]:Preprocessor.evaluate(t,s[2]),l=!n,e("  value: "+n+", isSkip: "+l),h.push(o={include:n,index:i.index,lastIndex:Preprocessor.IF.lastIndex}),e("  push ("+h.length+"): "+JSON.stringify(o));break;case"endif":case"else":case"elif":if(Preprocessor.ENDIF.lastIndex=i.index,null===(s=Preprocessor.ENDIF.exec(this.source)))throw new Error("Illegal #"+i[2]+': "'+this.source.substring(i.index,i.index+this.errorSourceAhead)+"...");if(0===h.length)throw new Error("Unexpected #"+s[1]+': "'+this.source.substring(i.index,i.index+this.errorSourceAhead)+"...");a=h.pop(),e("  pop ("+h.length+"): "+JSON.stringify(a)),n=this.preserveLineNumbers?this.source.substring(a.index,a.lastIndex).replace(NOT_LINE_ENDING,"")+this.source.substring(a.lastIndex,i.index)+this.source.substring(i.index,Preprocessor.ENDIF.lastIndex).replace(NOT_LINE_ENDING,""):this.source.substring(a.lastIndex,i.index),a.include?(e("  incl: "+Preprocessor.nlToStr(n)+", 0-"+a.index+" + "+n.length+" bytes + "+Preprocessor.ENDIF.lastIndex+"-"+this.source.length),this.source=this.source.substring(0,a.index)+n+this.source.substring(Preprocessor.ENDIF.lastIndex)):this.preserveLineNumbers?(e("  excl(\\n): "+Preprocessor.nlToStr(n)+", 0-"+a.index+" + "+Preprocessor.ENDIF.lastIndex+"-"+this.source.length),n=n.replace(NOT_LINE_ENDING,""),this.source=this.source.substring(0,a.index)+n+this.source.substring(Preprocessor.ENDIF.lastIndex)):(e("  excl: "+Preprocessor.nlToStr(n)+", 0-"+a.index+" + "+Preprocessor.ENDIF.lastIndex+"-"+this.source.length),n="",this.source=this.source.substring(0,a.index)+this.source.substring(Preprocessor.ENDIF.lastIndex)),""===this.source&&e("  result empty"),l=!1,Preprocessor.EXPR.lastIndex=a.index+n.length,e("  continue at "+Preprocessor.EXPR.lastIndex),"else"!==s[1]&&"elif"!==s[1]||(n="else"===s[1]?!a.include:Preprocessor.evaluate(t,s[2]),l=!n,e("  isSkip: "+l),h.push(o={include:n,index:Preprocessor.EXPR.lastIndex,lastIndex:Preprocessor.EXPR.lastIndex}),e("  push ("+h.length+"): "+JSON.stringify(o)));break;case"define":if(Preprocessor.DEFINE.lastIndex=i.index,Preprocessor.VAR.lastIndex=i.index,Preprocessor.FUNCTION.lastIndex=i.index,Preprocessor.BOOLVAR.lastIndex=i.index,null===(s=Preprocessor.DEFINE.exec(this.source)))throw new Error("Illegal #"+i[2]+": "+this.source.substring(i.index,i.index+this.errorSourceAhead)+"...");var c,u,p;if(e('  def: "'+s[1]+'"'),null!==(r=Preprocessor.VAR.exec(this.source)))p="var",c=r[1],u=r[2],e(" match3(var): "+JSON.stringify(r));else if(null!==(r=Preprocessor.FUNCTION.exec(this.source)))p="function",c=r[1],u=r[2],e(" match3(function): "+JSON.stringify(r));else{if(null===(r=Preprocessor.BOOLVAR.exec(this.source)))throw new Error("Illegal #"+i[2]+": "+this.source.substring(i.index,i.index+this.errorSourceAhead)+"...");p="var",c=r[1],u=!0,e(" match3(boolvar): "+JSON.stringify(r))}e("  type: "+p),e("  identifier: "+c),e("  value: "+u),t[c]={type:p,value:u},e("  defines  "+JSON.stringify(t));var _="";this.preserveLineNumbers&&(_=this.source.substring(i.index,Preprocessor.DEFINE.lastIndex).replace(NOT_LINE_ENDING,"")),this.source=this.source.substring(0,i.index)+d+_+this.source.substring(Preprocessor.DEFINE.lastIndex),Preprocessor.EXPR.lastIndex=i.index,e("  continue at "+Preprocessor.EXPR.lastIndex)}}return h.length>0&&e("Still on stack ("+h.length+"): "+JSON.stringify(h.pop())),this.source};var __WEBPACK_DEFAULT_EXPORT__=Preprocessor}},__webpack_module_cache__={};function __webpack_require__(t){var e=__webpack_module_cache__[t];if(void 0!==e)return e.exports;var i=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t](i,i.exports,__webpack_require__),i.exports}__webpack_require__.d=(t,e)=>{for(var i in e)__webpack_require__.o(e,i)&&!__webpack_require__.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},__webpack_require__.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),__webpack_require__.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{__webpack_require__.d(__webpack_exports__,{default:()=>jt});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{UTILS:()=>l,ajax:()=>O,ajaxSync:()=>F,basename:()=>P,cacheBust:()=>R,clamp:()=>y,cleanJson:()=>E,copyArray:()=>S,generateUUID:()=>m,getShortOpName:()=>c,keyCodeToName:()=>C,map:()=>I,prefixedHash:()=>T,request:()=>N,shortId:()=>d,shuffleArray:()=>u,simpleId:()=>b,smoothStep:()=>x,smootherStep:()=>v,uuid:()=>f});var e={};__webpack_require__.r(e),__webpack_require__.d(e,{b64decTypedArray:()=>D,b64encTypesArray:()=>k,base64Chars:()=>U,base64lookup:()=>L});var i={};__webpack_require__.r(i),__webpack_require__.d(i,{ANIM:()=>Y,Anim:()=>W});var s={};__webpack_require__.r(s),__webpack_require__.d(s,{PatchConnectionReceiver:()=>Bt,PatchConnectionSender:()=>Lt,PatchConnectorBroadcastChannel:()=>kt});class r{constructor(t){this._logs=[],this.initiator=t}stack(t){console.info("["+this.initiator+"] ",t),console.log((new Error).stack)}groupCollapsed(t){console.groupCollapsed("["+this.initiator+"] "+t)}table(t){console.table(t)}groupEnd(){console.groupEnd()}error(t){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",arguments)}info(t){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"info",arguments)}warn(t){console.warn("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"warn",arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"verbose",arguments)}log(t){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"log",arguments)}userInteraction(t){}}const n={EASINGS:["linear","absolute","smoothstep","smootherstep","Cubic In","Cubic Out","Cubic In Out","Expo In","Expo Out","Expo In Out","Sin In","Sin Out","Sin In Out","Quart In","Quart Out","Quart In Out","Quint In","Quint Out","Quint In Out","Back In","Back Out","Back In Out","Elastic In","Elastic Out","Bounce In","Bounce Out"],EASING_LINEAR:0,EASING_ABSOLUTE:1,EASING_SMOOTHSTEP:2,EASING_SMOOTHERSTEP:3,EASING_CUBICSPLINE:4,EASING_CUBIC_IN:5,EASING_CUBIC_OUT:6,EASING_CUBIC_INOUT:7,EASING_EXPO_IN:8,EASING_EXPO_OUT:9,EASING_EXPO_INOUT:10,EASING_SIN_IN:11,EASING_SIN_OUT:12,EASING_SIN_INOUT:13,EASING_BACK_IN:14,EASING_BACK_OUT:15,EASING_BACK_INOUT:16,EASING_ELASTIC_IN:17,EASING_ELASTIC_OUT:18,EASING_BOUNCE_IN:19,EASING_BOUNCE_OUT:21,EASING_QUART_IN:22,EASING_QUART_OUT:23,EASING_QUART_INOUT:24,EASING_QUINT_IN:25,EASING_QUINT_OUT:26,EASING_QUINT_INOUT:27},o={OP_PORT_TYPE_VALUE:0,OP_PORT_TYPE_FUNCTION:1,OP_PORT_TYPE_TRIGGER:1,OP_PORT_TYPE_OBJECT:2,OP_PORT_TYPE_TEXTURE:2,OP_PORT_TYPE_ARRAY:3,OP_PORT_TYPE_DYNAMIC:4,OP_PORT_TYPE_STRING:5,OP_VERSION_PREFIX:"_v"},a={PORT_DIR_IN:0,PORT_DIR_OUT:1},h={PACO_CLEAR:0,PACO_VALUECHANGE:1,PACO_OP_DELETE:2,PACO_UNLINK:3,PACO_LINK:4,PACO_LOAD:5,PACO_OP_CREATE:6,PACO_OP_ENABLE:7,PACO_OP_DISABLE:8,PACO_UIATTRIBS:9,PACO_VARIABLES:10,PACO_TRIGGERS:11,PACO_PORT_SETVARIABLE:12,PACO_PORT_SETANIMATED:13,PACO_PORT_ANIM_UPDATED:14,PACO_DESERIALIZE:15},l={float32Concat:function(t,e){t instanceof Float32Array||(t=new Float32Array(t)),e instanceof Float32Array||(e=new Float32Array(e));const i=new Float32Array(t.length+e.length);return i.set(t),i.set(e,t.length),i}},c=function(t){let e=t.split(".")[t.split(".").length-1];if(e.indexOf(o.OP_VERSION_PREFIX)>0){const t=e.split(o.OP_VERSION_PREFIX)[1];e=e.substring(0,e.length-(o.OP_VERSION_PREFIX+t).length)}return e},u=function(t){for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.seededRandom()*(e+1)),s=t[e];t[e]=t[i],t[i]=s}return t},p={},_=function(){let t=Math.random().toString(36).substr(2,9);return p.hasOwnProperty(t)&&(t=_()),p[t]=!0,t},d=_,g=function(){let t=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const i=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"==e?i:3&i|8).toString(16)}))},f=g,m=g;function E(t){for(const e in t)t[e]&&"object"==typeof objValue&&t[e].constructor===Object&&(t[e]=E(t[e])),(null===t[e]||void 0===t[e]||Array.isArray(t[e])&&0==t[e].length)&&delete t[e];return t}const T=function(t,e="id"){let i=0;if(Array.prototype.reduce)i=t.split("").reduce(((t,e)=>(t=(t<<5)-t+e.charCodeAt(0))&t),0);else if(t.length>0)for(let e=0;e<t.length;e++)i=(i<<5)-i+t.charCodeAt(e),i&=i;return e+""+i};let A=0;const b=function(){return A++,A},x=function(t){const e=Math.max(0,Math.min(1,(t-0)/1));return e*e*(3-2*e)},v=function(t){const e=Math.max(0,Math.min(1,(t-0)/1));return e*e*e*(e*(6*e-15)+10)},y=function(t,e,i){return Math.min(Math.max(t,e),i)},I=function(t,e,i,s,r,n){if(t>=i)return r;if(t<=e)return s;let o=!1;const a=Math.min(e,i),h=Math.max(e,i);a!=e&&(o=!0);let l=!1;const c=Math.min(s,r),u=Math.max(s,r);c!=s&&(l=!0);let p=0,_=0;return p=o?(h-t)*(u-c)/(h-a):(t-a)*(u-c)/(h-a),_=l?u-p:p+c,n?1==n?s+(t=Math.max(0,Math.min(1,(_-s)/(r-s))))*t*(3-2*t)*(r-s):2==n?s+(t=Math.max(0,Math.min(1,(_-s)/(r-s))))*t*t*(t*(6*t-15)+10)*(r-s):_:_};Math.randomSeed=1,Math.seededRandom=function(t,e){return 0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),t=t||1,e=e||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280,e+Math.randomSeed/233280*(t-e)},l.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},l.isNumeric=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},l.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(t){return 0===this.indexOf(t)},String.prototype.endsWith=String.prototype.endsWith||function(t){return this.match(t+"$")==t};const R=function(t){return t.indexOf("?")>-1?t+="&":t+="?",t+"cb="+CABLES.uuid()},S=function(t,e){if(!t)return null;(e=e||[]).length=t.length;for(let i=0;i<t.length;i++)e[i]=t[i];return e},P=function(t){let e="";if(!t)return"";const i=(t+"").split("/");if(i.length>0){let t=i[i.length-1].split("?");e=t[0],t=e.split("."),e=t[0]}return e},F=function(t,e,i,s,r){N({url:t,cb:e,method:i,data:s,contenttype:r,sync:!0})},O=function(t,e,i,s,r,n,o={}){N({url:t,cb:e,method:i,data:s,contenttype:r,sync:!1,jsonP:n,headers:o})},N=function(t){let e;t.hasOwnProperty("asynch")||(t.asynch=!0);try{e=new XMLHttpRequest}catch(t){}e.onreadystatechange=function(){4==e.readyState&&t.cb&&(200==e.status||0==e.status?t.cb(!1,e.responseText,e):t.cb(!0,e.responseText,e))},e.addEventListener("progress",(t=>{}));try{e.open(t.method?t.method.toUpperCase():"GET",t.url,!t.sync)}catch(i){t.cb&&t.cb(!0,i.msg,e)}if("object"==typeof t.headers){const i=Object.keys(t.headers);for(let s=0;s<i.length;s++){const r=i[s],n=t.headers[r];e.setRequestHeader(r,n)}}try{t.post||t.data?(e.setRequestHeader("Content-type",t.contenttype?t.contenttype:"application/x-www-form-urlencoded"),e.send(t.data||t.post)):e.send()}catch(i){t.cb&&t.cb(!0,i.msg,e)}},C=function(t){if(!t&&0!==t)return"Unidentified";const e={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:"Space",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};return e[t]?e[t]:String.fromCharCode(t)};window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};const w=function(t,e={}){if(!t)throw new Error("no cgl");this._log=new r("cgl_texture"),this._cgl=t,this.pixelFormat=e.pixelFormat||w.PFORMATSTR_RGBA8UB,this.tex=this._cgl.gl.createTexture(),this.id=CABLES.uuid(),this.width=0,this.height=0,this.loading=!1,this.flip=!0,this.flipped=!1,this.shadowMap=!1,this.deleted=!1,this.image=null,this.anisotropic=0,this.filter=w.FILTER_NEAREST,this.wrap=w.WRAP_CLAMP_TO_EDGE,this.texTarget=this._cgl.gl.TEXTURE_2D,e&&e.type&&(this.texTarget=e.type),this.textureType=w.TYPE_DEFAULT,this.unpackAlpha=!0,this._fromData=!0,this.name="unknown",this._glDataType=-1,this._glInternalFormat=-1,this._glDataFormat=-1,e?(this.name=e.name||this.name,e.isDepthTexture&&(this.textureType=w.TYPE_DEPTH),!0===e.isFloatingPointTexture&&(this.textureType=w.TYPE_FLOAT),"textureType"in e&&(this.textureType=e.textureType),"filter"in e&&(this.filter=e.filter),"wrap"in e&&(this.wrap=e.wrap),"unpackAlpha"in e&&(this.unpackAlpha=e.unpackAlpha),"flip"in e&&(this.flip=e.flip),"shadowMap"in e&&(this.shadowMap=e.shadowMap),"anisotropic"in e&&(this.anisotropic=e.anisotropic)):e={},!e.pixelFormat&&e.isFloatingPointTexture&&(this.pixelFormat=w.PFORMATSTR_RGBA32F),this.textureType==w.TYPE_DEPTH&&(this.pixelFormat=w.PFORMATSTR_DEPTH),e.width||(e.width=8),e.height||(e.height=8),this._cgl.profileData.profileTextureNew++,this.setFormat(w.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.profileData.addHeavyEvent("texture created",this.name,e.width+"x"+e.height),this.setSize(e.width,e.height),this.getInfoOneLine()};w.prototype.isFloatingPoint=function(){return w.isPixelFormatFloat(this.pixelFormat)},w.prototype.compareSettings=function(t){return!!t&&t.width==this.width&&t.height==this.height&&t.filter==this.filter&&t.wrap==this.wrap&&t.textureType==this.textureType&&t.unpackAlpha==this.unpackAlpha&&t.anisotropic==this.anisotropic&&t.shadowMap==this.shadowMap&&t.texTarget==this.texTarget&&t.flip==this.flip},w.prototype.clone=function(){const t=new w(this._cgl,{name:this.name,filter:this.filter,wrap:this.wrap,textureType:this.textureType,pixelFormat:this.pixelFormat,unpackAlpha:this.unpackAlpha,flip:this.flip,width:this.width,height:this.height});return this._cgl.profileData.addHeavyEvent("texture created",this.name,this.width+"x"+this.height),this.compareSettings(t)||(this._log.error("Cloned texture settings do not compare!"),this._log.error(this),this._log.error(t)),t},w.prototype.setFormat=function(t){this.pixelFormat=t.pixelFormat,this._glDataFormat=t.glDataFormat,this._glInternalFormat=t.glInternalFormat,this._glDataType=t.glDataType},w.setUpGlPixelFormat=function(t,e){const i={};e||(console.log("no pixelformatstr!"),console.log((new Error).stack),e=w.PFORMATSTR_RGBA8UB),i.pixelFormatBase=e,t.glUseHalfFloatTex&&(e==w.PFORMATSTR_RGBA32F&&(e=w.PFORMATSTR_RGBA16F),e==w.PFORMATSTR_RG32F&&(e=w.PFORMATSTR_RG16F),e==w.PFORMATSTR_R32F&&(e=w.PFORMATSTR_R16F)),i.pixelFormat=e,i.glDataType=t.gl.UNSIGNED_BYTE,i.glInternalFormat=t.gl.RGBA8,i.glDataFormat=t.gl.RGBA;let s=t.gl.FLOAT;if(1==t.glVersion&&(i.glInternalFormat=t.gl.RGBA,e==w.PFORMATSTR_RGBA16F||e==w.PFORMATSTR_RG16F||e==w.PFORMATSTR_R16F)){const e=t.enableExtension("OES_texture_half_float");if(!e)throw new Error("no half float texture extension");s=e.HALF_FLOAT_OES}return e==w.PFORMATSTR_RGBA8UB||(e==w.PFORMATSTR_RGB565?(i.glInternalFormat=t.gl.RGB565,i.glDataFormat=t.gl.RGB):e==w.PFORMATSTR_R8UB?(i.glInternalFormat=t.gl.R8,i.glDataFormat=t.gl.RED):e==w.PFORMATSTR_RG8UB?(i.glInternalFormat=t.gl.RG8,i.glDataFormat=t.gl.RG):e==w.PFORMATSTR_RGB8UB?(i.glInternalFormat=t.gl.RGB8,i.glDataFormat=t.gl.RGB):e==w.PFORMATSTR_R32F?(i.glInternalFormat=t.gl.R32F,i.glDataFormat=t.gl.RED,i.glDataType=s):e==w.PFORMATSTR_R16F?(i.glInternalFormat=t.gl.R16F,i.glDataType=s,i.glDataFormat=t.gl.RED):e==w.PFORMATSTR_RG16F?(i.glInternalFormat=t.gl.RG16F,i.glDataType=s,i.glDataFormat=t.gl.RG):e==w.PFORMATSTR_RGBA16F?(1==t.glVersion?i.glInternalFormat=t.gl.RGBA:i.glInternalFormat=t.gl.RGBA16F,i.glDataType=s):e==w.PFORMATSTR_R11FG11FB10F?(i.glInternalFormat=t.gl.R11F_G11F_B10F,i.glDataType=s,i.glDataFormat=t.gl.RGB):e==w.PFORMATSTR_RGBA32F?(1==t.glVersion?i.glInternalFormat=t.gl.RGBA:i.glInternalFormat=t.gl.RGBA32F,i.glDataType=s):e==w.PFORMATSTR_DEPTH?1==t.glVersion?(i.glInternalFormat=t.gl.DEPTH_COMPONENT,i.glDataType=t.gl.UNSIGNED_SHORT,i.glDataFormat=t.gl.DEPTH_COMPONENT):(i.glInternalFormat=t.gl.DEPTH_COMPONENT32F,i.glDataType=t.gl.FLOAT,i.glDataFormat=t.gl.DEPTH_COMPONENT):console.log("unknown pixelformat ",e)),(e.indexOf("32bit")||e==w.PFORMATSTR_R11FG11FB10F)&&(2==t.glVersion&&t.enableExtension("EXT_color_buffer_float"),2==t.glVersion&&t.enableExtension("EXT_float_blend"),t.enableExtension("OES_texture_float_linear")),e.indexOf("16bit")&&(t.enableExtension("EXT_color_buffer_half_float"),t.enableExtension("OES_texture_float_linear")),i.numColorChannels=1,0==e.indexOf("R")&&(i.numColorChannels=1),0==e.indexOf("RG")&&(i.numColorChannels=2),0==e.indexOf("RGB")&&(i.numColorChannels=3),0==e.indexOf("RGBA")&&(i.numColorChannels=4),i.glDataType&&i.glInternalFormat&&i.glDataFormat||console.log("pixelformat wrong ?!",e,i.glDataType,i.glInternalFormat,i.glDataFormat,this),i},w.prototype.setSize=function(t,e){this._cgl.aborted||((t!=t||t<=0||!t)&&(t=8),(e!=e||e<=0||!e)&&(e=8),(t>this._cgl.maxTexSize||e>this._cgl.maxTexSize)&&this._log.error("texture size too big! "+t+"x"+e+" / max: "+this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.floor(t),e=Math.floor(e),(this.width!=t||this.height!=e)&&(this.width=t,this.height=e,this.deleted=!1,this.setFormat(w.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this.shortInfoString=this.getInfoOneLine(),this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++,this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,t,e,0,this._glDataFormat,this._glDataType,null),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)))},w.prototype.initFromData=function(t,e,i,s,r){if(this.filter=s,this.wrap=r,null==s&&(this.filter=w.FILTER_LINEAR),null==r&&(this.wrap=w.WRAP_CLAMP_TO_EDGE),this.width=e,this.height=i,this._fromData=!0,this.deleted=!1,this.height>this._cgl.maxTexSize||this.width>this._cgl.maxTexSize){const t=CGL.Texture.getTempTexture(this._cgl);return this.width=t.width,this.height=t.height,this.tex=t.tex,void this._log.error("[cgl_texture] texture size to big!!!",this.width,this.height,this._cgl.maxTexSize)}this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flip),this._cgl.gl.bindTexture(this.texTarget,this.tex),this.setFormat(w.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,e,i,0,this._glDataFormat,this._glDataType,t),this._setFilter(),this.updateMipMap(),this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this._cgl.gl.bindTexture(this.texTarget,null)},w.prototype.updateMipMap=function(){2!=this._cgl.glVersion&&!this.isPowerOfTwo()||this.filter!=w.FILTER_MIPMAP||(this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)},w.prototype.initTexture=function(t,e){if(this._cgl.printError("before initTexture"),this._cgl.checkFrameStarted("texture inittexture"),this._fromData=!1,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),t.width&&(this.width=t.width),t.height&&(this.height=t.height),e&&(this.filter=e),t.height>this._cgl.maxTexSize||t.width>this._cgl.maxTexSize){const e=CGL.Texture.getTempTexture(this._cgl);return this.width=e.width,this.height=e.height,this.tex=e.tex,void this._log.error("[cgl_texture] texture size to big!!!",t.width,t.height,this._cgl.maxTexSize)}this._cgl.gl.bindTexture(this.texTarget,this.tex),this.deleted=!1,this.flipped=!this.flip,this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flipped),this.setFormat(w.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,this._glDataFormat,this._glDataType,t),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this.getInfoOneLine(),this._cgl.printError("initTexture")},w.prototype.delete=function(){this.loading||(this.deleted=!0,this.width=0,this.height=0,this._cgl.profileData.profileTextureDelete++,this._cgl.gl.deleteTexture(this.tex),this.image=null,this.tex=null)},w.prototype.isPowerOfTwo=function(){return w.isPowerOfTwo(this.width)&&w.isPowerOfTwo(this.height)},w.prototype.printInfo=function(){console.log(this.getInfo())},w.prototype.getInfoReadable=function(){const t=this.getInfo();let e="";t.name=t.name.substr(0,t.name.indexOf("?rnd="));for(const i in t)e+="* "+i+":  **"+t[i]+"**\n";return e},w.prototype.getInfoOneLine=function(){let t=this.width+"x"+this.height;return t+=" ",t+=this.pixelFormat,this.filter===CGL.Texture.FILTER_NEAREST&&(t+=" nearest"),this.filter===CGL.Texture.FILTER_LINEAR&&(t+=" linear"),this.filter===CGL.Texture.FILTER_MIPMAP&&(t+=" mipmap"),this.wrap===CGL.Texture.WRAP_CLAMP_TO_EDGE&&(t+=" clamp"),this.wrap===CGL.Texture.WRAP_REPEAT&&(t+=" repeat"),this.wrap===CGL.Texture.WRAP_MIRRORED_REPEAT&&(t+=" repeatmir"),this.shortInfoString=t,t},w.prototype.getInfoOneLineShort=function(){let t=this.width+"x"+this.height;return t+=" ",t+=this.pixelFormat,this.shortInfoString=t,t},w.prototype.getInfo=function(){return w.getTexInfo(this)},w.prototype._setFilter=function(){if(this._cgl.printError("before _setFilter"),this._fromData||this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),this.shadowMap&&(this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_MODE,this._cgl.gl.COMPARE_REF_TO_TEXTURE),this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_FUNC,this._cgl.gl.LEQUAL)),this.textureType==w.TYPE_FLOAT&&this.filter==w.FILTER_MIPMAP&&(this.filter=w.FILTER_LINEAR,this._log.stack("texture: HDR and mipmap filtering at the same time is not possible")),1!=this._cgl.glVersion||this.isPowerOfTwo()){if(this.wrap==w.WRAP_CLAMP_TO_EDGE?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE)):this.wrap==w.WRAP_REPEAT?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT)):this.wrap==w.WRAP_MIRRORED_REPEAT&&(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)),this.filter==w.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==w.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=w.FILTER_MIPMAP)throw this._log.log("unknown texture filter!",this.filter),new Error("unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}if(this.anisotropic){const t=this._cgl.enableExtension("EXT_texture_filter_anisotropic");if(t){const e=this._cgl.gl.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT);this._cgl.gl.texParameterf(this._cgl.gl.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e,this.anisotropic))}}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=w.FILTER_NEAREST,this.wrap=w.WRAP_CLAMP_TO_EDGE;this.getInfoOneLine(),this._cgl.printError("_setFilter")},w.load=function(t,e,i,s){if(!e)return i({error:!0});let r=null;t.patch.loading.existByName(e)||(r=t.patch.loading.start("texture",e));const n=new w(t);return n.name=e,t.patch.isEditorMode()&&gui.jobs().start({id:"loadtexture"+r,title:"loading texture "+CABLES.basename(e)}),n.image=new Image,n.image.crossOrigin="anonymous",n.loading=!0,s&&s.hasOwnProperty("filter")&&(n.filter=s.filter),s&&s.hasOwnProperty("flip")&&(n.flip=s.flip),s&&s.hasOwnProperty("wrap")&&(n.wrap=s.wrap),s&&s.hasOwnProperty("anisotropic")&&(n.anisotropic=s.anisotropic),s&&s.hasOwnProperty("unpackAlpha")&&(n.unpackAlpha=s.unpackAlpha),s&&s.hasOwnProperty("pixelFormat")&&(n.pixelFormat=s.pixelFormat),n.image.onabort=n.image.onerror=s=>{console.warn("[cgl.texture.load] error loading texture",e,s),n.loading=!1,r&&t.patch.loading.finished(r),i&&i({error:!0},n),t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+r)},n.image.onload=function(e){t.addNextFrameOnceCallback((()=>{n.initTexture(n.image),r&&t.patch.loading.finished(r),n.loading=!1,t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+r),i&&i(null,n)}))},n.image.src=e,n},w.getTempTexture=function(t){return t||console.error("[getTempTexture] no cgl!"),t.tempTexture||(t.tempTexture=w.getTemporaryTexture(t,256,w.FILTER_LINEAR,w.REPEAT)),t.tempTexture},w.getErrorTexture=function(t){return t||console.error("[getTempTexture] no cgl!"),t.errorTexture||(t.errorTexture=w.getTemporaryTexture(t,256,w.FILTER_LINEAR,w.REPEAT,1,.2,.2)),t.errorTexture},w.getEmptyTexture=function(t,e){if(e)return w.getEmptyTextureFloat(t);if(t||console.error("[getEmptyTexture] no cgl!"),t.tempTextureEmpty)return t.tempTextureEmpty;t.tempTextureEmpty=new w(t,{name:"emptyTexture"});const i=new Uint8Array(256).fill(0);for(let t=0;t<256;t+=4)i[t+3]=0;return t.tempTextureEmpty.initFromData(i,8,8,w.FILTER_NEAREST,w.WRAP_REPEAT),t.tempTextureEmpty},w.getEmptyTextureFloat=function(t){if(t||console.error("[getEmptyTextureFloat] no cgl!"),t.tempTextureEmptyFloat)return t.tempTextureEmptyFloat;t.tempTextureEmptyFloat=new w(t,{name:"emptyTexture",isFloatingPointTexture:!0});const e=new Float32Array(256).fill(1);for(let t=0;t<256;t+=4)e[t+3]=0;return t.tempTextureEmptyFloat.initFromData(e,8,8,w.FILTER_NEAREST,w.WRAP_REPEAT),t.tempTextureEmptyFloat},w.getRandomTexture=function(t){if(t||console.error("[getRandomTexture] no cgl!"),t.randomTexture)return t.randomTexture;const e=new Uint8Array(262144);for(let t=0;t<65536;t++)e[4*t+0]=255*Math.random(),e[4*t+1]=255*Math.random(),e[4*t+2]=255*Math.random(),e[4*t+3]=255;return t.randomTexture=new w(t),t.randomTexture.initFromData(e,256,256,w.FILTER_NEAREST,w.WRAP_REPEAT),t.randomTexture},w.getRandomFloatTexture=function(t){if(t||console.error("[getRandomTexture] no cgl!"),t.getRandomFloatTexture)return t.getRandomFloatTexture;const e=new Float32Array(262144);for(let t=0;t<65536;t++)e[4*t+0]=2*(Math.random()-.5),e[4*t+1]=2*(Math.random()-.5),e[4*t+2]=2*(Math.random()-.5),e[4*t+3]=1;return t.getRandomFloatTexture=new w(t,{isFloatingPointTexture:!0}),t.getRandomFloatTexture.initFromData(e,256,256,w.FILTER_NEAREST,w.WRAP_REPEAT),t.getRandomFloatTexture},w.getBlackTexture=function(t){if(t||this._log.error("[getBlackTexture] no cgl!"),t.blackTexture)return t.blackTexture;const e=new Uint8Array(256);for(let t=0;t<64;t++)e[4*t+0]=e[4*t+1]=e[4*t+2]=0,e[4*t+3]=255;return t.blackTexture=new w(t),t.blackTexture.initFromData(e,8,8,w.FILTER_NEAREST,w.WRAP_REPEAT),t.blackTexture},w.getEmptyCubemapTexture=function(t){const e=[t.gl.TEXTURE_CUBE_MAP_POSITIVE_X,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],i=t.gl.createTexture(),s=t.gl.TEXTURE_CUBE_MAP,r=w.FILTER_NEAREST,n=w.WRAP_CLAMP_TO_EDGE;t.profileData.profileTextureNew++,t.gl.bindTexture(s,i),t.profileData.profileTextureResize++;for(let i=0;i<6;i+=1){const r=new Uint8Array(256);t.gl.texImage2D(e[i],0,t.gl.RGBA,8,8,0,t.gl.RGBA,t.gl.UNSIGNED_BYTE,r),t.gl.texParameteri(s,t.gl.TEXTURE_MAG_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_MIN_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_S,t.gl.CLAMP_TO_EDGE),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_T,t.gl.CLAMP_TO_EDGE)}return t.gl.bindTexture(s,null),{id:CABLES.uuid(),tex:i,cubemap:i,width:8,height:8,filter:r,wrap:n,unpackAlpha:!0,flip:!0,_fromData:!0,name:"emptyCubemapTexture",anisotropic:0}},w.getTempGradientTexture=function(t){if(t||console.error("[getTempGradientTexture] no cgl!"),t.tempTextureGradient)return t.tempTextureGradient;const e=new w(t),i=256,s=new Uint8Array(262144);for(let t=0;t<i;t++)for(let e=0;e<i;e++)s[4*(e+t*i)+0]=s[4*(e+t*i)+1]=s[4*(e+t*i)+2]=255-t,s[4*(e+t*i)+3]=255;return e.initFromData(s,i,i,w.FILTER_NEAREST,w.WRAP_REPEAT),t.tempTextureGradient=e,e},w.getTemporaryTexture=function(t,e,i,s,r,n,o){void 0===r&&(r=1),void 0===n&&(n=1),void 0===o&&(o=1);const a=new w(t),h=[];for(let t=0;t<e;t++)for(let i=0;i<e;i++)(i+t)%64<32?(h.push((200+t/e*25+i/e*25)*r),h.push((200+t/e*25+i/e*25)*n),h.push((200+t/e*25+i/e*25)*o)):(h.push((40+t/e*25+i/e*25)*r),h.push((40+t/e*25+i/e*25)*n),h.push((40+t/e*25+i/e*25)*o)),h.push(255);const l=new Uint8Array(h);return a.initFromData(l,e,e,i,s),a},w.createFromImage=function(t,e,i){const s=new w(t,i=i||{});return s.flip=!1,s.image=e,s.width=e.width,s.height=e.height,i.hasOwnProperty("wrap")&&(s.wrap=i.wrap),s.initTexture(e,i.filter),s},w.fromImage=function(t,e,i,s){console.error("deprecated texture from image...");const r=new w(t);return r.flip=!1,i&&(r.filter=i),s&&(r.wrap=s),r.image=e,r.initTexture(e),r},w.isPowerOfTwo=function(t){return 1==t||2==t||4==t||8==t||16==t||32==t||64==t||128==t||256==t||512==t||1024==t||2048==t||4096==t||8192==t||16384==t},w.getTexInfo=function(t){const e={};e.name=t.name,e["power of two"]=t.isPowerOfTwo(),e.size=t.width+" x "+t.height;let i=t.texTarget;return t.texTarget==t._cgl.gl.TEXTURE_2D&&(i="TEXTURE_2D"),e.target=i,e.unpackAlpha=t.unpackAlpha,t.cubemap&&(e.cubemap=!0),t.textureType==w.TYPE_FLOAT&&(e.textureType="TYPE_FLOAT"),t.textureType==w.TYPE_HALF_FLOAT?e.textureType="TYPE_HALF_FLOAT":t.textureType==w.TYPE_DEPTH?e.textureType="TYPE_DEPTH":t.textureType==w.TYPE_DEFAULT?e.textureType="TYPE_DEFAULT":e.textureType="UNKNOWN "+this.textureType,t.wrap==w.WRAP_CLAMP_TO_EDGE?e.wrap="CLAMP_TO_EDGE":t.wrap==w.WRAP_REPEAT?e.wrap="WRAP_REPEAT":t.wrap==w.WRAP_MIRRORED_REPEAT?e.wrap="WRAP_MIRRORED_REPEAT":e.wrap="UNKNOWN",t.filter==w.FILTER_NEAREST?e.filter="FILTER_NEAREST":t.filter==w.FILTER_LINEAR?e.filter="FILTER_LINEAR":t.filter==w.FILTER_MIPMAP?e.filter="FILTER_MIPMAP":e.filter="UNKNOWN",e.pixelFormat=t.pixelFormat||"unknown",e},w.FILTER_NEAREST=0,w.FILTER_LINEAR=1,w.FILTER_MIPMAP=2,w.WRAP_REPEAT=0,w.WRAP_MIRRORED_REPEAT=1,w.WRAP_CLAMP_TO_EDGE=2,w.TYPE_DEFAULT=0,w.TYPE_DEPTH=1,w.TYPE_FLOAT=2,w.PFORMATSTR_RGB565="RGB 5/6/5bit ubyte",w.PFORMATSTR_R8UB="R 8bit ubyte",w.PFORMATSTR_RG8UB="RG 8bit ubyte",w.PFORMATSTR_RGB8UB="RGB 8bit ubyte",w.PFORMATSTR_RGBA8UB="RGBA 8bit ubyte",w.PFORMATSTR_R11FG11FB10F="RGB 11/11/10bit float",w.PFORMATSTR_R16F="R 16bit float",w.PFORMATSTR_RG16F="RG 16bit float",w.PFORMATSTR_RGB16F="RGB 16bit float",w.PFORMATSTR_RGBA16F="RGBA 16bit float",w.PFORMATSTR_R32F="R 32bit float",w.PFORMATSTR_RGBA32F="RGBA 32bit float",w.PFORMATSTR_DEPTH="DEPTH",w.PIXELFORMATS=[w.PFORMATSTR_RGB565,w.PFORMATSTR_R8UB,w.PFORMATSTR_RG8UB,w.PFORMATSTR_RGB8UB,w.PFORMATSTR_RGBA8UB,w.PFORMATSTR_R11FG11FB10F,w.PFORMATSTR_R16F,w.PFORMATSTR_RG16F,w.PFORMATSTR_RGBA16F,w.PFORMATSTR_R32F,w.PFORMATSTR_RGBA32F],w.isPixelFormatFloat=t=>(t||"").indexOf("float")>-1,w.isPixelFormatHalfFloat=t=>(t||"").indexOf("float")>-1&&(t||"").indexOf("16bit")>-1;const M=function(t,e,i,s){if(1==t.glVersion)return console.log("framebuffer2 used on webgl1");this._log=new r("cgl_framebuffer2"),this.Framebuffer2DrawTargetsDefault=null,this.Framebuffer2BlittingFramebuffer=null,this.Framebuffer2FinalFramebuffer=null,this._cgl=t,this._cgl.printError("before framebuffer2 constructor"),this._width=0,this._height=0,this.valid=!0,this._depthRenderbuffer=null,this._frameBuffer=null,this._textureFrameBuffer=null,this._colorRenderbuffers=[],this._drawTargetArray=[],this._disposed=!1,this.Framebuffer2BlittingFramebuffer||(this.Framebuffer2BlittingFramebuffer=t.gl.createFramebuffer()),this.Framebuffer2FinalFramebuffer||(this.Framebuffer2FinalFramebuffer=t.gl.createFramebuffer()),this.Framebuffer2DrawTargetsDefault||(this.Framebuffer2DrawTargetsDefault=[t.gl.COLOR_ATTACHMENT0]),this._options=s||{isFloatingPointTexture:!1},this.name=this._options.name||"unknown",this._cgl.profileData.addHeavyEvent("framebuffer create",this.name),this._options.hasOwnProperty("numRenderBuffers")||(this._options.numRenderBuffers=1),this._options.hasOwnProperty("depth")||(this._options.depth=!0),this._options.hasOwnProperty("clear")||(this._options.clear=!0),this._options.hasOwnProperty("multisampling")||(this._options.multisampling=!1,this._options.multisamplingSamples=0),this._options.multisamplingSamples&&(this._cgl.glSlowRenderer&&(this._options.multisamplingSamples=0),this._cgl.gl.MAX_SAMPLES?this._options.multisamplingSamples=Math.min(this._cgl.maxSamples,this._options.multisamplingSamples):this._options.multisamplingSamples=0),this._options.hasOwnProperty("filter")||(this._options.filter=w.FILTER_LINEAR),this._options.hasOwnProperty("wrap")||(this._options.wrap=w.WRAP_REPEAT),this._numRenderBuffers=this._options.numRenderBuffers,this._colorTextures=[],s.pixelFormat||(s.isFloatingPointTexture?this._options.pixelFormat=w.PFORMATSTR_RGBA32F:this._options.pixelFormat=w.PFORMATSTR_RGBA8UB);for(let e=0;e<this._numRenderBuffers;e++)this._colorTextures[e]=new w(t,{name:"fb2 "+this.name+" "+e,isFloatingPointTexture:this._options.isFloatingPointTexture,pixelFormat:this._options.pixelFormat,filter:this._options.filter,wrap:this._options.wrap});let n=w.FILTER_NEAREST;this._options.shadowMap&&(n=w.FILTER_LINEAR);const o=512;this._options.depth&&(this._textureDepth=new w(t,{name:"fb2 depth "+this.name,isDepthTexture:!0,filter:n,shadowMap:this._options.shadowMap||!1,width:e||o,height:i||o})),t.aborted||(this.setSize(e||o,i||o),this._cgl.printError("framebuffer2 constructor"))};M.prototype.getWidth=function(){return this._width},M.prototype.getHeight=function(){return this._height},M.prototype.getGlFrameBuffer=function(){return this._frameBuffer},M.prototype.getDepthRenderBuffer=function(){return this._depthRenderbuffer},M.prototype.getTextureColor=function(){return this._colorTextures[0]},M.prototype.getTextureColorNum=function(t){return this._colorTextures[t]},M.prototype.getTextureDepth=function(){return this._textureDepth},M.prototype.setFilter=function(t){for(let e=0;e<this._numRenderBuffers;e++)this._colorTextures[e].filter=t,this._colorTextures[e].setSize(this._width,this._height)},M.prototype.delete=M.prototype.dispose=function(){this._disposed=!0;let t=0;for(t=0;t<this._numRenderBuffers;t++)this._colorTextures[t].delete();for(this._textureDepth&&this._textureDepth.delete(),t=0;t<this._numRenderBuffers;t++)this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[t]);this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuffer),this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer)},M.prototype.setSize=function(t,e){if(this._disposed)return this._log.warn("disposed framebuffer setsize...");this._cgl.profileData.addHeavyEvent("framebuffer resize",this.name);let i=0;if(this._width=Math.floor(t),this._height=Math.floor(e),this._width=Math.min(this._width,this._cgl.maxTexSize),this._height=Math.min(this._height,this._cgl.maxTexSize),this._cgl.profileData.profileFrameBuffercreate++,this._frameBuffer){for(i=0;i<this._numRenderBuffers;i++)this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuffer),this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer)}this._frameBuffer=this._cgl.gl.createFramebuffer(),this._textureFrameBuffer=this._cgl.gl.createFramebuffer();const s=this._options.depth;for(i=0;i<this._numRenderBuffers;i++)this._colorTextures[i].setSize(this._width,this._height);for(i=0;i<this._numRenderBuffers;i++){const t=this._cgl.gl.createRenderbuffer();this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,t);const e=w.setUpGlPixelFormat(this._cgl,this._options.pixelFormat);let s=e.glInternalFormat;CGL.Texture.isPixelFormatHalfFloat(e.pixelFormat)?(this._cgl.enableExtension("EXT_color_buffer_half_float"),this._cgl.enableExtension("OES_texture_float_linear")||(this._options.filter=w.FILTER_NEAREST,this.setFilter(this._options.filter))):CGL.Texture.isPixelFormatFloat(e.pixelFormat)&&(this._cgl.enableExtension("OES_texture_float_linear")||(console.log("no linear pixelformat,using nearest"),this._options.filter=w.FILTER_NEAREST,this.setFilter(this._options.filter))),this._options.multisampling&&this._options.multisamplingSamples?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,s,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,s,this._width,this._height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+i,this._cgl.gl.RENDERBUFFER,t),this._colorRenderbuffers[i]=t}for(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._textureFrameBuffer),i=0;i<this._numRenderBuffers;i++)this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+i,this._cgl.gl.TEXTURE_2D,this._colorTextures[i].tex,0);this._options.depth&&this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.TEXTURE_2D,this._textureDepth.tex,0),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer);let r=this._cgl.gl.DEPTH_COMPONENT32F;for(this._cgl.glSlowRenderer&&(r=this._cgl.gl.DEPTH_COMPONENT16),s&&(this._textureDepth.setSize(this._width,this._height),this._depthRenderbuffer=this._cgl.gl.createRenderbuffer(),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer),this._options.isFloatingPointTexture,this._options.multisampling?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,r,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,r,this._width,this._height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer)),this._drawTargetArray.length=0,i=0;i<this._numRenderBuffers;i++)this._drawTargetArray.push(this._cgl.gl.COLOR_ATTACHMENT0+i);this._cgl.gl.isFramebuffer(this._textureFrameBuffer)||this._log.warn("invalid framebuffer");const n=this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);if(n!=this._cgl.gl.FRAMEBUFFER_COMPLETE)switch(this._log.error("framebuffer incomplete: "+this.name,this),n){case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",this),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:throw this._log.warn("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");default:throw this.valid=!1,this._log.warn("incomplete framebuffer",n,this._frameBuffer),this._cgl.printError(),this._cgl.exitError("Framebuffer incomplete..."),this._frameBuffer=null,new Error("Incomplete framebuffer: "+n)}this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null)},M.prototype.renderStart=function(){if(this._disposed)return this._log.warn("disposed framebuffer renderStart...");this._cgl.checkFrameStarted("fb2 renderstart"),this._cgl.pushModelMatrix(),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.pushGlFrameBuffer(this._frameBuffer),this._cgl.pushFrameBuffer(this),this._cgl.pushPMatrix(),this._cgl.pushViewPort(0,0,this._width,this._height),this._cgl.gl.drawBuffers(this._drawTargetArray),this._options.clear&&(this._cgl.gl.clearColor(0,0,0,0),this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT))},M.prototype.clear=function(){this._numRenderBuffers<=1?(this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this._textureFrameBuffer)):this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.gl.drawBuffers(this._drawTargetArray);for(let t=0;t<this._numRenderBuffers;t++)this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+t,this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex,0),this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR,t,[0,0,0,0]);this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null)},M.prototype.renderEnd=function(){if(this._disposed)return this._log.warn("disposed framebuffer renderEnd...");if(this._cgl.popPMatrix(),this._cgl.profileData.profileFramebuffer++,this._numRenderBuffers<=1)this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this._textureFrameBuffer),this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR,0,[0,0,0,1]),this._cgl.gl.blitFramebuffer(0,0,this._width,this._height,0,0,this._width,this._height,this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT,this._cgl.gl.NEAREST);else{this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.TEXTURE_2D,this._textureDepth.tex,0);for(let t=0;t<this._numRenderBuffers;t++){this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.RENDERBUFFER,this._colorRenderbuffers[t]),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex,0),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this.Framebuffer2FinalFramebuffer);let e=this._cgl.gl.COLOR_BUFFER_BIT;0==t&&(e|=this._cgl.gl.DEPTH_BUFFER_BIT),this._cgl.gl.blitFramebuffer(0,0,this._width,this._height,0,0,this._width,this._height,e,this._cgl.gl.NEAREST)}}if(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.popFrameBuffer(),this._cgl.popModelMatrix(),this._cgl.popViewPort(),this._colorTextures[0].filter==w.FILTER_MIPMAP)for(let t=0;t<this._numRenderBuffers;t++)this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex),this._colorTextures[t].updateMipMap(),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null)};const U="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",B=new Uint8Array(256);for(let t=0;t<U.length;t++)B[U.charCodeAt(t)]=t;const L=B,k=function(t){t.buffer&&(t=t.buffer);let e,i=new Uint8Array(t),s=i.length,r="";for(e=0;e<s;e+=3)r+=U[i[e]>>2],r+=U[(3&i[e])<<4|i[e+1]>>4],r+=U[(15&i[e+1])<<2|i[e+2]>>6],r+=U[63&i[e+2]];return s%3==2?r=r.substring(0,r.length-1)+"=":s%3==1&&(r=r.substring(0,r.length-2)+"=="),r},D=function(t){let e,i,s,r,n,o=.75*t.length,a=t.length,h=0;"="===t[t.length-1]&&(o--,"="===t[t.length-2]&&o--);let l=new ArrayBuffer(o),c=new Uint8Array(l);for(e=0;e<a;e+=4)i=L[t.charCodeAt(e)],s=L[t.charCodeAt(e+1)],r=L[t.charCodeAt(e+2)],n=L[t.charCodeAt(e+3)],c[h++]=i<<2|s>>4,c[h++]=(15&s)<<4|r>>2,c[h++]=(3&r)<<6|63&n;return l};class V{constructor(t){this._init(),this._first=!0,this._wireMesh=null,t&&this.apply(t)}_init(){this._max=[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE],this._min=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],this._center=[0,0,0],this._size=[0,0,0],this._maxAxis=0,this._first=!0}get maxAxis(){return this._maxAxis||1}get size(){return this._size}get center(){return this._center}get x(){return this._center[0]}get y(){return this._center[1]}get z(){return this._center[2]}get minX(){return this._min[0]}get minY(){return this._min[1]}get minZ(){return this._min[2]}get maxX(){return this._max[0]}get maxY(){return this._max[1]}get maxZ(){return this._max[2]}apply(t,e){if(t){if(t instanceof V){const e=t;this.applyPos(e.maxX,e.maxY,e.maxZ),this.applyPos(e.minX,e.minY,e.minZ)}else for(let e=0;e<t.vertices.length;e+=3)this.applyPos(t.vertices[e],t.vertices[e+1],t.vertices[e+2]);this.calcCenterSize()}}copy(){return new V(this)}get changed(){return!(this._max[0]==-Number.MAX_VALUE&&this._max[1]==-Number.MAX_VALUE&&this._max[2]==-Number.MAX_VALUE)}applyPos(t,e,i){if(t!=Number.MAX_VALUE&&t!=-Number.MAX_VALUE&&e!=Number.MAX_VALUE&&e!=-Number.MAX_VALUE&&i!=Number.MAX_VALUE&&i!=-Number.MAX_VALUE&&CABLES.UTILS.isNumeric(t)&&CABLES.UTILS.isNumeric(e)&&CABLES.UTILS.isNumeric(i)){if(this._first)return this._max[0]=t,this._max[1]=e,this._max[2]=i,this._min[0]=t,this._min[1]=e,this._min[2]=i,void(this._first=!1);this._max[0]=Math.max(this._max[0],t),this._max[1]=Math.max(this._max[1],e),this._max[2]=Math.max(this._max[2],i),this._min[0]=Math.min(this._min[0],t),this._min[1]=Math.min(this._min[1],e),this._min[2]=Math.min(this._min[2],i)}}calcCenterSize(){this._first||(this._size[0]=this._max[0]-this._min[0],this._size[1]=this._max[1]-this._min[1],this._size[2]=this._max[2]-this._min[2],this._center[0]=(this._min[0]+this._max[0])/2,this._center[1]=(this._min[1]+this._max[1])/2,this._center[2]=(this._min[2]+this._max[2])/2,this._maxAxis=Math.max(this._size[2],Math.max(this._size[0],this._size[1])))}mulMat4(t){this._first&&(this._max[0]=0,this._max[1]=0,this._max[2]=0,this._min[0]=0,this._min[1]=0,this._min[2]=0,this._first=!1),vec3.transformMat4(this._max,this._max,t),vec3.transformMat4(this._min,this._min,t),this.calcCenterSize()}render(t,e){this._wireMesh||(this._wireMesh=new CGL.WireCube(t)),t.pushModelMatrix(),mat4.translate(t.mMatrix,t.mMatrix,this._center),this._wireMesh.render(t,this._size[0]/2,this._size[1]/2,this._size[2]/2),t.popModelMatrix()}}const G=function(t){this.name=t||"unknown",this._log=new r("cgl_geometry"),this.faceVertCount=3,this.glPrimitive=null,this._attributes={},this._vertices=[],this.verticesIndices=[],this.isGeometry=!0,this.morphTargets=[],Object.defineProperty(this,"vertices",{get(){return this._vertices},set(t){this.setVertices(t)}}),Object.defineProperty(this,"texCoords",{get(){const t=this.getAttribute("texCoords");return t?t.data:[]},set(t){this.setAttribute("texCoords",t,2)}}),Object.defineProperty(this,"vertexNormals",{get(){const t=this.getAttribute("vertexNormals");return t?t.data:[]},set(t){this.setAttribute("vertexNormals",t,3)}}),Object.defineProperty(this,"tangents",{get(){const t=this.getAttribute("tangents");return t?t.data:[]},set(t){this.setAttribute("tangents",t,3)}}),Object.defineProperty(this,"biTangents",{get(){const t=this.getAttribute("biTangents");return t?t.data:[]},set(t){this.setAttribute("biTangents",t,3)}}),Object.defineProperty(this,"vertexColors",{get(){const t=this.getAttribute("vertexColors");return t?t.data:[]},set(t){this.setAttribute("vertexColors",t,4)}})};G.prototype.clear=function(){this._vertices=new Float32Array([]),this.verticesIndices=[],this.texCoords=new Float32Array([]),this.vertexNormals=new Float32Array([]),this.tangents=[],this.biTangents=[],this._attributes={}},G.prototype.getAttributes=function(){return this._attributes},G.prototype.getAttribute=function(t){for(const e in this._attributes)if(this._attributes[e].name==t)return this._attributes[e];return null},G.prototype.setAttribute=function(t,e,i){let s="";(!i||i>4)&&(console.log("itemsize wrong?",i,t),this._log.stack("itemsize"),i=3),1==i?s="float":2==i?s="vec2":3==i?s="vec3":4==i&&(s="vec4");const r={name:t,data:e,itemSize:i,type:s};this._attributes[t]=r},G.prototype.copyAttribute=function(t,e){const i=this.getAttribute(t);e.setAttribute(t,new Float32Array(i.data),i.itemSize)},G.prototype.setVertices=function(t){t instanceof Float32Array?this._vertices=t:this._vertices=new Float32Array(t)},G.prototype.setTexCoords=function(t){t instanceof Float32Array?this.texCoords=t:this.texCoords=new Float32Array(t)},G.prototype.calcNormals=function(t){const e={smooth:t};this.calculateNormals(e)},G.prototype.flipNormals=function(t,e,i){let s=vec3.create();null==t&&(t=1),null==e&&(e=1),null==i&&(i=1);for(let r=0;r<this.vertexNormals.length;r+=3)vec3.set(s,this.vertexNormals[r+0],this.vertexNormals[r+1],this.vertexNormals[r+2]),s[0]*=-t,s[1]*=-e,s[2]*=-i,vec3.normalize(s,s),this.vertexNormals[r+0]=s[0],this.vertexNormals[r+1]=s[1],this.vertexNormals[r+2]=s[2]},G.prototype.getNumTriangles=function(){return this.verticesIndices&&this.verticesIndices.length?this.verticesIndices.length/3:this.vertices.length/3},G.prototype.flipVertDir=function(){const t=[];t.length=this.verticesIndices.length;for(let e=0;e<this.verticesIndices.length;e+=3)t[e]=this.verticesIndices[e+2],t[e+1]=this.verticesIndices[e+1],t[e+2]=this.verticesIndices[e];this.verticesIndices=t},G.prototype.setPointVertices=function(t){if(t.length%3==0){t instanceof Float32Array?this.vertices=t:this.vertices=new Float32Array(t),this.texCoords instanceof Float32Array||(this.texCoords=new Float32Array(t.length/3*2)),this.verticesIndices.length=t.length/3;for(let e=0;e<t.length/3;e++)this.verticesIndices[e]=e,this.texCoords[2*e]=0,this.texCoords[2*e+1]=0}else this._log.error("SetPointVertices: Array must be multiple of three.")},G.prototype.merge=function(t){if(!t)return;if(this.isIndexed()!=t.isIndexed()&&(this.isIndexed()&&this.unIndex(!1,!0),t.isIndexed())){const e=t.copy();e.unIndex(!1,!0),t=e}const e=this.verticesIndices.length,i=this._vertices.length/3;this.verticesIndices.length=this.verticesIndices.length+t.verticesIndices.length;for(let s=0;s<t.verticesIndices.length;s++)this.verticesIndices[e+s]=t.verticesIndices[s]+i;this.vertices=l.float32Concat(this._vertices,t.vertices),this.texCoords=l.float32Concat(this.texCoords,t.texCoords),this.vertexNormals=l.float32Concat(this.vertexNormals,t.vertexNormals),this.tangents=l.float32Concat(this.tangents,t.tangents),this.biTangents=l.float32Concat(this.biTangents,t.biTangents)},G.prototype.copy=function(){const t=new G(this.name+" copy");if(t.faceVertCount=this.faceVertCount,t.glPrimitive=this.glPrimitive,t.setVertices(this._vertices.slice(0)),this.verticesIndices){t.verticesIndices.length=this.verticesIndices.length;for(let e=0;e<this.verticesIndices.length;e++)t.verticesIndices[e]=this.verticesIndices[e]}for(let e in this._attributes)this.copyAttribute(e,t);t.morphTargets.length=this.morphTargets.length;for(let e=0;e<this.morphTargets.length;e++)t.morphTargets[e]=this.morphTargets[e];return t},G.prototype.calculateNormals=function(t){!1===(t=t||{}).smooth&&this.unIndex();const e=vec3.create(),i=vec3.create(),s=vec3.create();function r(r){return vec3.subtract(e,r[0],r[1]),vec3.subtract(i,r[0],r[2]),vec3.cross(s,e,i),vec3.normalize(s,s),t&&t.forceZUp&&s[2]<0&&(s[0]*=-1,s[1]*=-1,s[2]*=-1),s}this.getVertexVec=function(t){const e=[0,0,0];return e[0]=this.vertices[3*t+0],e[1]=this.vertices[3*t+1],e[2]=this.vertices[3*t+2],e},this.vertexNormals instanceof Float32Array&&this.vertexNormals.length==this.vertices.length||(this.vertexNormals=new Float32Array(this.vertices.length));for(let t=0;t<this.vertices.length;t++)this.vertexNormals[t]=0;if(this.isIndexed()){const t=[];t.length=Math.floor(this.verticesIndices.length/3);for(let e=0;e<this.verticesIndices.length;e+=3){const i=[this.getVertexVec(this.verticesIndices[e+0]),this.getVertexVec(this.verticesIndices[e+1]),this.getVertexVec(this.verticesIndices[e+2])];t[e/3]=r(i),this.vertexNormals[3*this.verticesIndices[e+0]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+0]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+0]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+1]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+1]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+1]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+2]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+2]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+2]+2]+=t[e/3][2]}for(let t=0;t<this.verticesIndices.length;t+=3)for(let e=0;e<3;e++){const i=[this.vertexNormals[3*this.verticesIndices[t+e]+0],this.vertexNormals[3*this.verticesIndices[t+e]+1],this.vertexNormals[3*this.verticesIndices[t+e]+2]];vec3.normalize(i,i),this.vertexNormals[3*this.verticesIndices[t+e]+0]=i[0],this.vertexNormals[3*this.verticesIndices[t+e]+1]=i[1],this.vertexNormals[3*this.verticesIndices[t+e]+2]=i[2]}}else{const t=[];for(let e=0;e<this.vertices.length;e+=9){const i=r([[this.vertices[e+0],this.vertices[e+1],this.vertices[e+2]],[this.vertices[e+3],this.vertices[e+4],this.vertices[e+5]],[this.vertices[e+6],this.vertices[e+7],this.vertices[e+8]]]);t.push(i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2])}this.vertexNormals=t}},G.prototype.calcTangentsBitangents=function(){if(!this.vertices.length)return;if(!this.vertexNormals.length)return;if(!this.texCoords.length){const t=this.vertices.length/3*2;this.texCoords=new Float32Array(t);for(let e=0;e<t;e+=1)this.texCoords[e]=0}if(!this.verticesIndices||!this.verticesIndices.length)return;if(this.verticesIndices.length%3!=0)return void this._log.error("Vertex indices mismatch!");const t=this.verticesIndices.length/3,e=this.vertices.length/3;this.tangents=new Float32Array(this.vertexNormals.length),this.biTangents=new Float32Array(this.vertexNormals.length);const i=[];i.length=2*e;const s=vec3.create(),r=vec3.create(),n=vec3.create(),o=vec2.create(),a=vec2.create(),h=vec2.create(),l=vec3.create(),c=vec3.create();for(let u=0;u<t;u+=1){const t=this.verticesIndices[3*u],p=this.verticesIndices[3*u+1],_=this.verticesIndices[3*u+2];vec3.set(s,this.vertices[3*t],this.vertices[3*t+1],this.vertices[3*t+2]),vec3.set(r,this.vertices[3*p],this.vertices[3*p+1],this.vertices[3*p+2]),vec3.set(n,this.vertices[3*_],this.vertices[3*_+1],this.vertices[3*_+2]),vec2.set(o,this.texCoords[2*t],this.texCoords[2*t+1]),vec2.set(a,this.texCoords[2*p],this.texCoords[2*p+1]),vec2.set(h,this.texCoords[2*_],this.texCoords[2*_+1]);const d=r[0]-s[0],g=n[0]-s[0],f=r[1]-s[1],m=n[1]-s[1],E=r[2]-s[2],T=n[2]-s[2],A=a[0]-o[0],b=h[0]-o[0],x=a[1]-o[1],v=h[1]-o[1],y=1/(A*v-b*x);vec3.set(l,(v*d-x*g)*y,(v*f-x*m)*y,(v*E-x*T)*y),vec3.set(c,(A*g-b*d)*y,(A*m-b*f)*y,(A*T-b*E)*y),i[t]=l,i[p]=l,i[_]=l,i[t+e]=c,i[p+e]=c,i[_+e]=c}const u=vec3.create(),p=vec3.create(),_=vec3.create(),d=vec3.create(),g=vec3.create(),f=vec3.create(),m=vec3.create(),E=vec3.create();for(let t=0;t<e;t+=1){if(!i[t])continue;vec3.set(u,this.vertexNormals[3*t],this.vertexNormals[3*t+1],this.vertexNormals[3*t+2]),vec3.set(p,i[t][0],i[t][1],i[t][2]);const s=vec3.dot(u,p);vec3.scale(g,u,s),vec3.subtract(f,p,g),vec3.normalize(E,f),vec3.cross(m,u,p),vec3.dot(m,i[t+e]);const r=1;vec3.scale(_,E,1/r),vec3.cross(d,u,_),this.tangents[3*t+0]=_[0],this.tangents[3*t+1]=_[1],this.tangents[3*t+2]=_[2],this.biTangents[3*t+0]=d[0],this.biTangents[3*t+1]=d[1],this.biTangents[3*t+2]=d[2]}},G.prototype.isIndexed=function(){return 0==this._vertices.length||0!=this.verticesIndices.length},G.prototype.unIndex=function(t,e){const i=[],s=[];let r=0;for(let t in this._attributes){const e=this._attributes[t];let i=[];for(let t=0;t<this.verticesIndices.length;t+=3)for(let s=0;s<3;s++)3==e.itemSize?i.push(e.data[3*this.verticesIndices[t+s]+0],e.data[3*this.verticesIndices[t+s]+1],e.data[3*this.verticesIndices[t+s]+2]):4==e.itemSize?i.push(e.data[4*this.verticesIndices[t+s]+0],e.data[4*this.verticesIndices[t+s]+1],e.data[4*this.verticesIndices[t+s]+2],e.data[4*this.verticesIndices[t+s]+3]):2==e.itemSize?i.push(e.data[2*this.verticesIndices[t+s]+0],e.data[2*this.verticesIndices[t+s]+1]):1==e.itemSize?i.push(e.data[this.verticesIndices[t+s]]):console.log("unknown attr",e);this.setAttribute(e.name,i,e.itemSize)}for(let t=0;t<this.verticesIndices.length;t+=3)i.push(this.vertices[3*this.verticesIndices[t+0]+0],this.vertices[3*this.verticesIndices[t+0]+1],this.vertices[3*this.verticesIndices[t+0]+2]),s.push(r),r++,i.push(this.vertices[3*this.verticesIndices[t+1]+0],this.vertices[3*this.verticesIndices[t+1]+1],this.vertices[3*this.verticesIndices[t+1]+2]),s.push(r),r++,i.push(this.vertices[3*this.verticesIndices[t+2]+0],this.vertices[3*this.verticesIndices[t+2]+1],this.vertices[3*this.verticesIndices[t+2]+2]),s.push(r),r++;this.vertices=i,this.verticesIndices=[],t&&(this.verticesIndices=s),e||this.calculateNormals()},G.prototype.calcBarycentric=function(){let t=[];t.length=this.vertices.length;for(let e=0;e<this.vertices.length;e++)t[e]=0;let e=0;for(let i=0;i<this.vertices.length;i+=3)t[i+e]=1,e++,3==e&&(e=0);this.setAttribute("attrBarycentric",t,3)},G.prototype.getBounds=function(){return new V(this)},G.prototype.center=function(t,e,i){void 0===t&&(t=!0,e=!0,i=!0);let s=0;const r=this.getBounds(),n=[r.minX+(r.maxX-r.minX)/2,r.minY+(r.maxY-r.minY)/2,r.minZ+(r.maxZ-r.minZ)/2];for(s=0;s<this.vertices.length;s+=3)this.vertices[s+0]==this.vertices[s+0]&&(t&&(this.vertices[s+0]-=n[0]),e&&(this.vertices[s+1]-=n[1]),i&&(this.vertices[s+2]-=n[2]));return n},G.prototype.mapTexCoords2d=function(){const t=this.getBounds(),e=this.vertices.length/3;this.texCoords=new Float32Array(2*e);for(let i=0;i<e;i++){const e=this.vertices[3*i+0],s=this.vertices[3*i+1];this.texCoords[2*i+0]=e/(t.maxX-t.minX)+.5,this.texCoords[2*i+1]=1-s/(t.maxY-t.minY)+.5}},G.prototype.getInfoOneLine=function(){let t="";return 3==this.faceVertCount&&this.verticesIndices?t+=this.verticesIndices.length/3:t+=0,t+=" tris ",this.vertices?t+=this.vertices.length/3:t+=0,t+=" verts",t},G.prototype.getInfo=function(){const t={};return 3==this.faceVertCount&&this.verticesIndices?t.numFaces=this.verticesIndices.length/3:t.numFaces=0,this.verticesIndices&&this.verticesIndices.length&&(t.indices=this.verticesIndices.length),this.vertices?t.numVerts=this.vertices.length/3:t.numVerts=0,this.vertexNormals?t.numNormals=this.vertexNormals.length/3:t.numNormals=0,this.texCoords?t.numTexCoords=this.texCoords.length/2:t.numTexCoords=0,this.tangents?t.numTangents=this.tangents.length/3:t.numTangents=0,this.biTangents?t.numBiTangents=this.biTangents.length/3:t.numBiTangents=0,this.biTangents?t.numBiTangents=this.biTangents.length/3:t.numBiTangents=0,this.vertexColors?t.numVertexColors=this.vertexColors.length/4:t.numVertexColors=0,this.getAttributes()?t.numAttribs=Object.keys(this.getAttributes()).length:t.numAttribs=0,t.isIndexed=this.isIndexed(),t},G.buildFromFaces=function(t,e,i){const s=[],r=[];for(let e=0;e<t.length;e+=3){const n=t[e+0],o=t[e+1],a=t[e+2],h=[-1,-1,-1];if(i)for(let t=0;t<s.length;t+=3)s[t+0]==n[0]&&s[t+1]==n[1]&&s[t+2]==n[2]&&(h[0]=t/3),s[t+0]==o[0]&&s[t+1]==o[1]&&s[t+2]==o[2]&&(h[1]=t/3),s[t+0]==a[0]&&s[t+1]==a[1]&&s[t+2]==a[2]&&(h[2]=t/3);-1==h[0]&&(s.push(n[0],n[1],n[2]),h[0]=(s.length-1)/3),-1==h[1]&&(s.push(o[0],o[1],o[2]),h[1]=(s.length-1)/3),-1==h[2]&&(s.push(a[0],a[1],a[2]),h[2]=(s.length-1)/3),r.push(parseInt(h[0],10)),r.push(parseInt(h[1],10)),r.push(parseInt(h[2],10))}const n=new G(e);return n.name=e,n.vertices=s,n.verticesIndices=r,n},G.json2geom=function(t){const e=new G("jsonMeshGeom");if(e.verticesIndices=[],e.vertices=t.vertices||[],e.vertexNormals=t.normals||[],e.vertexColors=t.colors||[],e.tangents=t.tangents||[],e.biTangents=t.bitangents||[],t.texturecoords&&e.setTexCoords(t.texturecoords[0]),t.vertices_b64&&(e.vertices=new Float32Array(D(t.vertices_b64))),t.normals_b64&&(e.vertexNormals=new Float32Array(D(t.normals_b64))),t.tangents_b64&&(e.tangents=new Float32Array(D(t.tangents_b64))),t.bitangents_b64&&(e.biTangents=new Float32Array(D(t.bitangents_b64))),t.texturecoords_b64&&e.setTexCoords(new Float32Array(D(t.texturecoords_b64[0]))),t.faces_b64)e.verticesIndices=new Uint32Array(D(t.faces_b64));else{e.verticesIndices.length=3*t.faces.length;for(let i=0;i<t.faces.length;i++)e.verticesIndices[3*i]=t.faces[i][0],e.verticesIndices[3*i+1]=t.faces[i][1],e.verticesIndices[3*i+2]=t.faces[i][2]}return e};const H=function(){this._log=new r("eventtaget"),this._eventCallbacks={},this._logName="",this._logEvents=!1,this._listeners={},CABLES.eventTargetProfile=CABLES.eventTargetProfile||{},this.addEventListener=this.on=function(t,e,i){const s={id:(i||"")+CABLES.simpleId(),name:t,cb:e};return this._eventCallbacks[t]?this._eventCallbacks[t].push(s):this._eventCallbacks[t]=[s],this._listeners[s.id]=s,s.id},this.hasEventListener=function(t,e){return t&&!e?!!this._listeners[t]:(this._log.warn("old eventtarget function haseventlistener!"),t&&e&&this._eventCallbacks[t]?-1!=this._eventCallbacks[t].indexOf(e):void 0)},this.removeEventListener=this.off=function(t,e){if(null==t)return;if(!e){const e=this._listeners[t];if(!e)return void console.log("could not find event...");let i=!0;for(;i;){i=!1;let s=-1;for(let r=0;r<this._eventCallbacks[e.name].length;r++)0===this._eventCallbacks[e.name][r].id.indexOf(t)&&(i=!0,s=r);-1!==s&&(this._eventCallbacks[e.name].splice(s,1),delete this._listeners[t])}return}this._log.stack(" old function signature: removeEventListener! use listener id");let i=null;for(let s=0;s<this._eventCallbacks[t].length;s++)this._eventCallbacks[t][s].cb==e&&(i=s);null!==i?delete this._eventCallbacks[i]:this._log.warn("removeEventListener not found "+t)},this.logEvents=function(t,e){this._logEvents=t,this._logName=e},this.emitEvent=function(t,e,i,s,r,n,o){if(this._logEvents&&console.log("[event] ",this._logName,t,this._eventCallbacks),this._eventCallbacks[t]){const a=[];for(let e=0;e<this._eventCallbacks[t].length;e++)a[t]||(a[t]=[]),a[t].push(this._eventCallbacks[t][e]);if(a[t])for(let h=0;h<a[t].length;h++)if(a[t][h]){const l=this.constructor.name+" "+t;CABLES.eventTargetProfile[l]=CABLES.eventTargetProfile[l]||{name:this.constructor.name,event:t,count:0},CABLES.eventTargetProfile[l].active=this._eventCallbacks[t].length,CABLES.eventTargetProfile[l].count++,a[t][h].cb(e,i,s,r,n,o)}}else this._logEvents&&console.log("[event] has no event callback",t,this._eventCallbacks)}},z=function(t){this.time=0,this.value=0,this.onChange=null,this._easing=0,this.cb=null,this.cbTriggered=!1,this.setEasing(n.EASING_LINEAR),this.set(t)};z.cubicSpline=function(t,e,i){let s=t*t,r=s*t;return(2*r-3*s+1)*e.value+(r-2*s+t)*e.bezTangOut+(-2*r+3*s)*i.value+(r-s)*i.bezTangIn},z.easeCubicSpline=function(t,e){return z.cubicSpline(t,this,e)},z.linear=function(t,e,i){return parseFloat(e.value)+parseFloat(i.value-e.value)*t},z.easeLinear=function(t,e){return z.linear(t,this,e)},z.easeAbsolute=function(t,e){return this.value},z.easeExpoIn=function(t,e){return t=function(t){return 2**(10*(t-1))}(t),z.linear(t,this,e)},z.easeExpoOut=function(t,e){return t=function(t){return 1-2**(-10*t)}(t),z.linear(t,this,e)},z.easeExpoInOut=function(t,e){return t=function(t){return(t*=2)<1?.5*2**(10*(t-1)):.5*(2-2**(-10*--t))}(t),z.linear(t,this,e)},z.easeSinIn=function(t,e){return t=-1*Math.cos(t*Math.PI/2)+1,z.linear(t,this,e)},z.easeSinOut=function(t,e){return t=Math.sin(t*Math.PI/2),z.linear(t,this,e)},z.easeSinInOut=function(t,e){return t=-.5*(Math.cos(Math.PI*t)-1),z.linear(t,this,e)},z.easeCubicIn=function(t,e){return t=function(t){return t*(t*t)}(t),z.linear(t,this,e)},z.easeInQuint=function(t,e){return z.linear(t*=t*t*t*t,this,e)},z.easeOutQuint=function(t,e){return t=(t-=1)*t*t*t*t+1,z.linear(t,this,e)},z.easeInOutQuint=function(t,e){return(t/=.5)<1?t*=.5*t*t*t*t:t=.5*((t-=2)*t*t*t*t+2),z.linear(t,this,e)},z.easeInQuart=function(t,e){return z.linear(t*=t*t*t,this,e)},z.easeOutQuart=function(t,e){return t=-1*((t-=1)*t*t*t-1),z.linear(t,this,e)},z.easeInOutQuart=function(t,e){return(t/=.5)<1?t*=.5*t*t*t:t=-.5*((t-=2)*t*t*t-2),z.linear(t,this,e)},z.bounce=function(t){return(t/=1)<1/2.75?t*=7.5625*t:t=t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,t},z.easeInBounce=function(t,e){return z.linear(z.bounce(t),this,e)},z.easeOutBounce=function(t,e){return z.linear(z.bounce(t),this,e)},z.easeInElastic=function(t,e){let i=1.70158,s=0,r=1;return 0===t?t=0:1==(t/=1)?t=1:(s||(s=.3),r<Math.abs(1)?(r=1,i=s/4):i=s/(2*Math.PI)*Math.asin(1/r),t=-r*2**(10*(t-=1))*Math.sin((1*t-i)*(2*Math.PI)/s)+0),z.linear(t,this,e)},z.easeOutElastic=function(t,e){let i=1.70158,s=0,r=1;return 0===t?t=0:1==(t/=1)?t=1:(s||(s=.3),r<Math.abs(1)?(r=1,i=s/4):i=s/(2*Math.PI)*Math.asin(1/r),t=r*2**(-10*t)*Math.sin((1*t-i)*(2*Math.PI)/s)+1+0),z.linear(t,this,e)},z.easeInBack=function(t,e){const i=1.70158;return z.linear(t=t*t*((i+1)*t-i),this,e)},z.easeOutBack=function(t,e){const i=1.70158;return t=(t=t/1-1)*t*((i+1)*t+i)+1,z.linear(t,this,e)},z.easeInOutBack=function(t,e){let i=1.70158;return t=(t/=.5)<1?t*t*((1+(i*=1.525))*t-i)*.5:.5*((t-=2)*t*((1+(i*=1.525))*t+i)+2),z.linear(t,this,e)},z.easeCubicOut=function(t,e){return t=function(t){return--t*t*t+1}(t),z.linear(t,this,e)},z.easeCubicInOut=function(t,e){return t=function(t){return(t*=2)<1?t*=.5*t*t:t=.5*((t-=2)*t*t+2),t}(t),z.linear(t,this,e)},z.easeSmoothStep=function(t,e){const i=Math.max(0,Math.min(1,t));return z.linear(t=i*i*(3-2*i),this,e)},z.easeSmootherStep=function(t,e){const i=Math.max(0,Math.min(1,(t-0)/1));return z.linear(t=i*i*i*(i*(6*i-15)+10),this,e)},z.prototype.setEasing=function(t){this._easing=t,this._easing==n.EASING_LINEAR?this.ease=z.easeLinear:this._easing==n.EASING_ABSOLUTE?this.ease=z.easeAbsolute:this._easing==n.EASING_SMOOTHSTEP?this.ease=z.easeSmoothStep:this._easing==n.EASING_SMOOTHERSTEP?this.ease=z.easeSmootherStep:this._easing==n.EASING_CUBIC_IN?this.ease=z.easeCubicIn:this._easing==n.EASING_CUBIC_OUT?this.ease=z.easeCubicOut:this._easing==n.EASING_CUBIC_INOUT?this.ease=z.easeCubicInOut:this._easing==n.EASING_EXPO_IN?this.ease=z.easeExpoIn:this._easing==n.EASING_EXPO_OUT?this.ease=z.easeExpoOut:this._easing==n.EASING_EXPO_INOUT?this.ease=z.easeExpoInOut:this._easing==n.EASING_SIN_IN?this.ease=z.easeSinIn:this._easing==n.EASING_SIN_OUT?this.ease=z.easeSinOut:this._easing==n.EASING_SIN_INOUT?this.ease=z.easeSinInOut:this._easing==n.EASING_BACK_OUT?this.ease=z.easeOutBack:this._easing==n.EASING_BACK_IN?this.ease=z.easeInBack:this._easing==n.EASING_BACK_INOUT?this.ease=z.easeInOutBack:this._easing==n.EASING_ELASTIC_IN?this.ease=z.easeInElastic:this._easing==n.EASING_ELASTIC_OUT?this.ease=z.easeOutElastic:this._easing==n.EASING_ELASTIC_INOUT?this.ease=z.easeElasticInOut:this._easing==n.EASING_BOUNCE_IN?this.ease=z.easeInBounce:this._easing==n.EASING_BOUNCE_OUT?this.ease=z.easeOutBounce:this._easing==n.EASING_QUART_OUT?this.ease=z.easeOutQuart:this._easing==n.EASING_QUART_IN?this.ease=z.easeInQuart:this._easing==n.EASING_QUART_INOUT?this.ease=z.easeInOutQuart:this._easing==n.EASING_QUINT_OUT?this.ease=z.easeOutQuint:this._easing==n.EASING_QUINT_IN?this.ease=z.easeInQuint:this._easing==n.EASING_QUINT_INOUT?this.ease=z.easeInOutQuint:this._easing==n.EASING_CUBICSPLINE?this.ease=z.easeCubicSpline:(this._easing=n.EASING_LINEAR,this.ease=z.easeLinear)},z.prototype.trigger=function(){this.cb(),this.cbTriggered=!0},z.prototype.setValue=function(t){this.value=t,null!==this.onChange&&this.onChange()},z.prototype.set=function(t){t&&(t.e&&this.setEasing(t.e),t.cb&&(this.cb=t.cb,this.cbTriggered=!1),t.b,t.hasOwnProperty("t")&&(this.time=t.t),t.hasOwnProperty("time")&&(this.time=t.time),t.hasOwnProperty("v")?this.value=t.v:t.hasOwnProperty("value")&&(this.value=t.value)),null!==this.onChange&&this.onChange()},z.prototype.getSerialized=function(){const t={};return t.t=this.time,t.v=this.value,t.e=this._easing,t},z.prototype.getEasing=function(){return this._easing};const W=function(t){H.apply(this),t=t||{},this.keys=[],this.onChange=null,this.stayInTimeline=!1,this.loop=!1,this._log=new r("Anim"),this._lastKeyIndex=0,this._cachedIndex=0,this.name=t.name||null,this.defaultEasing=t.defaultEasing||n.EASING_LINEAR,this.onLooped=null,this._timesLooped=0,this._needsSort=!1};W.prototype.forceChangeCallback=function(){null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},W.prototype.getLoop=function(){return this.loop},W.prototype.setLoop=function(t){this.loop=t,this.emitEvent("onChange",this)},W.prototype.hasEnded=function(t){return 0===this.keys.length||this.keys[this._lastKeyIndex].time<=t},W.prototype.isRising=function(t){if(this.hasEnded(t))return!1;const e=this.getKeyIndex(t);return this.keys[e].value<this.keys[e+1].value},W.prototype.clearBefore=function(t){const e=this.getValue(t),i=this.getKeyIndex(t);this.setValue(t,e),i>1&&this.keys.splice(0,i),this._updateLastIndex()},W.prototype.clear=function(t){let e=0;t&&(e=this.getValue(t)),this.keys.length=0,this._updateLastIndex(),t&&this.setValue(t,e),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},W.prototype.sortKeys=function(){this.keys.sort(((t,e)=>parseFloat(t.time)-parseFloat(e.time))),this._updateLastIndex(),this._needsSort=!1,this.keys.length%1e3==0&&console.log(this.name,this.keys.length)},W.prototype.getLength=function(){return 0===this.keys.length?0:this.keys[this.keys.length-1].time},W.prototype.getKeyIndex=function(t){let e=0,i=0;this._cachedIndex&&this.keys.length>this._cachedIndex&&t>=this.keys[this._cachedIndex].time&&(i=this._cachedIndex);for(let s=i;s<this.keys.length;s++)if(t>=this.keys[s].time&&(e=s),this.keys[s].time>t)return 0!=t&&(this._cachedIndex=e),e;return e},W.prototype.setValue=function(t,e,i){let s=null;if(0==this.keys.length||t<=this.keys[this.keys.length-1].time)for(let r=0;r<this.keys.length;r++)if(this.keys[r].time==t){s=this.keys[r],this.keys[r].setValue(e),this.keys[r].cb=i;break}return s||(s=new z({time:t,value:e,e:this.defaultEasing,cb:i}),this.keys.push(s),this.keys.length%1e3==0&&console.log(this.name,this.keys.length),this._updateLastIndex()),this.onChange&&this.onChange(),this.emitEvent("onChange",this),this._needsSort=!0,s},W.prototype.setKeyEasing=function(t,e){this.keys[t]&&(this.keys[t].setEasing(e),this.emitEvent("onChange",this))},W.prototype.getSerialized=function(){const t={keys:[]};t.loop=this.loop;for(let e=0;e<this.keys.length;e++)t.keys.push(this.keys[e].getSerialized());return t},W.prototype.getKey=function(t){const e=this.getKeyIndex(t);return this.keys[e]},W.prototype.getNextKey=function(t){let e=this.getKeyIndex(t)+1;return e>=this.keys.length&&(e=this.keys.length-1),this.keys[e]},W.prototype.isFinished=function(t){return this.keys.length<=0||t>this.keys[this.keys.length-1].time},W.prototype.isStarted=function(t){return!(this.keys.length<=0)&&t>=this.keys[0].time},W.prototype.getValue=function(t){if(0===this.keys.length)return 0;if(this._needsSort&&this.sortKeys(),!this.loop&&t>this.keys[this._lastKeyIndex].time)return this.keys[this._lastKeyIndex].value;if(t<this.keys[0].time)return this.keys[0].value;this.loop&&t>this.keys[this._lastKeyIndex].time&&(t/this.keys[this._lastKeyIndex].time>this._timesLooped&&(this._timesLooped++,this.onLooped&&this.onLooped()),t=(t-this.keys[0].time)%(this.keys[this._lastKeyIndex].time-this.keys[0].time),t+=this.keys[0].time);const e=this.getKeyIndex(t);if(e>=this._lastKeyIndex)return this.keys[this._lastKeyIndex].cb&&!this.keys[this._lastKeyIndex].cbTriggered&&this.keys[this._lastKeyIndex].trigger(),this.keys[this._lastKeyIndex].value;const i=e+1,s=this.keys[e],r=this.keys[i];if(s.cb&&!s.cbTriggered&&s.trigger(),!r)return-1;const n=(t-s.time)/(r.time-s.time);return s.ease||this.log._warn("has no ease",s,r),s.ease(n,r)},W.prototype._updateLastIndex=function(){this._lastKeyIndex=this.keys.length-1},W.prototype.addKey=function(t){void 0===t.time?this.log.warn("key time undefined, ignoring!"):(this.keys.push(t),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)),this._updateLastIndex()},W.prototype.easingFromString=function(t){return"linear"==t?n.EASING_LINEAR:"absolute"==t?n.EASING_ABSOLUTE:"smoothstep"==t?n.EASING_SMOOTHSTEP:"smootherstep"==t?n.EASING_SMOOTHERSTEP:"Cubic In"==t?n.EASING_CUBIC_IN:"Cubic Out"==t?n.EASING_CUBIC_OUT:"Cubic In Out"==t?n.EASING_CUBIC_INOUT:"Expo In"==t?n.EASING_EXPO_IN:"Expo Out"==t?n.EASING_EXPO_OUT:"Expo In Out"==t?n.EASING_EXPO_INOUT:"Sin In"==t?n.EASING_SIN_IN:"Sin Out"==t?n.EASING_SIN_OUT:"Sin In Out"==t?n.EASING_SIN_INOUT:"Back In"==t?n.EASING_BACK_IN:"Back Out"==t?n.EASING_BACK_OUT:"Back In Out"==t?n.EASING_BACK_INOUT:"Elastic In"==t?n.EASING_ELASTIC_IN:"Elastic Out"==t?n.EASING_ELASTIC_OUT:"Bounce In"==t?n.EASING_BOUNCE_IN:"Bounce Out"==t?n.EASING_BOUNCE_OUT:"Quart Out"==t?n.EASING_QUART_OUT:"Quart In"==t?n.EASING_QUART_IN:"Quart In Out"==t?n.EASING_QUART_INOUT:"Quint Out"==t?n.EASING_QUINT_OUT:"Quint In"==t?n.EASING_QUINT_IN:"Quint In Out"==t?n.EASING_QUINT_INOUT:void 0},W.prototype.createPort=function(t,e,i){const s=t.inDropDown(e,n.EASINGS);return s.set("linear"),s.defaultValue="linear",s.onChange=function(){this.defaultEasing=this.easingFromString(s.get()),this.emitEvent("onChangeDefaultEasing",this),i&&i()}.bind(this),s},W.slerpQuaternion=function(t,e,i,s,r,n){W.slerpQuaternion.q1||(W.slerpQuaternion.q1=quat.create(),W.slerpQuaternion.q2=quat.create());const o=i.getKeyIndex(t);let a=o+1;if(a>=i.keys.length&&(a=i.keys.length-1),o==a)quat.set(e,i.keys[o].value,s.keys[o].value,r.keys[o].value,n.keys[o].value);else{const h=i.keys[o].time,l=(t-h)/(i.keys[a].time-h);quat.set(W.slerpQuaternion.q1,i.keys[o].value,s.keys[o].value,r.keys[o].value,n.keys[o].value),quat.set(W.slerpQuaternion.q2,i.keys[a].value,s.keys[a].value,r.keys[a].value,n.keys[a].value),quat.slerp(e,W.slerpQuaternion.q1,W.slerpQuaternion.q2,l)}return e};const Y={Key:z},j=function(t,e,i,s){H.apply(this),this.data={},this._log=new r("core_port"),this.direction=a.PORT_DIR_IN,this.id=String(CABLES.simpleId()),this._op=t,this.links=[],this.value=0,this.name=e,this.type=i||o.OP_PORT_TYPE_VALUE,this.uiAttribs=s||{},this.anim=null,this._oldAnimVal=-5711,this.defaultValue=null,this._uiActiveState=!0,this.ignoreValueSerialize=!1,this.onLinkChanged=null,this.crashed=!1,this._valueBeforeLink=null,this._lastAnimFrame=-1,this._animated=!1,this.onValueChanged=null,this.onTriggered=null,this.onUiActiveStateChange=null,this.changeAlways=!1,this.forceRefChange=!1,this._useVariableName=null,this.activityCounter=0,this.apf=0,this.activityCounterStartFrame=0,this._tempLastUiValue=null,Object.defineProperty(this,"title",{get(){return this.uiAttribs.title||this.name}}),Object.defineProperty(this,"parent",{get(){return this._log.stack("use port.op, not .parent"),this._op}}),Object.defineProperty(this,"op",{get(){return this._op}}),Object.defineProperty(this,"val",{get(){return this._log.warn("val getter deprecated!",this),this._log.stack("val getter deprecated"),this.get()},set(t){this._log.warn("val setter deprecated!",this),this._log.stack("val setter deprecated"),this.setValue(t)}})};j.prototype.copyLinkedUiAttrib=function(t,e){if(!CABLES.UI)return;if(!this.isLinked())return;const i={};i[t]=this.links[0].getOtherPort(this).getUiAttrib(t),e.setUiAttribs(i)},j.prototype.getValueForDisplay=function(){let t=this.value;return"string"==typeof this.value||this.value instanceof String?(t.length>1e3&&(t=t.substring(0,999),t+="..."),this.uiAttribs&&"boolnum"==this.uiAttribs.display&&(t+=" - ",this.value?t+="true":t+="false"),t=t.replace(/[\u00A0-\u9999<>\&]/g,(function(t){return"&#"+t.charCodeAt(0)+";"})),t.length>100&&(t=t.substring(0,100))):t=this.value,t},j.prototype.onAnimToggle=function(){},j.prototype._onAnimToggle=function(){this.onAnimToggle()},j.prototype.remove=function(){this.removeLinks(),this._op.removePort(this)},j.prototype.setUiAttribs=function(t){let e=!1;this.uiAttribs||(this.uiAttribs={});for(const i in t)this.uiAttribs[i]!=t[i]&&(e=!0),this.uiAttribs[i]=t[i],"group"==i&&this.indexPort&&this.indexPort.setUiAttribs({group:t[i]});t.hasOwnProperty("expose")&&this._op.patch.emitEvent("subpatchExpose",this._op.uiAttribs.subPatch),e&&this.emitEvent("onUiAttrChange",t,this)},j.prototype.getUiAttribs=function(){return this.uiAttribs},j.prototype.getUiAttrib=function(t){return this.uiAttribs&&this.uiAttribs.hasOwnProperty(t)?this.uiAttribs[t]:null},j.prototype.get=function(){return this._animated&&this._lastAnimFrame!=this._op.patch.getFrameNum()&&(this._lastAnimFrame=this._op.patch.getFrameNum(),this.value=this.anim.getValue(this._op.patch.timer.getTime()),this._oldAnimVal=this.value,this.forceChange()),this.value},j.prototype.setRef=function(t){this.forceRefChange=!0,this.set(t)},j.prototype.set=j.prototype.setValue=function(t){if(void 0===t&&(t=null),this._op.enabled&&!this.crashed&&(t!==this.value||this.changeAlways||this.type==o.OP_PORT_TYPE_TEXTURE||this.type==o.OP_PORT_TYPE_ARRAY)){if(this._animated)this.anim.setValue(this._op.patch.timer.getTime(),t);else{try{this.value=t,this.forceChange()}catch(t){this.crashed=!0,this.setValue=function(t){},this.onTriggered=function(){},this._log.error("onvaluechanged exception cought",t),this._log.error(t.stack),this._log.warn("exception in: "+this._op.name),this._op.patch.isEditorMode()&&gui.showOpCrash(this._op),this._op.patch.emitEvent("exception",t,this._op),this._op.onError&&this._op.onError(t)}this._op&&this._op.patch&&this._op.patch.isEditorMode()&&this.type==o.OP_PORT_TYPE_TEXTURE&&gui.texturePreview().updateTexturePort(this)}if(this.direction==a.PORT_DIR_OUT)for(let t=0;t<this.links.length;++t)this.links[t].setValue()}},j.prototype.updateAnim=function(){this._animated&&(this.value=this.get(),(this._oldAnimVal!=this.value||this.changeAlways)&&(this._oldAnimVal=this.value,this.forceChange()),this._oldAnimVal=this.value)},j.args=function(t){return(t+"").replace(/[/][/].*$/gm,"").replace(/\s+/g,"").replace(/[/][*][^/*]*[*][/]/g,"").split("){",1)[0].replace(/^[^(]*[(]/,"").replace(/=[^,]+/g,"").split(",").filter(Boolean)},j.prototype.forceChange=function(){this.onValueChanged||this.onChange,this._activity(),this.emitEvent("change",this.value,this),this.onChange?this.onChange(this,this.value):this.onValueChanged&&this.onValueChanged(this,this.value)},j.prototype.getTypeString=function(){return this.type==o.OP_PORT_TYPE_VALUE?"Number":this.type==o.OP_PORT_TYPE_FUNCTION?"Trigger":this.type==o.OP_PORT_TYPE_OBJECT?"Object":this.type==o.OP_PORT_TYPE_DYNAMIC?"Dynamic":this.type==o.OP_PORT_TYPE_ARRAY?"Array":this.type==o.OP_PORT_TYPE_STRING?"String":"Unknown"},j.prototype.deSerializeSettings=function(t){if(t&&(t.animated&&this.setAnimated(t.animated),t.useVariable&&this.setVariableName(t.useVariable),t.title&&this.setUiAttribs({title:t.title}),t.expose&&this.setUiAttribs({expose:!0}),t.order&&this.setUiAttribs({order:t.order}),t.anim)){this.anim||(this.anim=new W({name:"port "+this.name})),this._op._hasAnimPort=!0,this.anim.addEventListener("onChange",(()=>{this._op.patch.emitEvent("portAnimUpdated",this._op,this,this.anim)})),t.anim.loop&&(this.anim.loop=t.anim.loop);for(const e in t.anim.keys)this.anim.keys.push(new Y.Key(t.anim.keys[e]));this.anim.sortKeys()}},j.prototype.getSerialized=function(){let t={};if(t.name=this.getName(),this.ignoreValueSerialize||0!==this.links.length||this.type==o.OP_PORT_TYPE_OBJECT&&this.value&&this.value.tex||(t.value=this.value),this._useVariableName&&(t.useVariable=this._useVariableName),this._animated&&(t.animated=!0),this.anim&&(t.anim=this.anim.getSerialized()),"file"==this.uiAttribs.display&&(t.display=this.uiAttribs.display),this.uiAttribs.expose&&(t.expose=!0,this.uiAttribs.hasOwnProperty("order")&&(t.order=this.uiAttribs.order)),this.uiAttribs.title&&(t.title=this.uiAttribs.title),this.direction==a.PORT_DIR_OUT&&this.links.length>0){t.links=[];for(const e in this.links)!this.links[e].ignoreInSerialize&&this.links[e].portIn&&this.links[e].portOut&&t.links.push(this.links[e].getSerialized())}if(this.direction==a.PORT_DIR_IN&&this.links.length>0)for(const e in this.links)this.links[e].portIn&&this.links[e].portOut&&this.links[e].getOtherPort(this).op.isInBlueprint2()&&!this.op.isInBlueprint2()&&(t.links=t.links||[],t.links.push(this.links[e].getSerialized()));return t.links&&0==t.links.length&&delete t.links,this.type===o.OP_PORT_TYPE_FUNCTION&&delete t.value,this.type===o.OP_PORT_TYPE_FUNCTION&&0==this.links.length&&(t=null),t&&1==Object.keys(t).length&&t.name&&(t=null),E(t),t},j.prototype.shouldLink=function(){return!0},j.prototype.removeLinks=function(){let t=0;for(;this.links.length>0;){if(t++,t>5e3){this._log.warn("could not delete links... / infinite loop"),this.links.length=0;break}this.links[0].remove()}},j.prototype.removeLink=function(t){for(const e in this.links)this.links[e]==t&&this.links.splice(e,1);this.direction==a.PORT_DIR_IN&&(this.type==o.OP_PORT_TYPE_VALUE?this.setValue(this._valueBeforeLink||0):this.setValue(this._valueBeforeLink||null)),CABLES.UI&&this._op.checkLinkTimeWarnings&&this._op.checkLinkTimeWarnings(),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged"),this._op.emitEvent("onLinkChanged")},j.prototype.getName=function(){return this.name},j.prototype.getTitle=function(){return this.uiAttribs.title?this.uiAttribs.title:this.name},j.prototype.addLink=function(t){this._valueBeforeLink=this.value,this.links.push(t),CABLES.UI&&this._op.checkLinkTimeWarnings&&this._op.checkLinkTimeWarnings(),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged"),this._op.emitEvent("onLinkChanged")},j.prototype.getLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e]},j.prototype.removeLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e].remove(),CABLES.UI&&this._op.checkLinkTimeWarnings&&this._op.checkLinkTimeWarnings(),this.onLinkChanged&&this.onLinkChanged(),void this.emitEvent("onLinkChanged")},j.prototype.isLinkedTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return!0;return!1},j.prototype._activity=function(){this.activityCounter++},j.prototype.trigger=function(){const t=this.links.length;if(this._activity(),0===t)return;if(!this._op.enabled)return;let e=null;try{for(let i=0;i<t;++i)this.links[i].portIn&&(e=this.links[i].portIn,e.op.patch.pushTriggerStack(e),e._onTriggered(),e.op.patch.popTriggerStack()),this.links[i]&&this.links[i].activity()}catch(t){this._op.enabled=!1,this._op.patch.isEditorMode()&&(this._op.patch.emitEvent("exception",t,e.op),this._op.patch.emitEvent("opcrash",e),e.op.onError&&e.op.onError(t)),this._log.warn("exception!"),this._log.error("ontriggered exception caught",t),this._log.error(t.stack),this._log.warn("exception in: "+e.op.name)}},j.prototype.call=function(){this._log.warn("call deprecated - use trigger() "),this.trigger()},j.prototype.execute=function(){this._log.warn("### execute port: "+this.getName(),this.goals.length)},j.prototype.setVariableName=function(t){this._useVariableName=t,this._op.patch.on("variableRename",((t,e)=>{t==this._useVariableName&&(this._useVariableName=e)}))},j.prototype.getVariableName=function(){return this._useVariableName},j.prototype.setVariable=function(t){this.setAnimated(!1);const e={useVariable:!1};this._variableIn&&this._varChangeListenerId&&(this._variableIn.off(this._varChangeListenerId),this._variableIn=null),t?(this._variableIn=this._op.patch.getVar(t),this._variableIn?(this.type==o.OP_PORT_TYPE_OBJECT?this._varChangeListenerId=this._variableIn.on("change",(()=>{this.set(null),this.set(this._variableIn.getValue())})):this._varChangeListenerId=this._variableIn.on("change",this.set.bind(this)),this.set(this._variableIn.getValue())):this._log.warn("PORT VAR NOT FOUND!!!",t),this._useVariableName=t,e.useVariable=!0,e.variableName=this._useVariableName):(e.variableName=this._useVariableName=null,e.useVariable=!1),this.setUiAttribs(e),this._op.patch.emitEvent("portSetVariable",this._op,this,t)},j.prototype._handleNoTriggerOpAnimUpdates=function(t){let e=!1;for(let t=0;t<this._op.portsIn.length;t++)if(this._op.portsIn.type==o.OP_PORT_TYPE_FUNCTION){e=!0;break}e||(t?this._notriggerAnimUpdate=this._op.patch.on("onRenderFrame",(()=>{this.updateAnim()})):this._op.patch.removeEventListener(this._notriggerAnimUpdate))},j.prototype.setAnimated=function(t){this._animated!=t&&(this._animated=t,this._op._hasAnimPort=!0,this._animated&&!this.anim&&(this.anim=new W({name:"port "+this.name}),this.anim.addEventListener("onChange",(()=>{this._op.patch.emitEvent("portAnimUpdated",this._op,this,this.anim)}))),this._onAnimToggle()),this._handleNoTriggerOpAnimUpdates(t),t||(this.anim=null),this.setUiAttribs({isAnimated:this._animated})},j.prototype.toggleAnim=function(){this._animated=!this._animated,this._animated&&!this.anim&&(this.anim=new W({name:"port "+this.name}),this.anim.addEventListener("onChange",(()=>{this._op.patch.emitEvent("portAnimUpdated",this._op,this,this.anim)}))),this.setAnimated(this._animated),this._onAnimToggle(),this.setUiAttribs({isAnimated:this._animated})},j.prototype.getType=function(){return this.type},j.prototype.isLinked=function(){return this.links.length>0||this._animated||null!=this._useVariableName},j.prototype.isBoundToVar=function(){const t=null!=this._useVariableName;return this.uiAttribs.boundToVar=t,t},j.prototype.isAnimated=function(){return this._animated},j.prototype.isHidden=function(){return this.uiAttribs.hidePort},j.prototype._onTriggered=function(t){this._activity(),this._op.updateAnims(),this._op.enabled&&this.onTriggered&&this.onTriggered(t)},j.prototype._onSetProfiling=function(t){this._op.patch.profiler.add("port",this),this.setValue(t),this._op.patch.profiler.add("port",null)},j.prototype._onTriggeredProfiling=function(){this._op.enabled&&this.onTriggered&&(this._op.patch.profiler.add("port",this),this.onTriggered(),this._op.patch.profiler.add("port",null))},j.prototype.onValueChange=function(t){this.onChange=t},j.prototype.getUiActiveState=function(){return this._uiActiveState},j.prototype.setUiActiveState=function(t){this._uiActiveState=t,this.onUiActiveStateChange&&this.onUiActiveStateChange()},j.prototype.hidePort=function(){this._log.warn("op.hideport() is deprecated, do not use it!")},j.portTypeNumberToString=function(t){return t==o.OP_PORT_TYPE_VALUE?"value":t==o.OP_PORT_TYPE_FUNCTION?"function":t==o.OP_PORT_TYPE_OBJECT?"object":t==o.OP_PORT_TYPE_ARRAY?"array":t==o.OP_PORT_TYPE_STRING?"string":t==o.OP_PORT_TYPE_DYNAMIC?"dynamic":"unknown"};const X=class{constructor(t,e,i,s,n,o,a,h,l,c){if(this._log=new r("cg_uniform"),this._type=e,this._name=i,this._shader=t,this._value=1e-5,this._oldValue=null,this._port=null,this._structName=l,this._structUniformName=h,this._propertyName=c,this._shader._addUniform(this),this.needsUpdate=!0,this.shaderType=null,this.comment=null,"f"==e)this.set=this.setValue=this.setValueF.bind(this),this.updateValue=this.updateValueF.bind(this);else if("f[]"==e)this.set=this.setValue=this.setValueArrayF.bind(this),this.updateValue=this.updateValueArrayF.bind(this);else if("2f[]"==e)this.set=this.setValue=this.setValueArray2F.bind(this),this.updateValue=this.updateValueArray2F.bind(this);else if("3f[]"==e)this.set=this.setValue=this.setValueArray3F.bind(this),this.updateValue=this.updateValueArray3F.bind(this);else if("4f[]"==e)this.set=this.setValue=this.setValueArray4F.bind(this),this.updateValue=this.updateValueArray4F.bind(this);else if("i"==e)this.set=this.setValue=this.setValueI.bind(this),this.updateValue=this.updateValueI.bind(this);else if("2i"==e)this.set=this.setValue=this.setValue2I.bind(this),this.updateValue=this.updateValue2I.bind(this);else if("3i"==e)this.set=this.setValue=this.setValue3I.bind(this),this.updateValue=this.updateValue3I.bind(this);else if("4i"==e)this.set=this.setValue=this.setValue4I.bind(this),this.updateValue=this.updateValue4I.bind(this);else if("b"==e)this.set=this.setValue=this.setValueBool.bind(this),this.updateValue=this.updateValueBool.bind(this);else if("4f"==e)this.set=this.setValue=this.setValue4F.bind(this),this.updateValue=this.updateValue4F.bind(this);else if("3f"==e)this.set=this.setValue=this.setValue3F.bind(this),this.updateValue=this.updateValue3F.bind(this);else if("2f"==e)this.set=this.setValue=this.setValue2F.bind(this),this.updateValue=this.updateValue2F.bind(this);else if("t"==e)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("tc"==e)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("t[]"==e)this.set=this.setValue=this.setValueArrayT.bind(this),this.updateValue=this.updateValueArrayT.bind(this);else{if("m4"!=e&&"m4[]"!=e)throw new Error("Unknown uniform type");this.set=this.setValue=this.setValueM4.bind(this),this.updateValue=this.updateValueM4.bind(this)}"object"==typeof s&&s instanceof j?(this._port=s,this._value=this._port.get(),n&&o&&a?(n instanceof j&&o instanceof j&&a instanceof j||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0,0],this._port2=n,this._port3=o,this._port4=a,this._port.on("change",this.updateFromPort4f.bind(this)),this._port2.on("change",this.updateFromPort4f.bind(this)),this._port3.on("change",this.updateFromPort4f.bind(this)),this._port4.on("change",this.updateFromPort4f.bind(this)),this.updateFromPort4f()):n&&o?(n instanceof j&&o instanceof j||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0],this._port2=n,this._port3=o,this._port.on("change",this.updateFromPort3f.bind(this)),this._port2.on("change",this.updateFromPort3f.bind(this)),this._port3.on("change",this.updateFromPort3f.bind(this)),this.updateFromPort3f()):n?(n instanceof j||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0],this._port2=n,this._port.on("change",this.updateFromPort2f.bind(this)),this._port2.on("change",this.updateFromPort2f.bind(this)),this.updateFromPort2f()):this._port.on("change",this.updateFromPort.bind(this))):this._value=s,this.setValue(this._value),this.needsUpdate=!0}getType(){return this._type}getName(){return this._name}getValue(){return this._value}getShaderType(){return this.shaderType}isStructMember(){return!!this._structName}updateFromPort4f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)}updateFromPort3f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)}updateFromPort2f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)}updateFromPort(){this.setValue(this._port.get())}};class Q extends X{constructor(t,e,i,s,r,n,o,a,h,l){super(t,e,i,s,r,n,o,a,h,l),this._loc=-1,this._cgl=t._cgl}get name(){return this._name}copy(t){const e=new Q(t,this._type,this._name,this._value,this._port2,this._port3,this._port4,this._structUniformName,this._structName,this._propertyName);return e.shaderType=this.shaderType,e}getGlslTypeString(){return Q.glslTypeString(this._type)}_isValidLoc(){return-1!=this._loc}resetLoc(){this._loc=-1,this.needsUpdate=!0}bindTextures(){}getLoc(){return this._loc}updateFromPort4f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)}updateFromPort3f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)}updateFromPort2f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)}updateFromPort(){this.setValue(this._port.get())}updateValueF(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1f(this._loc,this._value),this._cgl.profileData.profileUniformCount++}setValueF(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)}updateValueI(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value),this._cgl.profileData.profileUniformCount++}updateValue2I(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2i(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}updateValue3I(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3i(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}updateValue4I(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform4i(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++}setValueI(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)}setValue2I(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1],this.needsUpdate=!0),this._value=t)}setValue3I(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2],this.needsUpdate=!0),this._value=t)}setValue4I(t){this.needsUpdate=!0,this._value=t||vec4.create()}updateValueBool(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value?1:0),this._cgl.profileData.profileUniformCount++}setValueBool(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)}setValueArray4F(t){this.needsUpdate=!0,this._value=t}updateValueArray4F(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform4fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArray3F(t){this.needsUpdate=!0,this._value=t}updateValueArray3F(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform3fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArray2F(t){this.needsUpdate=!0,this._value=t}updateValueArray2F(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform2fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArrayF(t){this.needsUpdate=!0,this._value=t}updateValueArrayF(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArrayT(t){this.needsUpdate=!0,this._value=t}updateValue3F(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3f(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}setValue3F(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2],this.needsUpdate=!0),this._value=t)}updateValue2F(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2f(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}setValue2F(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1],this.needsUpdate=!0),this._value=t)}updateValue4F(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._value||(this._log.warn("no value for uniform",this._name,this),this._value=[0,0,0,0]),this.needsUpdate=!1,this._shader.getCgl().gl.uniform4f(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++}setValue4F(t){"number"==typeof this.value&&(this.value=vec4.create()),t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]&&t[3]==this._oldValue[3]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2,3],this.needsUpdate=!0),this._value=t)}updateValueM4(){if(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),!this._value||this._value.length%16!=0)return console.log("this.name",this._name,this._value);this._shader.getCgl().gl.uniformMatrix4fv(this._loc,!1,this._value),this._cgl.profileData.profileUniformCount++}setValueM4(t){this.needsUpdate=!0,this._value=t||mat4.create()}updateValueArrayT(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1iv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}updateValueT(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._cgl.profileData.profileUniformCount++,this._shader.getCgl().gl.uniform1i(this._loc,this._value),this.needsUpdate=!1}setValueT(t){this.needsUpdate=!0,this._value=t}}Q.glslTypeString=t=>"f"==t?"float":"b"==t?"bool":"i"==t?"int":"2i"==t?"ivec2":"2f"==t?"vec2":"3f"==t?"vec3":"4f"==t?"vec4":"m4"==t?"mat4":"t"==t?"sampler2D":"tc"==t?"samplerCube":"3f[]"==t||"m4[]"==t||"f[]"==t?null:void console.warn("[CGL UNIFORM] unknown glsl type string ",t);const q=180/Math.PI,K={DEG2RAD:Math.PI/180,RAD2DEG:q},J={SHADERVAR_VERTEX_POSITION:"vPosition",SHADERVAR_VERTEX_NUMBER:"attrVertIndex",SHADERVAR_VERTEX_NORMAL:"attrVertNormal",SHADERVAR_VERTEX_TEXCOORD:"attrTexCoord",SHADERVAR_INSTANCE_MMATRIX:"instMat",SHADERVAR_VERTEX_COLOR:"attrVertColor",SHADERVAR_INSTANCE_INDEX:"instanceIndex",SHADERVAR_UNI_PROJMAT:"projMatrix",SHADERVAR_UNI_VIEWMAT:"viewMatrix",SHADERVAR_UNI_MODELMAT:"modelMatrix",SHADERVAR_UNI_NORMALMAT:"normalMatrix",SHADERVAR_UNI_INVVIEWMAT:"inverseViewMatrix",SHADERVAR_UNI_INVPROJMAT:"invProjMatrix",SHADERVAR_UNI_MATERIALID:"materialId",SHADERVAR_UNI_OBJECTID:"objectId",SHADERVAR_UNI_VIEWPOS:"camPos"},Z={BLEND_NONE:0,BLEND_NORMAL:1,BLEND_ADD:2,BLEND_SUB:3,BLEND_MUL:4},$={lastMesh:null},tt=function(t,e,i){this._cgl=t,this._log=new r("cgl_mesh"),this._bufVertexAttrib=null,this._bufVerticesIndizes=this._cgl.gl.createBuffer(),this._indexType=this._cgl.gl.UNSIGNED_SHORT,this._attributes=[],this._attribLocs={},this._geom=null,this._lastShader=null,this._numInstances=0,this._glPrimitive=i,this._preWireframeGeom=null,this.addVertexNumbers=!1,this._name="unknown",this.feedBackAttributes=[],this.setGeom(e),this._feedBacks=[],this._feedBacksChanged=!1,this._transformFeedBackLoc=-1,this._lastAttrUpdate=0,this.memFreed=!1,this._cgl.profileData.addHeavyEvent("mesh constructed",this._name),this._queryExt=null,Object.defineProperty(this,"numInstances",{get(){return this._numInstances},set(t){this.setNumInstances(t)}})};tt.prototype.freeMem=function(){this.memFreed=!0;for(let t=0;t<this._attributes.length;t++)this._attributes[t].floatArray=null},tt.prototype.updateVertices=function(t){this.setAttribute(J.SHADERVAR_VERTEX_POSITION,t.vertices,3),this._numVerts=t.vertices.length/3},tt.prototype.setAttributePointer=function(t,e,i,s){for(let r=0;r<this._attributes.length;r++)this._attributes[r].name==t&&(this._attributes[r].pointer||(this._attributes[r].pointer=[]),this._attributes[r].pointer.push({loc:-1,name:e,stride:i,offset:s,instanced:t==J.SHADERVAR_INSTANCE_MMATRIX}))},tt.prototype.getAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t)return this._attributes[e]},tt.prototype.setAttributeRange=function(t,e,i,s){t&&(i||s)&&(t.name||this._log.stack("no attrname?!"),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,t.buffer),this._cgl.profileData.profileMeshAttributes+=s-i||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]=this._cgl.profileData.profileSingleMeshAttribute[this._name]||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]+=s-i||0,t.numItems<e.length/t.itemSize&&this._resizeAttr(e,t),s>=e.length-1&&this._log.log(this._cgl.canvas.id+" "+t.name+" buffersubdata out of bounds ?",e.length,s,i,t),1==this._cgl.glVersion?this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,0,e):this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,4*i,e,i,s-i))},tt.prototype._resizeAttr=function(t,e){e.buffer&&this._cgl.gl.deleteBuffer(e.buffer),e.buffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,e.buffer),this._bufferArray(t,e),e.numItems=t.length/e.itemSize},tt.prototype._bufferArray=function(t,e){let i=e.floatArray||null;t&&(this._cgl.debugOneFrame&&console.log("_bufferArray",t.length,e.name),t instanceof Float32Array?i=t:e&&i&&i.length==t.length?i.set(t):(i=new Float32Array(t),this._cgl.debugOneFrame&&console.log("_bufferArray create new float32array",t.length,e.name),t.length>1e4&&(this._cgl.profileData.profileNonTypedAttrib++,this._cgl.profileData.profileNonTypedAttribNames="("+this._name+":"+e.name+")")),e.arrayLength=i.length,e.floatArray=null,this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i,this._cgl.gl.DYNAMIC_DRAW))},tt.prototype.addAttribute=tt.prototype.updateAttribute=tt.prototype.setAttribute=function(t,e,i,s){if(!e)throw this._log.error("mesh addAttribute - no array given! "+t),new Error;let r=null,n=!1,o=0;const a=e.length/i;for(this._cgl.profileData.profileMeshAttributes+=a||0,"function"==typeof s&&(r=s),"object"==typeof s&&(s.cb&&(r=s.cb),s.instanced&&(n=s.instanced)),t==J.SHADERVAR_INSTANCE_MMATRIX&&(n=!0),o=0;o<this._attributes.length;o++){const i=this._attributes[o];if(i.name==t)return i.numItems===a||this._resizeAttr(e,i),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.buffer),this._bufferArray(e,i),i}const h=this._cgl.gl.createBuffer();this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,h);let l=this._cgl.gl.FLOAT;s&&s.type&&(l=s.type);const c={buffer:h,name:t,cb:r,itemSize:i,numItems:a,startItem:0,instanced:n,type:l};return this._bufferArray(e,c),t==J.SHADERVAR_VERTEX_POSITION&&(this._bufVertexAttrib=c),this._attributes.push(c),this._attribLocs={},c},tt.prototype.getAttributes=function(){return this._attributes},tt.prototype.updateTexCoords=function(t){if(t.texCoords&&t.texCoords.length>0)this.setAttribute(J.SHADERVAR_VERTEX_TEXCOORD,t.texCoords,2);else{const e=new Float32Array(Math.round(t.vertices.length/3*2));this.setAttribute(J.SHADERVAR_VERTEX_TEXCOORD,e,2)}},tt.prototype.updateNormals=function(t){if(t.vertexNormals&&t.vertexNormals.length>0)this.setAttribute(J.SHADERVAR_VERTEX_NORMAL,t.vertexNormals,3);else{const e=new Float32Array(Math.round(t.vertices.length));this.setAttribute(J.SHADERVAR_VERTEX_NORMAL,e,3)}},tt.prototype._setVertexNumbers=function(t){if(!this._verticesNumbers||this._verticesNumbers.length!=this._numVerts||t){if(t)this._verticesNumbers=t;else{this._verticesNumbers=new Float32Array(this._numVerts);for(let t=0;t<this._numVerts;t++)this._verticesNumbers[t]=t}this.setAttribute(J.SHADERVAR_VERTEX_NUMBER,this._verticesNumbers,1,((t,e,i)=>{i.uniformNumVertices||(i.uniformNumVertices=new Q(i,"f","numVertices",this._numVerts)),i.uniformNumVertices.setValue(this._numVerts)}))}},tt.prototype.setVertexIndices=function(t){if(this._bufVerticesIndizes)if(t.length>0){t instanceof Float32Array&&this._log.warn("vertIndices float32Array: "+this._name);for(let e=0;e<t.length;e++)if(t[e]>=this._numVerts)return void this._log.warn("invalid index in "+this._name,e,t[e]);this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes),t.length>65535?(this.vertIndicesTyped=new Uint32Array(t),this._indexType=this._cgl.gl.UNSIGNED_INT):t instanceof Uint32Array?(this.vertIndicesTyped=t,this._indexType=this._cgl.gl.UNSIGNED_INT):t instanceof Uint16Array?this.vertIndicesTyped=t:(this.vertIndicesTyped=new Uint16Array(t),this._indexType=this._cgl.gl.UNSIGNED_SHORT),this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this.vertIndicesTyped,this._cgl.gl.DYNAMIC_DRAW),this._bufVerticesIndizes.itemSize=1,this._bufVerticesIndizes.numItems=t.length}else this._bufVerticesIndizes.numItems=0;else this._log.warn("no bufVerticesIndizes: "+this._name)},tt.prototype.setGeom=function(t,e){this._geom=t,null!=t.glPrimitive&&(this._glPrimitive=t.glPrimitive),this._geom&&this._geom.name&&(this._name="mesh "+this._geom.name),$.lastMesh=null,this._cgl.profileData.profileMeshSetGeom++,this._disposeAttributes(),this.updateVertices(this._geom),this.setVertexIndices(this._geom.verticesIndices),this.addVertexNumbers&&this._setVertexNumbers();const i=this._geom.getAttributes(),s={texCoords:J.SHADERVAR_VERTEX_TEXCOORD,vertexNormals:J.SHADERVAR_VERTEX_NORMAL,vertexColors:J.SHADERVAR_VERTEX_COLOR,tangents:"attrTangent",biTangents:"attrBiTangent"};for(const t in i)i[t].data&&i[t].data.length&&this.setAttribute(s[t]||t,i[t].data,i[t].itemSize);e&&(this._geom=null)},tt.prototype._preBind=function(t){for(let e=0;e<this._attributes.length;e++)this._attributes[e].cb&&this._attributes[e].cb(this._attributes[e],this._geom,t)},tt.prototype._checkAttrLengths=function(){if(!this.memFreed)for(let t=0;t<this._attributes.length;t++)if(this._attributes[t].arrayLength/this._attributes[t].itemSize<this._attributes[0].arrayLength/this._attributes[0].itemSize){let t="unknown";this._geom&&(t=this._geom.name)}},tt.prototype._bind=function(t){if(!t.isValid())return;let e=[];if(this._attribLocs[t.id]?e=this._attribLocs[t.id]:this._attribLocs[t.id]=e,this._lastShader=t,t.lastCompile>this._lastAttrUpdate||e.length!=this._attributes.length){this._lastAttrUpdate=t.lastCompile;for(let t=0;t<this._attributes.length;t++)e[t]=-1}for(let i=0;i<this._attributes.length;i++){const s=this._attributes[i];if(-1==e[i]&&s._attrLocationLastShaderTime!=t.lastCompile&&(s._attrLocationLastShaderTime=t.lastCompile,e[i]=this._cgl.glGetAttribLocation(t.getProgram(),s.name),this._cgl.profileData.profileAttrLoc++),-1!=e[i])if(this._cgl.gl.enableVertexAttribArray(e[i]),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.buffer),s.instanced)if(s.itemSize<=4)s.itemSize&&0!=s.itemSize||this._log.warn("instanced attrib itemsize error",this._geom.name,s),this._cgl.gl.vertexAttribPointer(e[i],s.itemSize,s.type,!1,4*s.itemSize,0),this._cgl.gl.vertexAttribDivisor(e[i],1);else if(16==s.itemSize){const t=64;this._cgl.gl.vertexAttribPointer(e[i],4,s.type,!1,t,0),this._cgl.gl.enableVertexAttribArray(e[i]+1),this._cgl.gl.vertexAttribPointer(e[i]+1,4,s.type,!1,t,16),this._cgl.gl.enableVertexAttribArray(e[i]+2),this._cgl.gl.vertexAttribPointer(e[i]+2,4,s.type,!1,t,32),this._cgl.gl.enableVertexAttribArray(e[i]+3),this._cgl.gl.vertexAttribPointer(e[i]+3,4,s.type,!1,t,48),this._cgl.gl.vertexAttribDivisor(e[i],1),this._cgl.gl.vertexAttribDivisor(e[i]+1,1),this._cgl.gl.vertexAttribDivisor(e[i]+2,1),this._cgl.gl.vertexAttribDivisor(e[i]+3,1)}else this._log.warn("unknown instance attrib size",s.name);else{if(s.itemSize&&0!=s.itemSize||this._log.warn("attrib itemsize error",this._name,s),this._cgl.gl.vertexAttribPointer(e[i],s.itemSize,s.type,!1,4*s.itemSize,0),s.pointer)for(let e=0;e<s.pointer.length;e++){const i=s.pointer[e];-1==i.loc&&(i.loc=this._cgl.glGetAttribLocation(t.getProgram(),i.name)),this._cgl.profileData.profileAttrLoc++,this._cgl.gl.enableVertexAttribArray(i.loc),this._cgl.gl.vertexAttribPointer(i.loc,s.itemSize,s.type,!1,i.stride,i.offset)}this.bindFeedback(s)}}this._bufVerticesIndizes&&0!==this._bufVerticesIndizes.numItems&&this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes)},tt.prototype.unBind=function(){const t=this._lastShader;if(this._lastShader=null,!t)return;let e=[];this._attribLocs[t.id]?e=this._attribLocs[t.id]:this._attribLocs[t.id]=e,$.lastMesh=null;for(let t=0;t<this._attributes.length;t++)this._attributes[t].instanced&&(this._attributes[t].itemSize<=4?(-1!=e[t]&&this._cgl.gl.vertexAttribDivisor(e[t],0),e[t]>=0&&this._cgl.gl.disableVertexAttribArray(e[t])):(this._cgl.gl.vertexAttribDivisor(e[t],0),this._cgl.gl.vertexAttribDivisor(e[t]+1,0),this._cgl.gl.vertexAttribDivisor(e[t]+2,0),this._cgl.gl.vertexAttribDivisor(e[t]+3,0),this._cgl.gl.disableVertexAttribArray(e[t]+1),this._cgl.gl.disableVertexAttribArray(e[t]+2),this._cgl.gl.disableVertexAttribArray(e[t]+3))),-1!=e[t]&&this._cgl.gl.disableVertexAttribArray(e[t])},tt.prototype.meshChanged=function(){return this._cgl.lastMesh&&this._cgl.lastMesh!=this},tt.prototype.printDebug=function(t){console.log("--attributes");for(let t=0;t<this._attributes.length;t++)console.log("attribute "+t+" "+this._attributes[t].name)},tt.prototype.setNumVertices=function(t){this._bufVertexAttrib.numItems=t},tt.prototype.getNumVertices=function(){return this._bufVertexAttrib.numItems},tt.prototype.render=function(t){if(!t||!t.isValid()||this._cgl.aborted)return;if(this._checkAttrLengths(),this._geom&&(!this._preWireframeGeom||t.wireframe||this._geom.isIndexed()||(this.setGeom(this._preWireframeGeom),this._preWireframeGeom=null),t.wireframe)){let t=!1;this._geom.isIndexed()&&(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),this._geom.unIndex(),t=!0),this._geom.getAttribute("attrBarycentric")||(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),t=!0,this._geom.calcBarycentric()),t&&this.setGeom(this._geom)}let e=!1;if($.lastMesh!=this&&($.lastMesh&&$.lastMesh.unBind(),e=!0),e&&this._preBind(t),!t.bind())return;this._bind(t),this.addVertexNumbers&&this._setVertexNumbers(),$.lastMesh=this;let i=this._cgl.gl.TRIANGLES;void 0!==this._glPrimitive&&(i=this._glPrimitive),null!==t.glPrimitive&&(i=t.glPrimitive);let s=1,r=this._cgl.profileData.doProfileGlQuery,n=!1;if(r){let e=this._name+" - "+t.getName()+" #"+t.id;this._numInstances&&(e+=" instanced "+this._numInstances+"x");let i=this._cgl.profileData.glQueryData[e];if(i||(i={id:e,num:0}),this._cgl.profileData.glQueryData[e]=i,this._queryExt||!1===this._queryExt||(this._queryExt=this._cgl.enableExtension("EXT_disjoint_timer_query_webgl2")||!1),this._queryExt){if(i._drawQuery&&this._cgl.gl.getQueryParameter(i._drawQuery,this._cgl.gl.QUERY_RESULT_AVAILABLE)){const t=this._cgl.gl.getQueryParameter(i._drawQuery,this._cgl.gl.QUERY_RESULT)/1e6;i._times=i._times||0,i._times+=t,i._numcount++,i.when=performance.now(),i._drawQuery=null,i.queryStarted=!1}i.queryStarted||(i._drawQuery=this._cgl.gl.createQuery(),this._cgl.gl.beginQuery(this._queryExt.TIME_ELAPSED_EXT,i._drawQuery),n=i.queryStarted=!0)}}if(this.hasFeedbacks()?this.drawFeedbacks(t,i):this._bufVerticesIndizes&&0!==this._bufVerticesIndizes.numItems?(i==this._cgl.gl.TRIANGLES&&(s=3),0===this._numInstances?this._cgl.gl.drawElements(i,this._bufVerticesIndizes.numItems,this._indexType,0):this._cgl.gl.drawElementsInstanced(i,this._bufVerticesIndizes.numItems,this._indexType,0,this._numInstances)):(i==this._cgl.gl.TRIANGLES&&(s=3),0===this._numInstances?this._cgl.gl.drawArrays(i,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems-this._bufVertexAttrib.startItem):this._cgl.gl.drawArraysInstanced(i,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems,this._numInstances)),this._cgl.debugOneFrame&&this._cgl.gl.getError()!=this._cgl.gl.NO_ERROR){this._log.error("mesh draw gl error"),this._log.error("mesh",this),this._log.error("shader",t);for(let e=0;e<this._cgl.gl.getProgramParameter(t.getProgram(),this._cgl.gl.ACTIVE_ATTRIBUTES);e++){const i=this._cgl.gl.getActiveAttrib(t.getProgram(),e).name;this._log.error("attrib ",i)}}this._cgl.profileData.profileMeshNumElements+=this._bufVertexAttrib.numItems/s*(this._numInstances||1),this._cgl.profileData.profileMeshDraw++,r&&n&&this._cgl.gl.endQuery(this._queryExt.TIME_ELAPSED_EXT),this._cgl.printError("mesh render "+this._name),this.unBind()},tt.prototype.setNumInstances=function(t){if(t=Math.max(0,t),this._numInstances!=t){this._numInstances=t;const e=new Float32Array(t);for(let i=0;i<t;i++)e[i]=i;this.setAttribute(J.SHADERVAR_INSTANCE_INDEX,e,1,{instanced:!0})}},tt.prototype._disposeAttributes=function(){if(this._attributes){for(let t=0;t<this._attributes.length;t++)this._attributes[t].buffer&&(this._cgl.gl.deleteBuffer(this._attributes[t].buffer),this._attributes[t].buffer=null);this._attributes.length=0}},tt.prototype.dispose=function(){this._bufVertexAttrib&&this._bufVertexAttrib.buffer&&this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer),this._bufVerticesIndizes&&this._cgl.gl.deleteBuffer(this._bufVerticesIndizes),this._bufVerticesIndizes=null,this._disposeAttributes()},function(t){t.prototype.hasFeedbacks=function(){return this._feedBacks.length>0},t.prototype.removeFeedbacks=function(t){this._feedbacks&&(this._feedbacks.length=0,this._feedBacksChanged=!0)},t.prototype.setAttributeFeedback=function(){},t.prototype.setFeedback=function(t,e,i){let s={nameOut:e},r=!1;this.unBindFeedbacks();for(let t=0;t<this._feedBacks.length;t++)this._feedBacks[t].nameOut==e&&(s=this._feedBacks[t],r=!0);return r||(this._feedBacksChanged=!0),s.initialArr=i,s.attrib=t,s.outBuffer&&this._cgl.gl.deleteBuffer(s.outBuffer),s.outBuffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.outBuffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,s.initialArr,this._cgl.gl.STATIC_DRAW),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.attrib.buffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,s.initialArr,this._cgl.gl.STATIC_DRAW),r||this._feedBacks.push(s),s},t.prototype.bindFeedback=function(t){if(!this._feedBacks||0===this._feedBacks.length)return;-1==this._transformFeedBackLoc&&(this._transformFeedBackLoc=this._cgl.gl.createTransformFeedback()),this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc);let e=!1;for(let i=0;i<this._feedBacks.length;i++){const s=this._feedBacks[i];s.attrib==t&&(e=!0,this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,i,s.outBuffer))}},t.prototype.drawFeedbacks=function(t,e){let i=0;if(this._feedBacksChanged){const e=[];for(this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc),i=0;i<this._feedBacks.length;i++)e.push(this._feedBacks[i].nameOut);return t.setFeedbackNames(e),console.log("feedbacknames",e),t.compile(),this._feedBacksChanged=!1,this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null),void console.log("changed finished")}this._cgl.gl.beginTransformFeedback(this.glPrimitive),this._cgl.gl.drawArrays(e,0,this._feedBacks[0].attrib.numItems),this._cgl.gl.endTransformFeedback(),this.unBindFeedbacks(),this.feedBacksSwapBuffers()},t.prototype.unBindFeedbacks=function(){for(let t=0;t<this._feedBacks.length;t++)this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,t,null);this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null)},t.prototype.feedBacksSwapBuffers=function(){for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t].attrib.buffer;this._feedBacks[t].attrib.buffer=this._feedBacks[t].outBuffer,this._feedBacks[t].outBuffer=e}}}(tt);const et={getSimpleRect:function(t,e){const i=new G(e);return i.vertices=[1,1,0,-1,1,0,1,-1,0,-1,-1,0],i.texCoords=[1,1,0,1,1,0,0,0],i.verticesIndices=[0,1,2,2,1,3],i.vertexNormals=[0,0,0,0,0,0,0,0,0,0,0,0],new tt(t,i)},getSimpleCube:function(t,e){const i=new G(e);return i.vertices=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,1,1,-1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],i.setTexCoords([0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,0,0,0]),i.verticesIndices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],i.vertexNormals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),i.tangents=new Float32Array([0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1]),i.biTangents=new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1]),new tt(t,i)}},it=function(t,e){this._cgl=t,this._log=new r("cgl_TextureEffect"),t.TextureEffectMesh||this.createMesh(),this._textureSource=null,this._options=e,this.imgCompVer=0,this.aspectRatio=1,this._textureTarget=null,this._frameBuf=this._cgl.gl.createFramebuffer(),this._frameBuf2=this._cgl.gl.createFramebuffer(),this._renderbuffer=this._cgl.gl.createRenderbuffer(),this._renderbuffer2=this._cgl.gl.createRenderbuffer(),this.switched=!1,this.depth=!1};it.prototype.getWidth=function(){return this._textureSource.width},it.prototype.getHeight=function(){return this._textureSource.height},it.prototype.setSourceTexture=function(t){null===t?(this._textureSource=new w(this._cgl),this._textureSource.setSize(16,16)):this._textureSource=t,this._textureSource.compareSettings(this._textureTarget)||(this._textureTarget&&this._textureTarget.delete(),this._textureTarget=this._textureSource.clone(),this._cgl.profileData.profileEffectBuffercreate++,this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._renderbuffer),this.depth&&this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this._textureSource.width,this._textureSource.height),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._textureTarget.tex,0),this.depth&&this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._renderbuffer),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf2),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._renderbuffer2),this.depth&&this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this._textureSource.width,this._textureSource.height),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._textureSource.tex,0),this.depth&&this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._renderbuffer2),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null)),this.aspectRatio=this._textureSource.width/this._textureSource.height},it.prototype.continueEffect=function(){this._cgl.pushDepthTest(!1),this._cgl.pushModelMatrix(),this._cgl.pushPMatrix(),this._cgl.pushViewPort(0,0,this.getCurrentTargetTexture().width,this.getCurrentTargetTexture().height),mat4.perspective(this._cgl.pMatrix,45,this.getCurrentTargetTexture().width/this.getCurrentTargetTexture().height,.1,1100),this._cgl.pushPMatrix(),mat4.identity(this._cgl.pMatrix),this._cgl.pushViewMatrix(),mat4.identity(this._cgl.vMatrix),this._cgl.pushModelMatrix(),mat4.identity(this._cgl.mMatrix)},it.prototype.startEffect=function(t){this._textureTarget?(this.switched=!1,this.continueEffect(),t&&(this._bgTex=t),this._countEffects=0):this._log.warn("effect has no target")},it.prototype.endEffect=function(){this._cgl.popDepthTest(),this._cgl.popModelMatrix(),this._cgl.popPMatrix(),this._cgl.popModelMatrix(),this._cgl.popViewMatrix(),this._cgl.popPMatrix(),this._cgl.popViewPort()},it.prototype.bind=function(){null!==this._textureSource?this.switched?(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf2),this._cgl.pushGlFrameBuffer(this._frameBuf2)):(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf),this._cgl.pushGlFrameBuffer(this._frameBuf)):this._log.warn("no base texture set!")},it.prototype.finish=function(){null!==this._textureSource?(this._cgl.TextureEffectMesh.render(this._cgl.getShader()),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.profileData.profileTextureEffect++,this._textureTarget.filter==w.FILTER_MIPMAP&&(this.switched?(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._textureSource.tex),this._textureSource.updateMipMap()):(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._textureTarget.tex),this._textureTarget.updateMipMap()),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null)),this.switched=!this.switched,this._countEffects++):this._log.warn("no base texture set!")},it.prototype.getCurrentTargetTexture=function(){return this.switched?this._textureSource:this._textureTarget},it.prototype.getCurrentSourceTexture=function(){return 0==this._countEffects&&this._bgTex?this._bgTex:this.switched?this._textureTarget:this._textureSource},it.prototype.delete=function(){this._textureTarget&&this._textureTarget.delete(),this._textureSource&&this._textureSource.delete(),this._cgl.gl.deleteRenderbuffer(this._renderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuf)},it.prototype.createMesh=function(){this._cgl.TextureEffectMesh=et.getSimpleRect(this._cgl,"texEffectRect")},it.checkOpNotInTextureEffect=function(t){return!(t.patch.cgl&&(t.uiAttribs.error&&!t.patch.cgl.currentTextureEffect?(t.setUiError("textureeffect",null),0):t.patch.cgl.currentTextureEffect&&(t.patch.cgl.currentTextureEffect&&!t.uiAttribs.error?(t.setUiError("textureeffect","This op can not be a child of a ImageCompose/texture effect! imagecompose should only have textureeffect childs.",0),1):t.patch.cgl.currentTextureEffect)))},it.checkOpInEffect=function(t,e){if(e=e||0,t.patch.cgl.currentTextureEffect){if(t.uiAttribs.uierrors&&t.patch.cgl.currentTextureEffect.imgCompVer>=e)return t.setUiError("texeffect",null),!0;e&&t.patch.cgl.currentTextureEffect.imgCompVer<e&&t.setUiError("texeffect","This op must be a child of an ImageCompose op with version >="+e+' <span class="button-small" onclick="gui.patchView.downGradeOp(\''+t.id+"','"+t.name+"')\">Downgrade</span> to previous version",1)}return!!t.patch.cgl.currentTextureEffect||(t.patch.cgl.currentTextureEffect||t.uiAttribs.uierrors&&0!=t.uiAttribs.uierrors.length?!!t.patch.cgl.currentTextureEffect:(t.setUiError("texeffect",'This op must be a child of an ImageCompose op! More infos <a href="https://docs.cables.gl/image_composition/image_composition.html" target="_blank">here</a>. ',1),!1))},it.getBlendCode=function(t){let e="".endl()+"vec3 _blend(vec3 base,vec3 blend)".endl()+"{".endl()+"   vec3 colNew=blend;".endl()+"   #ifdef BM_MULTIPLY".endl()+"       colNew=base*blend;".endl()+"   #endif".endl()+"   #ifdef BM_MULTIPLY_INV".endl()+"       colNew=base* vec3(1.0)-blend;".endl()+"   #endif".endl()+"   #ifdef BM_AVERAGE".endl()+"       colNew=((base + blend) / 2.0);".endl()+"   #endif".endl()+"   #ifdef BM_ADD".endl()+"       colNew=min(base + blend, vec3(1.0));".endl()+"   #endif".endl()+"   #ifdef BM_SUBTRACT_ONE".endl()+"       colNew=max(base + blend - vec3(1.0), vec3(0.0));".endl()+"   #endif".endl()+"   #ifdef BM_SUBTRACT".endl()+"       colNew=base - blend;".endl()+"   #endif".endl()+"   #ifdef BM_DIFFERENCE".endl()+"       colNew=abs(base - blend);".endl()+"   #endif".endl()+"   #ifdef BM_NEGATION".endl()+"       colNew=(vec3(1.0) - abs(vec3(1.0) - base - blend));".endl()+"   #endif".endl()+"   #ifdef BM_EXCLUSION".endl()+"       colNew=(base + blend - 2.0 * base * blend);".endl()+"   #endif".endl()+"   #ifdef BM_LIGHTEN".endl()+"       colNew=max(blend, base);".endl()+"   #endif".endl()+"   #ifdef BM_DARKEN".endl()+"       colNew=min(blend, base);".endl()+"   #endif".endl()+"   #ifdef BM_OVERLAY".endl()+"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_SCREEN".endl()+"      #define BlendScreenf(base, blend)       (1.0 - ((1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendScreenf(base.r, blend.r),BlendScreenf(base.g, blend.g),BlendScreenf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_SOFTLIGHT".endl()+"      #define BlendSoftLightf(base, blend)    ((blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend)))".endl()+"      colNew=vec3(BlendSoftLightf(base.r, blend.r),BlendSoftLightf(base.g, blend.g),BlendSoftLightf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_HARDLIGHT".endl()+"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_COLORDODGE".endl()+"      #define BlendColorDodgef(base, blend)   ((blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0))".endl()+"      colNew=vec3(BlendColorDodgef(base.r, blend.r),BlendColorDodgef(base.g, blend.g),BlendColorDodgef(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_COLORBURN".endl()+"      #define BlendColorBurnf(base, blend)    ((blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0))".endl()+"      colNew=vec3(BlendColorBurnf(base.r, blend.r),BlendColorBurnf(base.g, blend.g),BlendColorBurnf(base.b, blend.b));".endl()+"   #endif".endl()+"   return colNew;".endl()+"}".endl();return t||(e+="vec4 cgl_blend(vec4 oldColor,vec4 newColor,float amount)".endl()+"{".endl()+"vec4 col=vec4( _blend(oldColor.rgb,newColor.rgb) ,1.0);".endl()+"col=vec4( mix( col.rgb, oldColor.rgb ,1.0-oldColor.a*amount),1.0);".endl()+"return col;".endl()+"}".endl()),t>=3&&(e+="vec4 cgl_blendPixel(vec4 base,vec4 col,float amount)".endl()+"{".endl()+"#ifdef BM_MATH_ADD".endl()+"   return vec4(base.rgb+col.rgb*amount,1.0);".endl()+"#endif".endl()+"#ifdef BM_MATH_SUB".endl()+"   return vec4(base.rgb-col.rgb*amount,1.0);".endl()+"#endif".endl()+"#ifdef BM_MATH_MUL".endl()+"   return vec4(base.rgb*col.rgb*amount,1.0);".endl()+"#endif".endl()+"#ifdef BM_MATH_DIV".endl()+"   return vec4(base.rgb/col.rgb*amount,1.0);".endl()+"#endif".endl()+"#ifndef BM_MATH".endl()+"vec3 colNew=_blend(base.rgb,col.rgb);".endl()+"float newA=clamp(base.a+(col.a*amount),0.,1.);".endl()+"#ifdef BM_ALPHAMASKED".endl()+"newA=base.a;".endl()+"#endif".endl()+"return vec4(".endl()+"mix(colNew,base.rgb,1.0-(amount*col.a)),".endl()+"newA);".endl()+"#endif".endl()+"}".endl()),e},it.onChangeBlendSelect=function(t,e,i=!1){e=String(e),t.toggleDefine("BM_NORMAL","normal"==e),t.toggleDefine("BM_MULTIPLY","multiply"==e),t.toggleDefine("BM_MULTIPLY_INV","multiply invert"==e),t.toggleDefine("BM_AVERAGE","average"==e),t.toggleDefine("BM_ADD","add"==e),t.toggleDefine("BM_SUBTRACT_ONE","subtract one"==e),t.toggleDefine("BM_SUBTRACT","subtract"==e),t.toggleDefine("BM_DIFFERENCE","difference"==e),t.toggleDefine("BM_NEGATION","negation"==e),t.toggleDefine("BM_EXCLUSION","exclusion"==e),t.toggleDefine("BM_LIGHTEN","lighten"==e),t.toggleDefine("BM_DARKEN","darken"==e),t.toggleDefine("BM_OVERLAY","overlay"==e),t.toggleDefine("BM_SCREEN","screen"==e),t.toggleDefine("BM_SOFTLIGHT","softlight"==e),t.toggleDefine("BM_HARDLIGHT","hardlight"==e),t.toggleDefine("BM_COLORDODGE","color dodge"==e),t.toggleDefine("BM_COLORBURN","color burn"==e),t.toggleDefine("BM_MATH_ADD","Math Add"==e),t.toggleDefine("BM_MATH_SUB","Math Subtract"==e),t.toggleDefine("BM_MATH_MUL","Math Multiply"==e),t.toggleDefine("BM_MATH_DIV","Math Divide"==e),t.toggleDefine("BM_MATH",0==e.indexOf("Math ")),t.toggleDefine("BM_ALPHAMASKED",i)},it.AddBlendSelect=function(t,e,i){return t.inValueSelect(e||"Blend Mode",["normal","lighten","darken","multiply","multiply invert","average","add","subtract","difference","negation","exclusion","overlay","screen","color dodge","color burn","softlight","hardlight","subtract one","Math Add","Math Subtract","Math Multiply","Math Divide"],i||"normal")},it.AddBlendAlphaMask=function(t,e,i){return t.inSwitch(e||"Alpha Mask",["Off","On"],i||"Off")},it.setupBlending=function(t,e,i,s,r){const n=()=>{let s=!1;r&&(s="On"==r.get()),it.onChangeBlendSelect(e,i.get(),s);let n=i.get();"normal"==n?n=null:"multiply"==n?n="mul":"multiply invert"==n?n="mulinv":"lighten"==n?n="light":"darken"==n?n="darken":"average"==n?n="avg":"subtract one"==n?n="sub one":"subtract"==n?n="sub":"difference"==n?n="diff":"negation"==n?n="neg":"exclusion"==n?n="exc":"overlay"==n?n="ovl":"color dodge"==n?n="dodge":"color burn"==n?n="burn":"softlight"==n?n="soft":"hardlight"==n?n="hard":"Math Add"==n?n="+":"Math Subtract"==n?n="-":"Math Multiply"==n?n="*":"Math Divide"==n&&(n="/"),t.setUiAttrib({extendTitle:n})};t.setPortGroup("Blending",[i,s,r]);let o=!1;i.onChange=n,r&&(r.onChange=n,o="On"==r.get()),it.onChangeBlendSelect(e,i.get(),o)};const st={"CGL.BLENDMODES":function(){this.name="blendmodes",this.srcHeadFrag=it.getBlendCode()},"CGL.BLENDMODES3":function(){this.name="blendmodes3",this.srcHeadFrag=it.getBlendCode(3)},"CGL.LUMINANCE":function(){this.name="luminance",this.srcHeadFrag="".endl()+"float cgl_luminance(vec3 c)".endl()+"{".endl()+"    return dot(vec3(0.2126,0.7152,0.0722),c);".endl()+"}".endl()},"CGL.RANDOM_OLD":function(){this.name="randomNumber",this.srcHeadFrag="".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 432758.5453);".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));".endl()+"}"},"CGL.RANDOM_LOW":function(){this.name="randomNumber",this.srcHeadFrag="".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 358.5453);".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));".endl()+"}"},"CGL.RANDOM_TEX":function(){this.name="randomNumbertex",this.srcHeadFrag="".endl()+"UNI sampler2D CGLRNDTEX;".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return texture(CGLRNDTEX,co*5711.0).r;".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return texture(CGLRNDTEX,co*5711.0).rgb;".endl()+"}",this.initUniforms=function(t){return[new Q(t,"t","CGLRNDTEX",7)]},this.onBind=function(t,e){w.getRandomTexture(t),t.setTexture(7,w.getRandomTexture(t).tex)}}},rt=function(){return window.performance.now()},nt=function(){return rt()},ot=function(){CABLES.EventTarget.apply(this),this._timeStart=rt(),this._timeOffset=0,this._currentTime=0,this._lastTime=0,this._paused=!0,this._delay=0,this.overwriteTime=-1};ot.prototype._getTime=function(){return this._lastTime=(rt()-this._timeStart)/1e3,this._lastTime+this._timeOffset},ot.prototype.setDelay=function(t){this._delay=t,this.emitEvent("timeChange")},ot.prototype.isPlaying=function(){return!this._paused},ot.prototype.update=function(){if(!this._paused)return this._currentTime=this._getTime(),this._currentTime},ot.prototype.getMillis=function(){return 1e3*this.get()},ot.prototype.get=ot.prototype.getTime=function(){return this.overwriteTime>=0?this.overwriteTime-this._delay:this._currentTime-this._delay},ot.prototype.togglePlay=function(){this._paused?this.play():this.pause()},ot.prototype.setTime=function(t){(isNaN(t)||t<0)&&(t=0),this._timeStart=rt(),this._timeOffset=t,this._currentTime=t,this.emitEvent("timeChange")},ot.prototype.setOffset=function(t){this._currentTime+t<0?(this._timeStart=rt(),this._timeOffset=0,this._currentTime=0):(this._timeOffset+=t,this._currentTime=this._lastTime+this._timeOffset),this.emitEvent("timeChange")},ot.prototype.play=function(){this._timeStart=rt(),this._paused=!1,this.emitEvent("playPause")},ot.prototype.pause=function(){this._timeOffset=this._currentTime,this._paused=!0,this.emitEvent("playPause")};const at=Math.PI/180,ht=(Math.PI,-1!=window.navigator.userAgent.indexOf("Windows")),lt=function(t){let e;if(t.wheelDelta)e=t.wheelDelta%120-0==-0?t.wheelDelta/120:t.wheelDelta/30,e*=-1.5,ht&&(e*=2);else{let i=t.deltaY;t.shiftKey&&(i=t.deltaX);const s=i||t.detail;e=-(s%3?10*s:s/3),e*=-3}return e>20&&(e=20),e<-20&&(e=-20),e},ct=lt,ut=lt,pt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},_t=/[&<>"']/g,dt=RegExp(_t.source);let gt=0;const ft=function(t,e){if(!t)throw new Error("shader constructed without cgl "+e);this._log=new r("cgl_shader"),this._cgl=t,e||this._log.stack("no shader name given"),this._name=e||"unknown",this.glslVersion=0,t.glVersion>1&&(this.glslVersion=300),this._materialId=++gt,this.id=b(),this._isValid=!0,this._program=null,this._uniforms=[],this._drawBuffers=[!0],this._defines=[],this._needsRecompile=!0,this._compileReason="initial",this.ignoreMissingUniforms=!1,this._projMatrixUniform=null,this._mvMatrixUniform=null,this._mMatrixUniform=null,this._vMatrixUniform=null,this._camPosUniform=null,this._normalMatrixUniform=null,this._inverseViewMatrixUniform=null,this._attrVertexPos=-1,this.precision=t.patch.config.glslPrecision||"highp",this._pMatrixState=-1,this._vMatrixState=-1,this._countMissingUniforms=0,this._modGroupCount=0,this._feedBackNames=[],this._attributes=[],this.glPrimitive=null,this.offScreenPass=!1,this._extensions=[],this.srcVert=this.getDefaultVertexShader(),this.srcFrag=this.getDefaultFragmentShader(),this.lastCompile=0,this._moduleNames=[],this._modules=[],this._moduleNumId=0,this._libs=[],this._structNames=[],this._structUniformNames=[],this._textureStackUni=[],this._textureStackTex=[],this._textureStackType=[],this._textureStackTexCgl=[],this._tempNormalMatrix=mat4.create(),this._tempCamPosMatrix=mat4.create(),this._tempInverseViewMatrix=mat4.create(),this._tempInverseProjMatrix=mat4.create(),this.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"])};ft.prototype.isValid=function(){return this._isValid},ft.prototype.getCgl=function(){return this._cgl},ft.prototype.getName=function(){return this._name},ft.prototype.enableExtension=function(t){this.setWhyCompile("enable extension "+t),this._needsRecompile=!0,this._extensions.push(t)},ft.prototype.getAttrVertexPos=function(){return this._attrVertexPos},ft.prototype.hasTextureUniforms=function(){for(let t=0;t<this._uniforms.length;t++)if("t"==this._uniforms[t].getType())return!0;return!1},ft.prototype.setWhyCompile=function(t){this._compileReason=t},ft.prototype.copyUniformValues=function(t){for(let e=0;e<t._uniforms.length;e++)this._uniforms[e]?(-1!=t._uniforms[e].getName().indexOf("pathPoints")&&console.log("copyUniformValues",t._uniforms[e].getName(),t._uniforms[e].getValue()),this.getUniform(t._uniforms[e].getName()).set(t._uniforms[e].getValue())):this._log.log("unknown uniform?!");this.popTextures();for(let e=0;e<t._textureStackUni.length;e++)this._textureStackUni[e]=t._textureStackUni[e],this._textureStackTex[e]=t._textureStackTex[e],this._textureStackType[e]=t._textureStackType[e],this._textureStackTexCgl[e]=t._textureStackTexCgl[e]},ft.prototype.copy=function(){const t=new ft(this._cgl,this._name+" copy");t.setSource(this.srcVert,this.srcFrag),t._modules=JSON.parse(JSON.stringify(this._modules)),t._defines=JSON.parse(JSON.stringify(this._defines)),t._modGroupCount=this._modGroupCount,t._moduleNames=this._moduleNames,t.glPrimitive=this.glPrimitive,t.offScreenPass=this.offScreenPass,t._extensions=this._extensions,t.wireframe=this.wireframe,t._attributes=this._attributes;for(let e=0;e<this._uniforms.length;e++)this._uniforms[e].copy(t).resetLoc();return this.setWhyCompile("copy"),t._needsRecompile=!0,t},ft.prototype.setSource=function(t,e){this.srcVert=t,this.srcFrag=e,this.setWhyCompile("Source changed"),this._needsRecompile=!0,this._isValid=!0},ft.prototype._addLibs=function(t){for(const e in st)if(t.indexOf(e)>-1){const i=new st[e];t=t.replace("{{"+e+"}}",i.srcHeadFrag),this._libs.push(i),i.initUniforms&&i.initUniforms(this)}return t},ft.prototype.createStructUniforms=function(){let t="",e="";this._structNames=[],this._injectedStringsFrag={},this._injectedStringsVert={},this._structUniformNamesIndicesFrag=[],this._structUniformNamesIndicesVert=[];for(let i=0;i<this._uniforms.length;i++)if(this._uniforms[i].isStructMember()){const s="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";if(-1===this._structNames.indexOf(this._uniforms[i]._structName)){const r="struct "+this._uniforms[i]._structName+" {".endl()+s+"};".endl().endl();"both"!==this._uniforms[i].getShaderType()&&"frag"!==this._uniforms[i].getShaderType()||(t=t.concat(r)),"both"!==this._uniforms[i].getShaderType()&&"vert"!==this._uniforms[i].getShaderType()||(e=e.concat(r)),this._structNames.push(this._uniforms[i]._structName),this._injectedStringsFrag[this._uniforms[i]._structName]=[],this._injectedStringsVert[this._uniforms[i]._structName]=[]}let r="";this._uniforms[i].comment&&(r=" // "+this._uniforms[i].comment);let n="";if(null==this._uniforms[i].getGlslTypeString()&&(n+="//"),n+="  "+this._uniforms[i].getGlslTypeString()+" "+this._uniforms[i]._propertyName+";"+r,"both"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(n)&&-1===this._injectedStringsVert[this._uniforms[i]._structName].indexOf(n)){const r=t.lastIndexOf(s),o=e.lastIndexOf(s);t=t.slice(0,r)+n+t.slice(r-1),e=e.slice(0,o)+n+e.slice(o-1),this._injectedStringsFrag[this._uniforms[i]._structName].push(n),this._injectedStringsVert[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesFrag.indexOf(i)&&this._structUniformNamesIndicesFrag.push(i),-1===this._structUniformNamesIndicesVert.indexOf(i)&&this._structUniformNamesIndicesVert.push(i)}else if("frag"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(n)){const e=t.lastIndexOf(s);t=t.slice(0,e)+n+t.slice(e-1),this._injectedStringsFrag[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesFrag.indexOf(i)&&this._structUniformNamesIndicesFrag.push(i)}else if("vert"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsVert[this._uniforms[i]._structName].indexOf(n)){const t=e.lastIndexOf(s);e=e.slice(0,t)+n+e.slice(t-1),this._injectedStringsVert[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesVert.indexOf(i)&&this._structUniformNamesIndicesVert.push(i)}}this._uniDeclarationsFrag=[],this._uniDeclarationsVert=[];for(let e=0;e<this._structUniformNamesIndicesFrag.length;e+=1){const i=this._structUniformNamesIndicesFrag[e],s="UNI "+this._uniforms[i]._structName+" "+this._uniforms[i]._structUniformName+";".endl();if(-1===this._uniDeclarationsFrag.indexOf(s)){const e="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";t=t.replace(e,""),t+=s,this._uniDeclarationsFrag.push(s)}}for(let t=0;t<this._structUniformNamesIndicesVert.length;t+=1){const i=this._structUniformNamesIndicesVert[t],s="UNI "+this._uniforms[i]._structName+" "+this._uniforms[i]._structUniformName+";".endl();if(-1===this._uniDeclarationsVert.indexOf(s)){const t="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";e=e.replace(t,""),e+=s,this._uniDeclarationsVert.push(s)}}return[e,t]},ft.prototype._getAttrSrc=function(t,e){const i={};return t.name&&t.type&&(i.srcHeadVert="",e||(i.srcHeadVert+="#ifndef ATTRIB_"+t.name.endl()),i.srcHeadVert+="#define ATTRIB_"+t.name.endl(),i.srcHeadVert+="IN "+t.type+" "+t.name+";".endl(),e||(i.srcHeadVert+="#endif".endl()),t.nameFrag&&(i.srcHeadVert+="",e||(i.srcHeadVert+="#ifndef ATTRIB_"+t.nameFrag.endl()),i.srcHeadVert+="#define ATTRIB_"+t.nameFrag.endl(),i.srcHeadVert+="OUT "+t.type+" "+t.nameFrag+";".endl(),e||(i.srcHeadVert+="#endif".endl()),i.srcVert="".endl()+t.nameFrag+"="+t.name+";",i.srcHeadFrag="",e||(i.srcHeadFrag+="#ifndef ATTRIB_"+t.nameFrag.endl()),i.srcHeadFrag+="#define ATTRIB_"+t.nameFrag.endl(),i.srcHeadFrag+="IN "+t.type+" "+t.nameFrag+";".endl(),e||(i.srcHeadFrag+="#endif".endl()))),i},ft.prototype.compile=function(){if(this._cgl.aborted)return;const t=performance.now();this._cgl.profileData.profileShaderCompiles++,this._cgl.profileData.profileShaderCompileName=this._name+" ["+this._compileReason+"]";let e="";if(this._extensions)for(let t=0;t<this._extensions.length;t++)e+="#extension "+this._extensions[t]+" : enable".endl();let i="";this._defines.length&&(i="\n// cgl generated".endl());for(let t=0;t<this._defines.length;t++)i+="#define "+this._defines[t][0]+" "+this._defines[t][1]+"".endl();const s=this.createStructUniforms();if(this._cgl.profileData.addHeavyEvent("shader compile",this._name+" ["+this._compileReason+"]"),this._compileReason="",this._uniforms){const t=this._uniforms.map((t=>t._name)),e=[];for(let i=0;i<this._uniforms.length;i++){const s=this._uniforms[i];t.indexOf(s._name,i+1)>-1&&e.push(i)}for(let t=this._uniforms.length-1;t>=0;t-=1)e.indexOf(t)>-1?this._uniforms.splice(t,1):this._uniforms[t].resetLoc()}this._cgl.printError("uniform resets"),this.hasTextureUniforms()&&(i+="#define HAS_TEXTURES".endl());let r="",n="";this.srcFrag||(this._log.error("[cgl shader] has no fragment source!",this),this.srcVert=this.getDefaultVertexShader(),this.srcFrag=this.getDefaultFragmentShader()),300==this.glslVersion?(r="#version 300 es".endl()+"// ".endl()+"// vertex shader "+this._name.endl()+"// ".endl()+"precision "+this.precision+" float;".endl()+"precision "+this.precision+" sampler2D;".endl()+"".endl()+"#define WEBGL2".endl()+"#define texture2D texture".endl()+"#define UNI uniform".endl()+"#define IN in".endl()+"#define OUT out".endl(),n="#version 300 es".endl()+"// ".endl()+"// fragment shader "+this._name.endl()+"// ".endl()+"precision "+this.precision+" float;".endl()+"precision "+this.precision+" sampler2D;".endl()+"".endl()+"#define WEBGL2".endl()+"#define texture2D texture".endl()+"#define IN in".endl()+"#define OUT out".endl()+"#define UNI uniform".endl()+"{{DRAWBUFFER}}".endl()):(n="".endl()+"// ".endl()+"// fragment shader "+this._name.endl()+"// ".endl()+"#define WEBGL1".endl()+"#define texture texture2D".endl()+"#define outColor gl_FragColor".endl()+"#define IN varying".endl()+"#define UNI uniform".endl(),r="".endl()+"// ".endl()+"// vertex shader "+this._name.endl()+"// ".endl()+"#define WEBGL1".endl()+"#define texture texture2D".endl()+"#define OUT varying".endl()+"#define IN attribute".endl()+"#define UNI uniform".endl());let o="\n// cgl generated".endl(),a="\n// cgl generated".endl();n+="\n// active mods: --------------- ",r+="\n// active mods: --------------- ";let h=!1,l=!1;for(let t=0;t<this._moduleNames.length;t++)for(let e=0;e<this._modules.length;e++)this._modules[e].name==this._moduleNames[t]&&((this._modules[e].srcBodyFrag||this._modules[e].srcHeadFrag)&&(h=!0,n+="\n// "+t+"."+e+". "+this._modules[e].title+" ("+this._modules[e].name+")"),(this._modules[e].srcBodyVert||this._modules[e].srcHeadVert)&&(r+="\n// "+t+"."+e+". "+this._modules[e].title+" ("+this._modules[e].name+")",l=!0));l||(n+="\n// no mods used..."),h||(n+="\n// no mods used..."),n+="\n",r+="\n";for(let t=0;t<this._uniforms.length;t++)if(this._uniforms[t].shaderType&&!this._uniforms[t].isStructMember()){let e="";this._uniforms[t].getGlslTypeString()||(e+="// "),e+="UNI "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName();let i="";this._uniforms[t].comment&&(i=" // "+this._uniforms[t].comment),"vert"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||-1==this.srcVert.indexOf(e)&&-1==this.srcVert.indexOf("uniform "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName())&&(o+=e+";"+i.endl()),"frag"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||-1==this.srcFrag.indexOf(e)&&-1==this.srcFrag.indexOf("uniform "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName())&&(a+=e+";"+i.endl())}let c=0,u=0;for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].shaderType&&!this._uniforms[t].isStructMember()&&("vert"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||u++,"frag"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||c++);c>=this._cgl.maxUniformsFrag&&this._log.warn("[cgl_shader] num uniforms frag: "+c+" / "+this._cgl.maxUniformsFrag),u>=this._cgl.maxUniformsVert&&this._log.warn("[cgl_shader] num uniforms vert: "+u+" / "+this._cgl.maxUniformsVert),-1==n.indexOf("precision")&&(n="precision "+this.precision+" float;".endl()+n),-1==r.indexOf("precision")&&(r="precision "+this.precision+" float;".endl()+r),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(n+="#define MOBILE".endl(),r+="#define MOBILE".endl()),r=e+r+i+s[0]+o+"\n// -- \n"+this.srcVert,n=e+n+i+s[1]+a+"\n// -- \n"+this.srcFrag;let p="",_="";this._modules.sort((function(t,e){return t.group-e.group})),this._modules.sort((function(t,e){return t.priority||0-e.priority||0}));let d=!1;for(let t=0;t<this._moduleNames.length;t++){let e="",i="";if(!d){d=!0;for(let t=0;t<this._attributes.length;t++){const i=this._getAttrSrc(this._attributes[t],!0);i.srcHeadVert&&(p+=i.srcHeadVert),i.srcVert&&(e+=i.srcVert),i.srcHeadFrag&&(_+=i.srcHeadFrag)}}for(let s=0;s<this._modules.length;s++){const r=this._modules[s];if(r.name==this._moduleNames[t]){if(p+="\n//---- MOD: group:"+r.group+": idx:"+s+" - prfx:"+r.prefix+" - "+r.title+" ------\n",_+="\n//---- MOD: group:"+r.group+": idx:"+s+" - prfx:"+r.prefix+" - "+r.title+" ------\n",e+="\n\n//---- MOD: "+r.title+" / "+r.priority+" ------\n",i+="\n\n//---- MOD: "+r.title+" / "+r.priority+" ------\n",r.attributes)for(let t=0;t<r.attributes.length;t++){const i=this._getAttrSrc(r.attributes[t],!1);i.srcHeadVert&&(p+=i.srcHeadVert),i.srcVert&&(e+=i.srcVert),i.srcHeadFrag&&(_+=i.srcHeadFrag)}p+=r.srcHeadVert||"",_+=r.srcHeadFrag||"",e+=r.srcBodyVert||"",i+=r.srcBodyFrag||"",p+="\n//---- end mod ------\n",_+="\n//---- end mod ------\n",e+="\n//---- end mod ------\n",i+="\n//---- end mod ------\n",e=e.replace(/{{mod}}/g,r.prefix),i=i.replace(/{{mod}}/g,r.prefix),p=p.replace(/{{mod}}/g,r.prefix),_=_.replace(/{{mod}}/g,r.prefix),e=e.replace(/MOD_/g,r.prefix),i=i.replace(/MOD_/g,r.prefix),p=p.replace(/MOD_/g,r.prefix),_=_.replace(/MOD_/g,r.prefix)}}r=r.replace("{{"+this._moduleNames[t]+"}}",e),n=n.replace("{{"+this._moduleNames[t]+"}}",i)}r=r.replace("{{MODULES_HEAD}}",p),n=n.replace("{{MODULES_HEAD}}",_),r=this._addLibs(r),n=this._addLibs(n);let g="";for(let t=0;t<16;t++)n.indexOf("outColor"+t)>-1&&(this._drawBuffers[t]=!0);if(1==this._drawBuffers.length)g="out vec4 outColor;".endl(),g+="#define gl_FragColor outColor".endl();else{g+="#define MULTI_COLORTARGETS".endl(),g+="vec4 outColor;".endl();let t=0;for(let e=0;e<this._drawBuffers.length;e++)0==t&&(g+="#define gl_FragColor outColor"+e+"".endl()),g+="layout(location = "+e+") out vec4 outColor"+e+";".endl(),t++}if(n=n.replace("{{DRAWBUFFER}}",g),this._program){this._program=this._createProgram(r,n),this._projMatrixUniform=null;for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].resetLoc()}else this._program=this._createProgram(r,n);this.finalShaderFrag=n,this.finalShaderVert=r,$.lastMesh=null,$.lastShader=null,this._countMissingUniforms=0,this._needsRecompile=!1,this.lastCompile=nt(),this._cgl.profileData.shaderCompileTime+=performance.now()-t},ft.hasChanged=function(){return this._needsRecompile},ft.prototype.bind=function(){if(this._isValid&&!this._cgl.aborted&&($.lastShader=this,this._program&&!this._needsRecompile||this.compile(),this._isValid)){if(!this._projMatrixUniform&&!this.ignoreMissingUniforms&&(this._countMissingUniforms++,this._countMissingUniforms<10)){this._projMatrixUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_PROJMAT),this._attrVertexPos=this._cgl.glGetAttribLocation(this._program,J.SHADERVAR_VERTEX_POSITION),this._mvMatrixUniform=this._cgl.gl.getUniformLocation(this._program,"mvMatrix"),this._vMatrixUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_VIEWMAT),this._mMatrixUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_MODELMAT),this._camPosUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_VIEWPOS),this._normalMatrixUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_NORMALMAT),this._inverseViewMatrixUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_INVVIEWMAT),this._inverseProjMatrixUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_INVPROJMAT),this._materialIdUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_MATERIALID),this._objectIdUniform=this._cgl.gl.getUniformLocation(this._program,J.SHADERVAR_UNI_OBJECTID);for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].needsUpdate=!0}this._cgl.currentProgram!=this._program&&(this._cgl.profileData.profileShaderBinds++,this._cgl.gl.useProgram(this._program),this._cgl.currentProgram=this._program);for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].needsUpdate&&this._uniforms[t].updateValue();if(this._pMatrixState!=this._cgl.getProjectionMatrixStateCount()&&(this._pMatrixState=this._cgl.getProjectionMatrixStateCount(),this._cgl.gl.uniformMatrix4fv(this._projMatrixUniform,!1,this._cgl.pMatrix),this._cgl.profileData.profileMVPMatrixCount++),this._objectIdUniform&&this._cgl.gl.uniform1f(this._objectIdUniform,++this._cgl.frameStore.objectIdCounter),this._materialIdUniform&&this._cgl.gl.uniform1f(this._materialIdUniform,this._materialId),this._vMatrixUniform)this._vMatrixState!=this._cgl.getViewMatrixStateCount()&&(this._cgl.gl.uniformMatrix4fv(this._vMatrixUniform,!1,this._cgl.vMatrix),this._cgl.profileData.profileMVPMatrixCount++,this._vMatrixState=this._cgl.getViewMatrixStateCount(),this._inverseViewMatrixUniform&&(mat4.invert(this._tempInverseViewMatrix,this._cgl.vMatrix),this._cgl.gl.uniformMatrix4fv(this._inverseViewMatrixUniform,!1,this._tempInverseViewMatrix),this._cgl.profileData.profileMVPMatrixCount++),this._inverseProjMatrixUniform&&(mat4.invert(this._tempInverseProjMatrix,this._cgl.pMatrix),this._cgl.gl.uniformMatrix4fv(this._inverseProjMatrixUniform,!1,this._tempInverseProjMatrix),this._cgl.profileData.profileMVPMatrixCount++)),this._cgl.gl.uniformMatrix4fv(this._mMatrixUniform,!1,this._cgl.mMatrix),this._cgl.profileData.profileMVPMatrixCount++,this._camPosUniform&&(mat4.invert(this._tempCamPosMatrix,this._cgl.vMatrix),this._cgl.gl.uniform3f(this._camPosUniform,this._tempCamPosMatrix[12],this._tempCamPosMatrix[13],this._tempCamPosMatrix[14]),this._cgl.profileData.profileMVPMatrixCount++);else{const t=mat4.create();mat4.mul(t,this._cgl.vMatrix,this._cgl.mMatrix),this._cgl.gl.uniformMatrix4fv(this._mvMatrixUniform,!1,t),this._cgl.profileData.profileMVPMatrixCount++}this._normalMatrixUniform&&(mat4.invert(this._tempNormalMatrix,this._cgl.mMatrix),mat4.transpose(this._tempNormalMatrix,this._tempNormalMatrix),this._cgl.gl.uniformMatrix4fv(this._normalMatrixUniform,!1,this._tempNormalMatrix),this._cgl.profileData.profileMVPMatrixCount++);for(let t=0;t<this._libs.length;t++)this._libs[t].onBind&&this._libs[t].onBind.bind(this._libs[t])(this._cgl,this);return this._bindTextures(),this._isValid}},ft.prototype.unBind=function(){},ft.prototype.toggleDefine=function(t,e){e&&"object"==typeof e&&e.addEventListener&&(e.changeListener&&e.removeEventListener(e.changeListener),e.onToggleDefine=e=>{this.toggleDefine(t,e)},e.changeListener=e.on("change",e.onToggleDefine),e=e.get()),e?this.define(t):this.removeDefine(t)},ft.prototype.define=function(t,e){null==e&&(e=""),"object"==typeof e&&(e.removeEventListener("change",e.onDefineChange),e.onDefineChange=e=>{this.define(t,e)},e.on("change",e.onDefineChange),e=e.get());for(let i=0;i<this._defines.length;i++){if(this._defines[i][0]==t&&this._defines[i][1]==e)return;if(this._defines[i][0]==t)return this._defines[i][1]=e,this.setWhyCompile("define "+t+" "+e),void(this._needsRecompile=!0)}this.setWhyCompile("define "+t+" "+e),this._needsRecompile=!0,this._defines.push([t,e])},ft.prototype.getDefines=function(){return this._defines},ft.prototype.getDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return this._defines[e][1];return null},ft.prototype.hasDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return!0},ft.prototype.removeDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return this._defines.splice(e,1),this._needsRecompile=!0,void this.setWhyCompile("define removed:"+t)},ft.prototype.removeModule=function(t){for(let e=0;e<this._modules.length;e++)if(t&&t.id&&(this._modules[e].id==t.id||!this._modules[e])){let i=!0;for(;i;){i=!1;for(let e=0;e<this._uniforms.length;e++)0!=this._uniforms[e].getName().indexOf(t.prefix)||(this._uniforms.splice(e,1),i=!0)}this._needsRecompile=!0,this.setWhyCompile("remove module "+t.title),this._modules.splice(e,1);break}},ft.prototype.getNumModules=function(){return this._modules.length},ft.prototype.getCurrentModules=function(){return this._modules},ft.prototype.addModule=function(t,e){if(!this.hasModule(t.id))return t.id||(t.id=CABLES.simpleId()),t.numId||(t.numId=this._moduleNumId),t.num||(t.num=this._modules.length),e&&!e.group&&(e.group=b()),t.group||(t.group=e?e.group:b()),t.prefix="mod"+t.group+"_",this._modules.push(t),this._needsRecompile=!0,this.setWhyCompile("add module "+t.title),this._moduleNumId++,t},ft.prototype.hasModule=function(t){for(let e=0;e<this._modules.length;e++)if(this._modules[e].id==t)return!0;return!1},ft.prototype.setModules=function(t){this._moduleNames=t},ft.prototype.dispose=function(){this._cgl.gl.deleteProgram(this._program)},ft.prototype.needsRecompile=function(){return this._needsRecompile},ft.prototype.setDrawBuffers=function(t){console.log("useless drawbuffers...?!")},ft.prototype.getUniforms=function(){return this._uniforms},ft.prototype.getUniform=function(t){for(let e=0;e<this._uniforms.length;e++)if(this._uniforms[e].getName()==t)return this._uniforms[e];return null},ft.prototype.removeAllUniforms=function(){this._uniforms=[]},ft.prototype.removeUniform=function(t){for(let e=0;e<this._uniforms.length;e++)this._uniforms[e].getName()==t&&this._uniforms.splice(e,1);this._needsRecompile=!0,this.setWhyCompile("remove uniform "+t)},ft.prototype._addUniform=function(t){this._uniforms.push(t),this.setWhyCompile("add uniform "+name),this._needsRecompile=!0},ft.prototype.addUniformFrag=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="frag",o},ft.prototype.addUniformVert=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="vert",o},ft.prototype.addUniformBoth=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="both",o},ft.prototype.addUniformStructFrag=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if(!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="frag",s[e+"."+n.name]=i}}return s},ft.prototype.addUniformStructVert=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if(!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="vert",s[e+"."+n.name]=i}}return s},ft.prototype.addUniformStructBoth=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if("2i"!==n.type&&"i"!==n.type&&"3i"!==n.type||this._log.error("Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:",t," with member:",n.name," of type:",n.type,"."),!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="both",s[e+"."+n.name]=i}}return s},ft.prototype.hasUniform=function(t){for(let e=0;e<this._uniforms.length;e++)if(this._uniforms[e].getName()==t)return!0;return!1},ft.prototype._createProgram=function(t,e){this._cgl.printError("before _createprogram");const i=this._cgl.gl.createProgram();return this.vshader=ft.createShader(this._cgl,t,this._cgl.gl.VERTEX_SHADER,this),this.fshader=ft.createShader(this._cgl,e,this._cgl.gl.FRAGMENT_SHADER,this),this.vshader&&this.fshader?(this._cgl.gl.attachShader(i,this.vshader),this._cgl.gl.attachShader(i,this.fshader),this._linkProgram(i,t,e),this._cgl.printError("shader _createProgram"),i):(this._isValid=!1,this._cgl.printError("shader _createProgram"),console.log("could not link shaderprogram"),null)},ft.prototype.hasErrors=function(){return this._hasErrors},ft.prototype._linkProgram=function(t,e,i){this._cgl.printError("before _linkprogram"),this._feedBackNames.length>0&&this._cgl.gl.transformFeedbackVaryings(t,this._feedBackNames,this._cgl.gl.SEPARATE_ATTRIBS),this._cgl.gl.linkProgram(t),this._cgl.printError("gl.linkprogram"),this._isValid=!0,this._hasErrors=!1,!1!==this._cgl.patch.config.glValidateShader&&(this._cgl.gl.validateProgram(t),this._cgl.gl.getProgramParameter(t,this._cgl.gl.VALIDATE_STATUS)||(console.log("shaderprogram validation failed..."),console.log(this._name+" programinfo: ",this._cgl.gl.getProgramInfoLog(t))),this._cgl.gl.getProgramParameter(t,this._cgl.gl.LINK_STATUS)||(this._hasErrors=!0,this._log.warn(this._cgl.gl.getShaderInfoLog(this.fshader)||"empty shader infolog"),this._log.warn(this._cgl.gl.getShaderInfoLog(this.vshader)||"empty shader infolog"),this._log.error(this._name+" shader linking fail..."),console.log(this._name+" programinfo: ",this._cgl.gl.getProgramInfoLog(t)),console.log("--------------------------------------"),console.log(this),console.log("--------------------------------------"),this._isValid=!1,this._name="errorshader",this.setSource(ft.getDefaultVertexShader(),ft.getErrorFragmentShader()),this._cgl.printError("shader link err")))},ft.prototype.getProgram=function(){return this._program},ft.prototype.setFeedbackNames=function(t){this.setWhyCompile("setFeedbackNames"),this._needsRecompile=!0,this._feedBackNames=t},ft.prototype.getDefaultVertexShader=ft.getDefaultVertexShader=function(){return"{{MODULES_HEAD}}\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN vec3 attrTangent,attrBiTangent;\n\nIN float attrVertIndex;\n\nOUT vec2 texCoord;\nOUT vec3 norm;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\nvoid main()\n{\n    texCoord=attrTexCoord;\n    norm=attrVertNormal;\n    vec4 pos=vec4(vPosition,  1.0);\n    vec3 tangent=attrTangent;\n    vec3 bitangent=attrBiTangent;\n    mat4 mMatrix=modelMatrix;\n    gl_PointSize=10.0;\n\n    {{MODULE_VERTEX_POSITION}}\n    gl_Position = projMatrix * (viewMatrix*mMatrix) * pos;\n}\n"},ft.prototype.getDefaultFragmentShader=ft.getDefaultFragmentShader=function(t,e,i){return null==t&&(t=.5,e=.5,i=.5),"".endl()+"IN vec2 texCoord;".endl()+"{{MODULES_HEAD}}".endl()+"void main()".endl()+"{".endl()+"    vec4 col=vec4("+t+","+e+","+i+",1.0);".endl()+"    {{MODULE_COLOR}}".endl()+"    outColor = col;".endl()+"}"},ft.prototype.addAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t.name&&this._attributes[e].nameFrag==t.nameFrag)return;this._attributes.push(t),this._needsRecompile=!0,this.setWhyCompile("addAttribute")},ft.prototype.bindTextures=ft.prototype._bindTextures=function(){this._textureStackTex.length>this._cgl.maxTextureUnits&&this._log.warn("[shader._bindTextures] too many textures bound",this._textureStackTex.length+"/"+this._cgl.maxTextureUnits);for(let t=0;t<this._textureStackTex.length;t++)if(this._textureStackTex[t]||this._textureStackTexCgl[t]){let e=this._textureStackTex[t];this._textureStackTexCgl[t]&&(e=this._textureStackTexCgl[t].tex||CGL.Texture.getEmptyTexture(this._cgl).tex);let i=!0;this._textureStackUni[t]?(this._textureStackUni[t].setValue(t),i=this._cgl.setTexture(t,e,this._textureStackType[t])):(this._log.warn("no uniform for pushtexture",this._name),i=this._cgl.setTexture(t,e,this._textureStackType[t])),i||console.warn("tex bind failed",this.getName(),this._textureStackUni[t])}else this._log.warn("no texture for pushtexture",this._name)},ft.prototype.setUniformTexture=function(t,e){e=e||CGL.Texture.getTempTexture(this._cgl);for(let i=0;i<this._textureStackUni.length;i++)if(this._textureStackUni[i]==t){const t=this._textureStackTex[i]||this._textureStackTexCgl[i];return e.hasOwnProperty("tex")?(this._textureStackTexCgl[i]=e,this._textureStackTex[i]=null):(this._textureStackTexCgl[i]=null,this._textureStackTex[i]=e),t}return null},ft.prototype.pushTexture=function(t,e,i){if(t){if(e){if(!(e.hasOwnProperty("tex")||e instanceof WebGLTexture))return this._log.warn(new Error("invalid texture").stack),void this._log.warn("[cgl_shader] invalid texture...",e);this._textureStackUni.push(t),e.hasOwnProperty("tex")?(this._textureStackTexCgl.push(e),this._textureStackTex.push(null)):(this._textureStackTexCgl.push(null),this._textureStackTex.push(e)),this._textureStackType.push(i)}}else console.log("no uniform given to texturestack",t)},ft.prototype.popTexture=function(){this._textureStackUni.pop(),this._textureStackTex.pop(),this._textureStackTexCgl.pop(),this._textureStackType.pop()},ft.prototype.popTextures=function(){this._textureStackTex.length=this._textureStackTexCgl.length=this._textureStackType.length=this._textureStackUni.length=0},ft.prototype.getMaterialId=function(){return this._materialId},ft.prototype.getInfo=function(){const t={};return t.name=this._name,t.defines=this.getDefines(),t.hasErrors=this.hasErrors(),t},ft.getErrorFragmentShader=function(){return"".endl()+"void main()".endl()+"{".endl()+"   float g=mod((gl_FragCoord.y+gl_FragCoord.x),50.0)/50.0;".endl()+"   g= step(0.1,g);".endl()+"   outColor = vec4( g+0.5, 0.0, 0.0, 1.0);".endl()+"}"},ft.createShader=function(t,e,i,s){if(t.aborted)return;const r=t.gl.createShader(i);if(t.gl.shaderSource(r,e),t.gl.compileShader(r),!t.gl.getShaderParameter(r,t.gl.COMPILE_STATUS)){let o=t.gl.getShaderInfoLog(r);if(!o)return void console.warn("empty shader info log",this._name);console.log("compile status: ");const a=function(t){const e=[],i=t.split("\n");for(const t in i){const s=i[t].split(":");parseInt(s[2],10)&&e.push(parseInt(s[2],10))}return e}(o);let h='<pre style="margin-bottom:0px;"><code class="shaderErrorCode language-glsl" style="padding-bottom:0px;max-height: initial;max-width: initial;">';const l=e.match(/^.*((\r\n|\n|\r)|$)/gm);if(!t.aborted&&o){i==t.gl.VERTEX_SHADER&&console.log("VERTEX_SHADER"),i==t.gl.FRAGMENT_SHADER&&console.log("FRAGMENT_SHADER");for(const t in l){const e=parseInt(t,10)+1,i=e+": "+l[t];console.log(i);let s=!1;for(const t in a)a[t]==e&&(s=!0);s&&(h+="</code></pre>",h+='<pre style="margin:0"><code class="language-glsl" style="background-color:#660000;padding-top:0px;padding-bottom:0px">'),h+=(n=i)&&dt.test(n)?n.replace(_t,(function(t){return pt[t]})):n||"",s&&(h+="</code></pre>",h+='<pre style="margin:0"><code class="language-glsl" style=";padding-top:0px;padding-bottom:0px">')}}console.warn(o),o=o.replace(/\n/g,"<br/>"),t.patch.isEditorMode()&&console.log("Shader error ",s._name,o,this),h=o+"<br/>"+h+"<br/><br/>",h+="</code></pre>",t.patch.emitEvent("criticalError",{title:"Shader error "+s._name,text:h,exception:{message:o}}),s.setSource(ft.getDefaultVertexShader(),ft.getErrorFragmentShader())}var n;return r};class mt{constructor(t){this._cgl=t,this._lastTime=0,this.pause=!1,this.profileUniformCount=0,this.profileShaderBinds=0,this.profileUniformCount=0,this.profileShaderCompiles=0,this.profileVideosPlaying=0,this.profileMVPMatrixCount=0,this.profileEffectBuffercreate=0,this.profileShaderGetUniform=0,this.profileFrameBuffercreate=0,this.profileMeshSetGeom=0,this.profileTextureNew=0,this.profileGenMipMap=0,this.profileOnAnimFrameOps=0,this.profileFencedPixelRead=0,this.profileMainloopMs=0,this.profileMeshDraw=0,this.profileTextureEffect=0,this.profileTexPreviews=0,this.shaderCompileTime=0,this.profileMeshNumElements=0,this.profileMeshAttributes=0,this.profileSingleMeshAttribute=[],this.heavyEvents=[],this.doProfileGlQuery=!1,this.glQueryData={}}clear(){this.profileSingleMeshAttribute={},this.profileMeshAttributes=0,this.profileUniformCount=0,this.profileShaderGetUniform=0,this.profileShaderCompiles=0,this.profileShaderBinds=0,this.profileTextureResize=0,this.profileFrameBuffercreate=0,this.profileEffectBuffercreate=0,this.profileTextureDelete=0,this.profileMeshSetGeom=0,this.profileVideosPlaying=0,this.profileMVPMatrixCount=0,this.profileNonTypedAttrib=0,this.profileNonTypedAttribNames="",this.profileTextureNew=0,this.profileGenMipMap=0,this.profileFramebuffer=0,this.profileMeshDraw=0,this.profileTextureEffect=0,this.profileTexPreviews=0,this.profileMeshNumElements=0,this.profileFencedPixelRead=0}clearGlQuery(){for(let t in this.glQueryData)(!this.glQueryData[t].lastClear||performance.now()-this.glQueryData[t].lastClear>1e3)&&(this.glQueryData[t].time=this.glQueryData[t]._times/this.glQueryData[t]._numcount,this.glQueryData[t].num=this.glQueryData[t]._numcount,this.glQueryData[t]._times=0,this.glQueryData[t]._numcount=0,this.glQueryData[t].lastClear=performance.now())}addHeavyEvent(t,e,i){const s={event:t,name:e,info:i,date:performance.now()};this.heavyEvents.push(s),this._cgl.emitEvent("heavyEvent",s)}}class Et{constructor(t){t?this._canvasEle=t.canvasEle:console.error("CgCanvas no options"),t.cg||console.error("CgCanvas options has no cg"),t.canvasEle||console.error("CgCanvas options has no canvasEle"),this._cg=t.cg,this.pixelDensity=1,this.canvasWidth=this.canvasEle.clientWidth,this.canvasHeight=this.canvasEle.clientHeight,this._oldWidthRp=-1,this._oldHeightRp=-1,this.setSize(this.canvasWidth,this.canvasHeight)}get canvasEle(){return this._canvasEle}setSize(t,e,i){this._oldWidthRp==t*this.pixelDensity&&this._oldHeightRp==e*this.pixelDensity||(this._oldWidthRp=this.canvasEle.width=t*this.pixelDensity,this._oldHeightRp=this.canvasEle.height=e*this.pixelDensity,i||(this.canvasEle.style.width=t+"px",this.canvasEle.style.height=e+"px"),this.updateSize(),this._cg.emitEvent("resize"))}updateSize(){this.canvasEle.width=this.canvasWidth=this.canvasEle.clientWidth*this.pixelDensity,this.canvasEle.height=this.canvasHeight=this.canvasEle.clientHeight*this.pixelDensity}dispose(){this._canvasEle.remove(),this._canvasEle=null}}const Tt={GAPI_WEBGL:0,GAPI_WEBGPU:1,DEPTH_COMPARE_NEVER:0,DEPTH_COMPARE_LESS:1,DEPTH_COMPARE_EQUAL:2,DEPTH_COMPARE_LESSEQUAL:3,DEPTH_COMPARE_GREATER:4,DEPTH_COMPARE_NOTEQUAL:5,DEPTH_COMPARE_GREATEREQUAL:6,DEPTH_COMPARE_ALWAYS:7,CULL_NONE:0,CULL_BACK:1,CULL_FRONT:2,CULL_BOTH:3,Geometry:G,BoundingBox:V,FpsCounter:class extends H{constructor(){super(),this._timeStartFrame=0,this._timeStartSecond=0,this._fpsCounter=0,this._msCounter=0,this._frameCount=0,this.stats={ms:0,fps:0}}get frameCount(){return this._frameCount}startFrame(){this._timeStartFrame=CABLES.now()}endFrame(){this._frameCount++,this._fpsCounter++;const t=CABLES.now()-this._timeStartFrame;this._msCounter+=t,CABLES.now()-this._timeStartSecond>1e3&&this.endSecond()}endSecond(){this.stats.fps=this._fpsCounter,this.stats.ms=Math.round(this._msCounter/this._fpsCounter*100)/100,this.emitEvent("performance",this.stats),this._fpsCounter=0,this._msCounter=0,this._timeStartSecond=CABLES.now()}},CgCanvas:Et},At=function(){this._arr=[mat4.create()],this._index=0,this.stateCounter=0};At.prototype.push=function(t){if(this._index++,this.stateCounter++,this._index==this._arr.length){const t=mat4.create();this._arr.push(t)}return mat4.copy(this._arr[this._index],t||this._arr[this._index-1]),this._arr[this._index]},At.prototype.pop=function(){return this.stateCounter++,this._index--,this._index<0&&(this._index=0),this._arr[this._index]},At.prototype.length=function(){return this._index},__webpack_require__(122);class bt extends H{constructor(t){super(),this.fpsCounter=new CABLES.CG.FpsCounter,this._identView=vec3.create(),this._ident=vec3.create(),vec3.set(this._identView,0,0,-2),vec3.set(this._ident,0,0,0),this.patch=t,this.DEPTH_COMPARE_FUNC_NEVER=0,this.DEPTH_COMPARE_FUNC_LESS=1,this.DEPTH_COMPARE_FUNC_EQUAL=2,this.DEPTH_COMPARE_FUNC_LESSEQUAL=3,this.DEPTH_COMPARE_FUNC_GREATER=4,this.DEPTH_COMPARE_FUNC_NOTEQUAL=5,this.DEPTH_COMPARE_FUNC_GREATEREQUAL=6,this.DEPTH_COMPARE_FUNC_ALWAYS=7,this.pMatrix=mat4.create(),this.mMatrix=mat4.create(),this.vMatrix=mat4.create(),this._textureslots=[],this._pMatrixStack=new At,this._mMatrixStack=new At,this._vMatrixStack=new At,this.canvasScale=1,mat4.identity(this.mMatrix),mat4.identity(this.vMatrix),window.matchMedia("screen and (min-resolution: 2dppx)").addEventListener("change",(t=>{this.emitEvent("resize")}))}get canvasWidth(){return this.cgCanvas.canvasWidth}get canvasHeight(){return this.cgCanvas.canvasHeight}set pixelDensity(t){this.cgCanvas.pixelDensity!=t&&(this.cgCanvas.pixelDensity=t,this.cgCanvas.updateSize(),this.emitEvent("resize"))}get pixelDensity(){return this.cgCanvas.pixelDensity}getGApiName(){return["WebGL","WebGPU"][this.gApi]}get canvas(){return this.cgCanvas.canvasEle}setCanvas(t){this.cgCanvas&&t==this.cgCanvas.canvasEle||("string"==typeof t&&(t=document.getElementById(t)),this.cgCanvas=new Et({canvasEle:t,cg:this}),this._setCanvas&&this._setCanvas(t),this.updateSize())}updateSize(){this.cgCanvas.updateSize()}setSize(t,e,i){this.cgCanvas.setSize(t,e,i)}_resizeToWindowSize(){this.setSize(window.innerWidth,window.innerHeight),this.updateSize()}_resizeToParentSize(){const t=this.canvas.parentElement;t?(this.setSize(t.clientWidth,t.clientHeight),this.updateSize()):this._log.error("cables: can not resize to container element")}setAutoResize(t){window.removeEventListener("resize",this._resizeToWindowSize.bind(this)),window.removeEventListener("resize",this._resizeToParentSize.bind(this)),"window"==t&&(window.addEventListener("resize",this._resizeToWindowSize.bind(this)),window.addEventListener("orientationchange",this._resizeToWindowSize.bind(this)),this._resizeToWindowSize()),"parent"==t&&(window.addEventListener("resize",this._resizeToParentSize.bind(this)),this._resizeToParentSize())}pushPMatrix(){this.pMatrix=this._pMatrixStack.push(this.pMatrix)}popPMatrix(){return this.pMatrix=this._pMatrixStack.pop(),this.pMatrix}getProjectionMatrixStateCount(){return this._pMatrixStack.stateCounter}pushModelMatrix(){this.mMatrix=this._mMatrixStack.push(this.mMatrix)}popModelMatrix(){return this.mMatrix=this._mMatrixStack.pop(),this.mMatrix}modelMatrix(){return this.mMatrix}pushViewMatrix(){this.vMatrix=this._vMatrixStack.push(this.vMatrix)}popViewMatrix(){this.vMatrix=this._vMatrixStack.pop()}getViewMatrixStateCount(){return this._vMatrixStack.stateCounter}_startMatrixStacks(t,e){t=t||this._ident,e=e||this._identView,mat4.perspective(this.pMatrix,45,this.canvasWidth/this.canvasHeight,.1,1e3),mat4.identity(this.mMatrix),mat4.identity(this.vMatrix),mat4.translate(this.mMatrix,this.mMatrix,t),mat4.translate(this.vMatrix,this.vMatrix,e),this.pushPMatrix(),this.pushModelMatrix(),this.pushViewMatrix()}_endMatrixStacks(){this.popViewMatrix(),this.popModelMatrix(),this.popPMatrix()}dispose(){this.aborted=!0,this.cgCanvas&&this.cgCanvas.dispose(),this._dispose&&this._dispose()}}class xt extends bt{constructor(t){super(t),this.gApi=Tt.GAPI_WEBGL,this.aborted=!1,this.pushMvMatrix=this.pushModelMatrix,this.popMvMatrix=this.popmMatrix=this.popModelMatrix,this.profileData=new mt(this),this._log=new r("cgl_context"),this._viewPort=[0,0,0,0],this.glVersion=0,this.glUseHalfFloatTex=!1,this.clearCanvasTransparent=!0,this.clearCanvasDepth=!0,this.debugOneFrame=!1,this.checkGlErrors=!1,this.maxTextureUnits=0,this.maxVaryingVectors=0,this.currentProgram=null,this._hadStackError=!1,this.glSlowRenderer=!1,this._isSafariCrap=!1,this.temporaryTexture=null,this.frameStore={},this._onetimeCallbacks=[],this.gl=null,this._cursor="auto",this._currentCursor="",this._viewPortStack=[],this._glFrameBufferStack=[],this._frameBufferStack=[],this._shaderStack=[],this._stackDepthTest=[],this._simpleShader=new ft(this,"simpleshader"),this._simpleShader.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]),this._simpleShader.setSource(ft.getDefaultVertexShader(),ft.getDefaultFragmentShader()),this._currentShader=this._simpleShader,this._oldCanvasWidth=-1,this._oldCanvasHeight=-1,this._enabledExtensions={}}get viewPort(){if(this._viewPortStack.length>3){const t=this._viewPortStack.length;return[this._viewPortStack[t-4],this._viewPortStack[t-3],this._viewPortStack[t-2],this._viewPortStack[t-1]]}return this._viewPort}get mvMatrix(){return this.mMatrix}set mvMatrix(t){this.mMatrix=t}exitError(t,e){console.log(t,e),this.patch.exitError(t,e),this.aborted=!0}_setCanvas(t){if(t||this._log.stack("_setCanvas undef"),this.patch.config.canvas||(this.patch.config.canvas={}),this.patch.config.canvas.hasOwnProperty("preserveDrawingBuffer")||(this.patch.config.canvas.preserveDrawingBuffer=!1),this.patch.config.canvas.hasOwnProperty("premultipliedAlpha")||(this.patch.config.canvas.premultipliedAlpha=!1),this.patch.config.canvas.hasOwnProperty("alpha")||(this.patch.config.canvas.alpha=!1),this.patch.config.canvas.stencil=!0,this.patch.config.hasOwnProperty("clearCanvasColor")&&(this.clearCanvasTransparent=this.patch.config.clearCanvasColor),this.patch.config.hasOwnProperty("clearCanvasDepth")&&(this.clearCanvasDepth=this.patch.config.clearCanvasDepth),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&navigator.userAgent.match(/iPhone/i)&&(this._isSafariCrap=!0,this.glUseHalfFloatTex=!0),this.patch.config.canvas.forceWebGl1||(this.gl=t.getContext("webgl2",this.patch.config.canvas)),this.gl&&"WebGL 1.0"!=this.gl.getParameter(this.gl.VERSION))this.glVersion=2;else{this.gl=t.getContext("webgl",this.patch.config.canvas)||t.getContext("experimental-webgl",this.patch.config.canvas),this.glVersion=1,/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&(this.patch.config.canvas.hasOwnProperty("powerPreference")||(this.patch.config.canvas.powerPreference="high-performance")),this.enableExtension("OES_standard_derivatives");const e=this.enableExtension("ANGLE_instanced_arrays")||this.gl;e.vertexAttribDivisorANGLE&&(this.gl.vertexAttribDivisor=e.vertexAttribDivisorANGLE.bind(e),this.gl.drawElementsInstanced=e.drawElementsInstancedANGLE.bind(e))}if(!this.gl||this.gl.isContextLost())return this.aborted=!0,void this.exitError("NO_WEBGL","sorry, could not initialize WebGL. Please check if your Browser supports WebGL or try to restart your browser.");const e=this.enableExtension("WEBGL_debug_renderer_info");if(e&&(this.glRenderer=this.gl.getParameter(e.UNMASKED_RENDERER_WEBGL),"Google SwiftShader"===this.glRenderer&&(this.glSlowRenderer=!0)),this.canvas.addEventListener("webglcontextlost",(t=>{if(this.aborted)return console.log("[cgl_state] aborted context lost... can be ignored...");this._log.error("canvas lost...",t),this.emitEvent("webglcontextlost"),this.aborted=!0})),this.maxVaryingVectors=this.gl.getParameter(this.gl.MAX_VARYING_VECTORS),this.maxTextureUnits=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.maxTexSize=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),this.maxUniformsFrag=this.gl.getParameter(this.gl.MAX_FRAGMENT_UNIFORM_VECTORS),this.maxUniformsVert=this.gl.getParameter(this.gl.MAX_VERTEX_UNIFORM_VECTORS),this.maxSamples=0,this.gl.MAX_SAMPLES&&(this.maxSamples=this.gl.getParameter(this.gl.MAX_SAMPLES)),1==this.glVersion){this.enableExtension("OES_standard_derivatives");const t=this.enableExtension("ANGLE_instanced_arrays")||this.gl;t.vertexAttribDivisorANGLE&&(this.gl.vertexAttribDivisor=t.vertexAttribDivisorANGLE.bind(t),this.gl.drawElementsInstanced=t.drawElementsInstancedANGLE.bind(t))}this.DEPTH_FUNCS=[this.gl.NEVER,this.gl.ALWAYS,this.gl.LESS,this.gl.LEQUAL,this.gl.GREATER,this.gl.GEQUAL,this.gl.EQUAL,this.gl.NOTEQUAL],this.CULL_MODES=[null,this.gl.BACK,this.gl.FRONT,this.gl.FRONT_AND_BACK]}getInfo(){return{glVersion:this.glVersion,glRenderer:this.glRenderer,glUseHalfFloatTex:this.glUseHalfFloatTex,maxVaryingVectors:this.maxVaryingVectors,maxTextureUnits:this.maxTextureUnits,maxTexSize:this.maxTexSize,maxUniformsFrag:this.maxUniformsFrag,maxUniformsVert:this.maxUniformsVert,maxSamples:this.maxSamples}}popViewPort(){this._viewPortStack.pop(),this._viewPortStack.pop(),this._viewPortStack.pop(),this._viewPortStack.pop(),0==this._viewPortStack.length?this.setViewPort(0,0,this.canvasWidth,this.canvasHeight):this.setViewPort(this._viewPortStack[this._viewPort.length-4],this._viewPortStack[this._viewPort.length-3],this._viewPortStack[this._viewPort.length-2],this._viewPortStack[this._viewPort.length-1])}pushViewPort(t,e,i,s){this._viewPortStack.push(t,e,i,s),this.setViewPort(t,e,i,s)}getViewPort(){return this._viewPort}resetViewPort(){this.gl.viewport(this._viewPort[0],this._viewPort[1],this._viewPort[2],this._viewPort[3])}setViewPort(t,e,i,s){this._viewPort[0]=Math.round(t),this._viewPort[1]=Math.round(e),this._viewPort[2]=Math.round(i),this._viewPort[3]=Math.round(s),this.gl.viewport(this._viewPort[0],this._viewPort[1],this._viewPort[2],this._viewPort[3])}screenShot(t,e,i,s){e&&(this.gl.clearColor(1,1,1,1),this.gl.colorMask(!1,!1,!1,!0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.colorMask(!0,!0,!0,!0)),this.canvas&&this.canvas.toBlob&&this.canvas.toBlob((e=>{t?t(e):this._log.log("no screenshot callback...")}),i,s)}endFrame(){this.patch.isEditorMode()&&CABLES.GL_MARKER.drawMarkerLayer(this),this.setPreviousShader(),this._vMatrixStack.length()>0&&this.logStackError("view matrix stack length !=0 at end of rendering..."),this._mMatrixStack.length()>0&&this.logStackError("mvmatrix stack length !=0 at end of rendering..."),this._pMatrixStack.length()>0&&this.logStackError("pmatrix stack length !=0 at end of rendering..."),this._glFrameBufferStack.length>0&&this.logStackError("glFrameBuffer stack length !=0 at end of rendering..."),this._stackDepthTest.length>0&&this.logStackError("depthtest stack length !=0 at end of rendering..."),this._stackDepthWrite.length>0&&this.logStackError("depthwrite stack length !=0 at end of rendering..."),this._stackDepthFunc.length>0&&this.logStackError("depthfunc stack length !=0 at end of rendering..."),this._stackBlend.length>0&&this.logStackError("blend stack length !=0 at end of rendering..."),this._stackBlendMode.length>0&&this.logStackError("blendMode stack length !=0 at end of rendering..."),this._shaderStack.length>0&&this.logStackError("this._shaderStack length !=0 at end of rendering..."),this._stackCullFace.length>0&&this.logStackError("this._stackCullFace length !=0 at end of rendering..."),this._stackCullFaceFacing.length>0&&this.logStackError("this._stackCullFaceFacing length !=0 at end of rendering..."),this._viewPortStack.length>0&&this.logStackError("viewport stack length !=0 at end of rendering..."),this._frameStarted=!1,this._oldCanvasWidth==this.canvasWidth&&this._oldCanvasHeight==this.canvasHeight||(this._oldCanvasWidth=this.canvasWidth,this._oldCanvasHeight=this.canvasHeight,this.emitEvent("resize")),this._cursor!=this._currentCursor&&(this._currentCursor=this.canvas.style.cursor=this._cursor),this.emitEvent("endframe"),this.fpsCounter.endFrame()}logStackError(t){this._hadStackError||(this._hadStackError=!0,this._log.warn("["+this.canvas.id+"]: ",t))}getShader(){if(this._currentShader&&(!this.frameStore||!0===this.frameStore.renderOffscreen==this._currentShader.offScreenPass==1))return this._currentShader;for(let t=this._shaderStack.length-1;t>=0;t--)if(this._shaderStack[t]&&this.frameStore.renderOffscreen==this._shaderStack[t].offScreenPass)return this._shaderStack[t]}getDefaultShader(){return this._simpleShader}pushShader(t){if(this.frameStore.forceShaderMods)for(let e=0;e<this.frameStore.forceShaderMods.length;e++)t=this.frameStore.forceShaderMods[e].bind(t,!1);this._shaderStack.push(t),this._currentShader=t}setPreviousShader(){if(this.frameStore.forceShaderMods)for(let t=0;t<this.frameStore.forceShaderMods.length;t++)this.frameStore.forceShaderMods[t].unbind(!1);if(0===this._shaderStack.length)throw new Error("Invalid shader stack pop!");this._shaderStack.pop(),this._currentShader=this._shaderStack[this._shaderStack.length-1]}pushGlFrameBuffer(t){this._glFrameBufferStack.push(t)}popGlFrameBuffer(){return 0==this._glFrameBufferStack.length?null:(this._glFrameBufferStack.pop(),this._glFrameBufferStack[this._glFrameBufferStack.length-1])}getCurrentGlFrameBuffer(){return 0===this._glFrameBufferStack.length?null:this._glFrameBufferStack[this._glFrameBufferStack.length-1]}pushFrameBuffer(t){this._frameBufferStack.push(t)}popFrameBuffer(){return 0==this._frameBufferStack.length?null:(this._frameBufferStack.pop(),this._frameBufferStack[this._frameBufferStack.length-1])}getCurrentFrameBuffer(){return 0===this._frameBufferStack.length?null:this._frameBufferStack[this._frameBufferStack.length-1]}renderStart(t,e,i){this.fpsCounter.startFrame(),this.pushDepthTest(!0),this.pushDepthWrite(!0),this.pushDepthFunc(t.gl.LEQUAL),this.pushCullFaceFacing(t.gl.BACK),this.pushCullFace(!1),t.setViewPort(0,0,t.canvasWidth,t.canvasHeight),this._startMatrixStacks(e,i),t.pushBlendMode(Z.BLEND_NORMAL,!1);for(let t=0;t<this._textureslots.length;t++)this._textureslots[t]=null;if(this.pushShader(this._simpleShader),this._frameStarted=!0,this._onetimeCallbacks.length>0){for(let t=0;t<this._onetimeCallbacks.length;t++)this._onetimeCallbacks[t]();this._onetimeCallbacks.length=0}this.emitEvent("beginFrame")}renderEnd(t){this._endMatrixStacks(),this.popDepthTest(),this.popDepthWrite(),this.popDepthFunc(),this.popCullFaceFacing(),this.popCullFace(),this.popBlend(),this.popBlendMode(),t.endFrame(),this.emitEvent("endFrame")}getTexture(t){return this._textureslots[t]}hasFrameStarted(){return this._frameStarted}checkFrameStarted(t){this._frameStarted||(this._log.warn("frame not started "+t),this.patch.printTriggerStack())}setTexture(t,e,i){return this.checkFrameStarted("cgl setTexture"),null===e&&(e=CGL.Texture.getEmptyTexture(this).tex),this._textureslots[t]!=e&&(this.gl.activeTexture(this.gl.TEXTURE0+t),this.gl.bindTexture(i||this.gl.TEXTURE_2D,e),this._textureslots[t]=e),!0}fullScreen(){this.canvas.requestFullscreen?this.canvas.requestFullscreen():this.canvas.mozRequestFullScreen?this.canvas.mozRequestFullScreen():this.canvas.webkitRequestFullscreen?this.canvas.webkitRequestFullscreen():this.canvas.msRequestFullscreen&&this.canvas.msRequestFullscreen()}printError(t){if(!this.checkGlErrors)return;let e=!1,i=this.gl.getError();if(i!=this.gl.NO_ERROR){let s="";i==this.gl.OUT_OF_MEMORY&&(s="OUT_OF_MEMORY"),i==this.gl.INVALID_ENUM&&(s="INVALID_ENUM"),i==this.gl.INVALID_OPERATION&&(s="INVALID_OPERATION"),i==this.gl.INVALID_FRAMEBUFFER_OPERATION&&(s="INVALID_FRAMEBUFFER_OPERATION"),i==this.gl.INVALID_VALUE&&(s="INVALID_VALUE"),i==this.gl.CONTEXT_LOST_WEBGL&&(this.aborted=!0,s="CONTEXT_LOST_WEBGL"),i==this.gl.NO_ERROR&&(s="NO_ERROR"),e=!0,this._log.warn("gl error ["+this.canvas.id+"]: ",t,i,s),-1==this.canvas.id.indexOf("glGuiCanvas")&&(this._loggedGlError||(this.patch.printTriggerStack(),this._log.stack("glerror"),this._loggedGlError=!0))}return i=this.gl.getError(),e}saveScreenshot(t,e,i,s,r){this.patch.renderOneFrame();let n=this.canvas.clientWidth*this.pixelDensity,o=this.canvas.clientHeight*this.pixelDensity;function a(t,e,i){return Array(e-String(t).length+1).join(i||"0")+t}i&&(this.canvas.width=i,n=i),s&&(this.canvas.height=s,o=s);const h=new Date,l="".concat(String(h.getFullYear())+String(h.getMonth()+1)+String(h.getDate()),"_").concat(a(h.getHours(),2)).concat(a(h.getMinutes(),2)).concat(a(h.getSeconds(),2));t?t+=".png":t="cables_"+l+".png",this.patch.cgl.screenShot(function(i){if(this.canvas.width=n,this.canvas.height=o,i){const s=document.createElement("a");s.download=t,s.href=URL.createObjectURL(i),setTimeout((function(){s.click(),e&&e(i)}),100)}else this._log.log("screenshot: no blob")}.bind(this),r)}_dispose(){this._simpleShader.dispose(),this.gl=null}}xt.prototype.popShader=xt.prototype.setPreviousShader,xt.prototype.setShader=xt.prototype.pushShader,xt.prototype.addNextFrameOnceCallback=function(t){t&&this._onetimeCallbacks.push(t)},xt.prototype._stackDepthTest=[],xt.prototype.pushDepthTest=function(t){this._stackDepthTest.push(t),t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)},xt.prototype.stateDepthTest=function(){return this._stackDepthTest[this._stackDepthTest.length-1]},xt.prototype.popDepthTest=function(){this._stackDepthTest.pop(),this._stackDepthTest[this._stackDepthTest.length-1]?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)},xt.prototype._stackDepthWrite=[],xt.prototype.pushDepthWrite=function(t){t=t||!1,this._stackDepthWrite.push(t),this.gl.depthMask(t)},xt.prototype.stateDepthWrite=function(){return this._stackDepthWrite[this._stackDepthWrite.length-1]},xt.prototype.popDepthWrite=function(){this._stackDepthWrite.pop(),this.gl.depthMask(this._stackDepthWrite[this._stackDepthWrite.length-1]||!1)},xt.prototype._stackCullFace=[],xt.prototype.pushCullFace=function(t){this._stackCullFace.push(t),t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE)},xt.prototype.stateCullFace=function(){return this._stackCullFace[this._stackCullFace.length-1]},xt.prototype.popCullFace=function(){this._stackCullFace.pop(),this._stackCullFace[this._stackCullFace.length-1]?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE)},xt.prototype._stackCullFaceFacing=[],xt.prototype.pushCullFaceFacing=function(t){this._stackCullFaceFacing.push(t),this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length-1])},xt.prototype.stateCullFaceFacing=function(){return this._stackCullFaceFacing[this._stackCullFaceFacing.length-1]},xt.prototype.popCullFaceFacing=function(){this._stackCullFaceFacing.pop(),this._stackCullFaceFacing.length>0&&this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length-1])},xt.prototype._stackDepthFunc=[],xt.prototype.pushDepthFunc=function(t){this._stackDepthFunc.push(t),this.gl.depthFunc(t)},xt.prototype.stateDepthFunc=function(){return this._stackDepthFunc.length>0&&this._stackDepthFunc[this._stackDepthFunc.length-1]},xt.prototype.popDepthFunc=function(){this._stackDepthFunc.pop(),this._stackDepthFunc.length>0&&this.gl.depthFunc(this._stackDepthFunc[this._stackDepthFunc.length-1])},xt.prototype._stackBlend=[],xt.prototype.pushBlend=function(t){this._stackBlend.push(t),t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND)},xt.prototype.popBlend=function(){this._stackBlend.pop(),this._stackBlend[this._stackBlend.length-1]?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND)},xt.prototype.stateBlend=function(){return this._stackBlend[this._stackBlend.length-1]},xt.prototype._stackBlendMode=[],xt.prototype._stackBlendModePremul=[],xt.prototype.pushBlendMode=function(t,e){this._stackBlendMode.push(t),this._stackBlendModePremul.push(e);const i=this._stackBlendMode.length-1;this.pushBlend(this._stackBlendMode[i]!==Z.BLEND_NONE),this._setBlendMode(this._stackBlendMode[i],this._stackBlendModePremul[i])},xt.prototype.popBlendMode=function(){this._stackBlendMode.pop(),this._stackBlendModePremul.pop();const t=this._stackBlendMode.length-1;this.popBlend(this._stackBlendMode[t]!==Z.BLEND_NONE),t>=0&&this._setBlendMode(this._stackBlendMode[t],this._stackBlendModePremul[t])},xt.prototype._stackStencil=[],xt.prototype.pushStencil=function(t){this._stackStencil.push(t),t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST)},xt.prototype.popStencil=function(){this._stackStencil.pop(),this._stackStencil[this._stackStencil.length-1]?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST)},xt.prototype.glGetAttribLocation=function(t,e){return this.gl.getAttribLocation(t,e)},xt.prototype.shouldDrawHelpers=function(t){if(this.frameStore.shadowPass)return!1;if(!t.patch.isEditorMode())return!1;const e=this.getCurrentFrameBuffer();return(!e||!e.getWidth||this.canvasWidth/this.canvasHeight==e.getWidth()/e.getHeight())&&(CABLES.UI.renderHelper||CABLES.UI.renderHelperCurrent&&t.isCurrentUiOp())},xt.prototype._setBlendMode=function(t,e){const i=this.gl;t==Z.BLEND_NONE||(t==Z.BLEND_ADD?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ONE,i.ONE,i.ONE,i.ONE)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.SRC_ALPHA,i.ONE)):t==Z.BLEND_SUB?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ZERO,i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ONE_MINUS_SRC_ALPHA)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ZERO,i.ONE_MINUS_SRC_COLOR)):t==Z.BLEND_MUL?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ZERO,i.SRC_COLOR)):t==Z.BLEND_NORMAL?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA)):(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA)):this._log.log("setblendmode: unknown blendmode"))},xt.prototype.createMesh=function(t,e){return new CGL.Mesh(this,t,e)},xt.prototype.setCursor=function(t){this._cursor=t},xt.prototype.enableExtension=function(t){if(this._enabledExtensions.hasOwnProperty(t))return this._enabledExtensions[t];const e=this.gl.getExtension(t);return this._enabledExtensions[t]=e,e?this._log.log("enabled extension",t):this._log.warn("[cgl_state] extension not available "+t),e};const vt={Framebuffer:function(t,e,i,s){const n=t;this._log=new r("Framebuffer"),this.valid=!0;let o=n.gl.DEPTH_TEXTURE;o||(o=n.enableExtension("WEBGL_depth_texture")),o||(o=n.enableExtension("WEBKIT_WEBGL_depth_texture")),o||(o=n.enableExtension("MOZ_WEBGL_depth_texture")),o||n.exitError("NO_DEPTH_TEXTURE","no depth texture support");let a=e||512,h=i||512;(s=s||{isFloatingPointTexture:!1}).hasOwnProperty("clear")||(s.clear=!0),s.hasOwnProperty("filter")||(s.filter=w.FILTER_LINEAR);const l=new w(n,{isFloatingPointTexture:s.isFloatingPointTexture,filter:s.filter,wrap:s.wrap||w.CLAMP_TO_EDGE});let c=null;o&&(c=new w(n,{isDepthTexture:!0})),this._options=s;const u=n.gl.createFramebuffer(),p=n.gl.createRenderbuffer();this.getWidth=function(){return a},this.getHeight=function(){return h},this.getGlFrameBuffer=function(){return u},this.getDepthRenderBuffer=function(){return p},this.getTextureColor=function(){return l},this.getTextureDepth=function(){return c},this.setFilter=function(t){l.filter=t,l.setSize(a,h)},this.setSize=function(t,e){if(t<2&&(t=2),e<2&&(e=2),a=Math.ceil(t),h=Math.ceil(e),n.profileData.profileFrameBuffercreate++,n.gl.bindFramebuffer(n.gl.FRAMEBUFFER,u),n.gl.bindRenderbuffer(n.gl.RENDERBUFFER,p),l.setSize(a,h),c&&c.setSize(a,h),o&&n.gl.renderbufferStorage(n.gl.RENDERBUFFER,n.gl.DEPTH_COMPONENT16,a,h),n.gl.framebufferTexture2D(n.gl.FRAMEBUFFER,n.gl.COLOR_ATTACHMENT0,n.gl.TEXTURE_2D,l.tex,0),o&&(n.gl.framebufferRenderbuffer(n.gl.FRAMEBUFFER,n.gl.DEPTH_ATTACHMENT,n.gl.RENDERBUFFER,p),n.gl.framebufferTexture2D(n.gl.FRAMEBUFFER,n.gl.DEPTH_ATTACHMENT,n.gl.TEXTURE_2D,c.tex,0)),!n.gl.isFramebuffer(u))throw new Error("Invalid framebuffer");const i=n.gl.checkFramebufferStatus(n.gl.FRAMEBUFFER);switch(i){case n.gl.FRAMEBUFFER_COMPLETE:break;case n.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",a,h,l.tex,p),this.valid=!1,new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case n.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),this.valid=!1,new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case n.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),this.valid=!1,new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case n.gl.FRAMEBUFFER_UNSUPPORTED:throw this._log.warn("FRAMEBUFFER_UNSUPPORTED"),this.valid=!1,new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");case 36059:this._log.warn("Incomplete: FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER from ext. Or Safari/iOS undefined behaviour."),this.valid=!1;break;default:throw this._log.warn("incomplete framebuffer",i),this.valid=!1,new Error("Incomplete framebuffer: "+i)}n.gl.bindTexture(n.gl.TEXTURE_2D,null),n.gl.bindRenderbuffer(n.gl.RENDERBUFFER,null),n.gl.bindFramebuffer(n.gl.FRAMEBUFFER,null)},this.renderStart=function(){n.pushModelMatrix(),n.gl.bindFramebuffer(n.gl.FRAMEBUFFER,u),n.pushGlFrameBuffer(u),n.pushFrameBuffer(this),n.pushPMatrix(),n.gl.viewport(0,0,a,h),this._options.clear&&(n.gl.clearColor(0,0,0,0),n.gl.clear(n.gl.COLOR_BUFFER_BIT|n.gl.DEPTH_BUFFER_BIT))},this.renderEnd=function(){n.popPMatrix(),n.gl.bindFramebuffer(n.gl.FRAMEBUFFER,n.popGlFrameBuffer()),n.popFrameBuffer(),n.popModelMatrix(),n.resetViewPort()},this.delete=function(){l.delete(),this.valid=!1,c&&c.delete(),n.gl.deleteRenderbuffer(p),n.gl.deleteFramebuffer(u)},this.dispose=this.delete,this.setSize(a,h)},Framebuffer2:M,Geometry:G,BoundingBox:V,Marker:function(t){const e=new G("marker");e.setPointVertices([1e-5,0,0,1,0,0,0,1e-5,0,0,1,0,0,0,1e-5,0,0,1]);const i=new tt(t,e,t.gl.LINES);i.setGeom(e);const s=new ft(t,"markermaterial"),r="".endl()+"precision highp float;".endl()+"IN vec3 axisColor;".endl()+"void main()".endl()+"{".endl()+"    vec4 col=vec4(axisColor,1.0);".endl()+"    outColor = col;".endl()+"}",n="".endl()+"IN vec3 vPosition;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"OUT vec3 axisColor;".endl()+"void main()".endl()+"{".endl()+"   vec4 pos=vec4(vPosition, 1.0);".endl()+"   if(pos.x!=0.0)axisColor=vec3(1.0,0.3,0.0);".endl()+"   if(pos.y!=0.0)axisColor=vec3(0.0,1.0,0.2);".endl()+"   if(pos.z!=0.0)axisColor=vec3(0.0,0.5,1.0);".endl()+"   gl_Position = projMatrix * mvMatrix * pos;".endl()+"}";s.setSource(n,r),this._vScale=vec3.create(),this.draw=function(t,e,r){const n=e||2;t.pushModelMatrix(),t.pushShader(s),vec3.set(this._vScale,n,n,n),mat4.scale(t.mvMatrix,t.mvMatrix,this._vScale),t.pushDepthTest(1==r),i.render(t.getShader()),t.popDepthTest(),t.popShader(),t.popModelMatrix()}},WirePoint:function(t){const e=t.gl.createBuffer(),i=vec3.create();this.render=function(t,s){t.pushModelMatrix(),vec3.set(i,s,s,s),mat4.scale(t.mvMatrix,t.mvMatrix,i);const r=t.getShader();r&&(r.bind(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.vertexAttribPointer(r.getAttrVertexPos(),e.itemSize,t.gl.FLOAT,!1,0,0),t.gl.enableVertexAttribArray(r.getAttrVertexPos()),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.drawArrays(t.gl.LINE_STRIP,0,e.numItems)),t.popModelMatrix()},function(){const i=[],s=24;let r=0,n=0;const o=.5;for(r=0;r<=Math.round(s);r++)n=360/Math.round(s)*r*at,i.push(Math.cos(n)*o),i.push(0),i.push(Math.sin(n)*o);for(r=0;r<=Math.round(s);r++)n=360/Math.round(s)*r*at,i.push(Math.cos(n)*o),i.push(Math.sin(n)*o),i.push(0);for(r=0;r<=Math.round(s);r++)n=360/Math.round(s)*r*at,i.push(0),i.push(Math.cos(n)*o),i.push(Math.sin(n)*o);t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(i),t.gl.STATIC_DRAW),e.itemSize=3,e.numItems=i.length/e.itemSize}()},WireCube:function(t){const e=t.gl.createBuffer(),i=vec3.create();this.render=function(t,s,r,n){t.pushModelMatrix(),vec3.set(i,s||1,r||1,n||1),mat4.scale(t.mvMatrix,t.mvMatrix,i);const o=t.getShader();o&&(o.bind(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.vertexAttribPointer(o.getAttrVertexPos(),e.itemSize,t.gl.FLOAT,!1,0,0),t.gl.enableVertexAttribArray(o.getAttrVertexPos()),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.drawArrays(t.gl.LINE_STRIP,0,e.numItems)),t.popModelMatrix()},function(){const i=[];i.push(-1,-1,1),i.push(1,-1,1),i.push(1,1,1),i.push(-1,1,1),i.push(-1,-1,1),i.push(-1,-1,-1),i.push(1,-1,-1),i.push(1,1,-1),i.push(-1,1,-1),i.push(-1,-1,-1),i.push(-1,-1,-1),i.push(-1,1,-1),i.push(-1,1,1),i.push(-1,-1,1),i.push(-1,-1,-1),i.push(1,-1,-1),i.push(1,1,-1),i.push(1,1,1),i.push(1,-1,1),i.push(1,-1,-1),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(i),t.gl.STATIC_DRAW),e.itemSize=3,e.numItems=i.length/e.itemSize}()},MatrixStack:At,Mesh:tt,MESH:$,ShaderLibMods:st,Shader:ft,Uniform:Q,MESHES:et,Context:xt,Texture:w,TextureEffect:it,isWindows:ht,getWheelSpeed:ct,getWheelDelta:ut,onLoadingAssetsFinished:null,ProfileData:mt,UniColorShader:class{constructor(t){this.shader=new CGL.Shader(t,"markermaterial");const e="".endl()+"void main()".endl()+"{".endl()+"    outColor = vec4(color.rgb,1.0);".endl()+"}",i="".endl()+"IN vec3 vPosition;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"void main()".endl()+"{".endl()+"   gl_Position = projMatrix * mvMatrix * vec4(vPosition,1.0);".endl()+"}";this.shader.setSource(i,e),this.coloruni=this.shader.addUniformFrag("4f","color",[1,.777,1,1])}setColor(t,e,i,s){this.coloruni.set(t,e,i,s)}},...Z,...J,...K,...Z};window.CGL=vt;const yt=function(t){H.apply(this),this.id=CABLES.simpleId(),this.portIn=null,this.portOut=null,this.scene=t,this.activityCounter=0,this.ignoreInSerialize=!1};yt.prototype.setValue=function(t){void 0===t?this._setValue():this.portIn.set(t)},yt.prototype.activity=function(){this.activityCounter++},yt.prototype._setValue=function(){if(!this.portOut)return void this.remove();const t=this.portOut.get();t==t&&(this.portIn.type!=o.OP_PORT_TYPE_FUNCTION&&this.activity(),this.portIn.get()!==t?this.portIn.set(t):(this.portIn.changeAlways&&this.portIn.set(t),this.portOut.forceRefChange&&this.portIn.forceChange()))},yt.prototype.getOtherPort=function(t){return t==this.portIn?this.portOut:this.portIn},yt.prototype.remove=function(){this.portIn&&this.portIn.removeLink(this),this.portOut&&this.portOut.removeLink(this),this.scene&&this.scene.emitEvent("onUnLink",this.portIn,this.portOut,this),!this.portIn||this.portIn.type!=o.OP_PORT_TYPE_OBJECT&&this.portIn.type!=o.OP_PORT_TYPE_ARRAY||(this.portIn.set(null),this.portIn.links.length>0&&this.portIn.set(this.portIn.links[0].getOtherPort(this.portIn).get())),this.portIn&&this.portIn.op._checkLinksNeededToWork(),this.portOut&&this.portOut.op._checkLinksNeededToWork(),this.portIn=null,this.portOut=null,this.scene=null},yt.prototype.link=function(t,e){if(!yt.canLink(t,e))return console.warn("[core_link] cannot link ports!",t,e),!1;t.direction==a.PORT_DIR_IN?(this.portIn=t,this.portOut=e):(this.portIn=e,this.portOut=t),t.addLink(this),e.addLink(this),this.setValue(),t.onLink&&t.onLink(this),e.onLink&&e.onLink(this),t.op._checkLinksNeededToWork(),e.op._checkLinksNeededToWork()},yt.prototype.getSerialized=function(){const t={};return t.portIn=this.portIn.getName(),t.portOut=this.portOut.getName(),t.objIn=this.portIn.op.id,t.objOut=this.portOut.op.id,t},yt.canLinkText=function(t,e){if(t.direction==e.direction){let t="(out)";return e.direction==a.PORT_DIR_IN&&(t="(in)"),"can not link: same direction "+t}return t.op==e.op?"can not link: same op":t.type!=o.OP_PORT_TYPE_DYNAMIC&&e.type!=o.OP_PORT_TYPE_DYNAMIC&&t.type!=e.type?"can not link: different type":CABLES.UI&&t.type==o.OP_PORT_TYPE_OBJECT&&e.type==o.OP_PORT_TYPE_OBJECT&&t.uiAttribs.objType&&e.uiAttribs.objType&&t.uiAttribs.objType!=e.uiAttribs.objType?"incompatible objects":t?e?t.direction==a.PORT_DIR_IN&&t.isAnimated()||e.direction==a.PORT_DIR_IN&&e.isAnimated()?"can not link: is animated":t.isLinkedTo(e)?"ports already linked":t.canLink&&!t.canLink(e)||e.canLink&&!e.canLink(t)?"Incompatible":"can link":"can not link: port 2 invalid":"can not link: port 1 invalid"},yt.canLink=function(t,e){if(!t)return!1;if(!e)return!1;if(t.direction==a.PORT_DIR_IN&&t.isAnimated())return!1;if(e.direction==a.PORT_DIR_IN&&e.isAnimated())return!1;if(t.isHidden()||e.isHidden())return!1;if(t.isLinkedTo(e))return!1;if(t.direction==e.direction)return!1;if(CABLES.UI&&t.type==o.OP_PORT_TYPE_OBJECT&&e.type==o.OP_PORT_TYPE_OBJECT&&t.uiAttribs.objType&&e.uiAttribs.objType){if(0==t.uiAttribs.objType.indexOf("sg_")&&0==e.uiAttribs.objType.indexOf("sg_"))return!0;if(t.uiAttribs.objType!=e.uiAttribs.objType)return!1}return!(t.type!=e.type&&t.type!=o.OP_PORT_TYPE_DYNAMIC&&e.type!=o.OP_PORT_TYPE_DYNAMIC||t.type!=o.OP_PORT_TYPE_DYNAMIC&&e.type!=o.OP_PORT_TYPE_DYNAMIC&&(t.op==e.op||t.canLink&&!t.canLink(e)||e.canLink&&!e.canLink(t)))};class It extends j{constructor(t,e,i,s,r){super(t,e,i,s),this.get=()=>{let t=super.get();return CABLES.UI&&(""===t||null==t||s.values&&-1===s.values.indexOf(String(t))?this.op.setUiError("invalidswitch","Invalid Value ["+this.name+']: "'+t+'"'):this.op.setUiError("invalidswitch",null)),null==t&&(t=""),t},this.indexPort=r,this.indexPort.set=t=>{const e=s.values;if(!e)return;let i=Math.floor(t);i=Math.min(i,e.length-1),i=Math.max(i,0),this.indexPort.setValue(i),this.set(e[i]),this.op.patch.isEditorMode()&&window.gui&&gui.patchView.isCurrentOp(this.op)&&gui.opParams.show(this.op)}}setUiAttribs(t){const e=t.hidePort;t.hidePort=!0,super.setUiAttribs(t),void 0!==e&&this.indexPort.setUiAttribs({hidePort:e})}}class Rt extends It{setUiAttribs(t){if(this.indexPort.isLinked())for(const e in t)"greyout"!=e||t[e]||(t[e]="true");super.setUiAttribs(t)}}const St=function(){H.apply(this),this._log=new r("core_op"),this.data={},this.storage={},this._objName="",this.portsOut=[],this.portsIn=[],this.portsInData=[],this.opId="",this.uiAttribs={},this.enabled=!0,this.patch=arguments[0],this.name=arguments[1],this._linkTimeRules={needsLinkedToWork:[],needsParentOp:null},this.shouldWork={},this.hasUiErrors=!1,this._uiErrors={},this._hasAnimPort=!1,arguments[1]&&(this._shortOpName=CABLES.getShortOpName(arguments[1]),this.getTitle()),this.id=arguments[2]||f(),this.onAddPort=null,this.onCreate=null,this.onResize=null,this.onLoaded=null,this.onDelete=null,this.onUiAttrChange=null,this.onError=null,this._instances=null,this.preRender=null,this.init=null,Object.defineProperty(this,"objName",{get(){return this._objName}}),Object.defineProperty(this,"shortName",{get(){return this._shortOpName}})};{St.prototype.clearUiAttrib=function(t){this.uiAttrib({name:null})},St.prototype.getTitle=function(){return this.uiAttribs?(void 0!==this.uiAttribs.title&&""!==this.uiAttribs.title||-1!=this.objName.indexOf("Ops.Ui.")||(this.uiAttribs.title=this._shortOpName),void 0===this.uiAttribs.title&&(this.uiAttribs.title=this._shortOpName),this.uiAttribs.title):"nouiattribs"+this.name},St.prototype.setTitle=function(t){const e=this.name!=t;this.name=t,this.uiAttribs.title!=t&&this.uiAttr({title:t}),e&&this.emitEvent("onTitleChange",t)},St.prototype.setStorage=function(t){if(!t)return;this.storage=this.storage||{};let e=!1;for(const i in t)this.storage[i]!=t[i]&&(e=!0),this.storage[i]=t[i];e&&this.emitEvent("onStorageChange",t)},St.prototype.isSubPatchOp=function(){if(this.storage)return this.storage.subPatchVer||0};const t=function(t){if(!t)return;(t.error||t.warning||t.hint)&&this._log.warn("old ui error/warning attribute in "+this.name+", use op.setUiError !",t),"object"!=typeof t&&this._log.error("op.uiAttrib attribs are not of type object"),this.uiAttribs||(this.uiAttribs={});let e=!1;!CABLES.UI||!t.hasOwnProperty("translate")||this.uiAttribs.translate&&this.uiAttribs.translate.x==t.translate.x&&this.uiAttribs.translate.y==t.translate.y||(e=!0);let i=!1;for(const e in t)this.uiAttribs[e]!=t[e]&&(i=!0),this.uiAttribs[e]=t[e];this.uiAttribs.hasOwnProperty("selected")&&0==this.uiAttribs.selected&&delete this.uiAttribs.selected,t.title&&t.title!=this.name&&this.setTitle(t.title),i&&(this.emitEvent("onUiAttribsChange",t),this.patch.emitEvent("onUiAttribsChange",this,t)),e&&this.emitEvent("move")};St.prototype.setUiAttribs=St.prototype.setUiAttrib=St.prototype.uiAttr=t,St.prototype.getName=function(){return this.uiAttribs.name?this.uiAttribs.name:this.name},St.prototype.addOutPort=function(t){return t.direction=a.PORT_DIR_OUT,t._op=this,this.portsOut.push(t),this.emitEvent("onPortAdd",t),t},St.prototype.hasDynamicPort=function(){let t=0;for(t=0;t<this.portsIn.length;t++){if(this.portsIn[t].type==o.OP_PORT_TYPE_DYNAMIC)return!0;if("dyn"==this.portsIn[t].getName())return!0}for(t=0;t<this.portsOut.length;t++){if(this.portsOut[t].type==o.OP_PORT_TYPE_DYNAMIC)return!0;if("dyn"==this.portsOut[t].getName())return!0}return!1},St.prototype.addInPort=function(t){if(!(t instanceof j))throw new Error("parameter is not a port!");return t.direction=a.PORT_DIR_IN,t._op=this,this.portsIn.push(t),this.emitEvent("onPortAdd",t),t},St.prototype.inFunction=St.prototype.inTrigger=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_FUNCTION));return void 0!==e&&i.set(e),i},St.prototype.inFunctionButton=St.prototype.inTriggerButton=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_FUNCTION,{display:"button"}));return void 0!==e&&i.set(e),i},St.prototype.inFunctionButton=St.prototype.inUiTriggerButtons=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_FUNCTION,{display:"buttons"}));return void 0!==e&&i.set(e),i},St.prototype.inValueFloat=St.prototype.inValue=St.prototype.inFloat=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE));return void 0!==e&&(i.set(e),i.defaultValue=e),i},St.prototype.inValueBool=St.prototype.inBool=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{display:"bool"}));return void 0!==e&&(i.set(e),i.defaultValue=i.get()),i},St.prototype.inValueString=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{type:"string"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},St.prototype.inString=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_STRING,{type:"string"}));return e=e||"",i.value=e,i.set(e),i.defaultValue=e,i},St.prototype.inValueText=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{type:"string",display:"text"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},St.prototype.inTextarea=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_STRING,{type:"string",display:"text"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},St.prototype.inStringEditor=function(t,e,i,s=!0){const r=this.addInPort(new j(this,t,o.OP_PORT_TYPE_STRING,{type:"string",display:"editor",editShortcut:!0,editorSyntax:i,hideFormatButton:s}));return r.value="",void 0!==e&&(r.set(e),r.defaultValue=e),r},St.prototype.inValueEditor=function(t,e,i,s=!0){const r=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{type:"string",display:"editor",editorSyntax:i,hideFormatButton:s}));return r.value="",void 0!==e&&(r.set(e),r.defaultValue=e),r},St.prototype.inValueSelect=St.prototype.inDropDown=function(t,e,i,s){let r=null;if(s){const i=new j(this,t,o.OP_PORT_TYPE_VALUE,{display:"dropdown",hidePort:!0,type:"string",values:e});r=this.addInPort(i)}else{const s=new j(this,t+" index",o.OP_PORT_TYPE_VALUE,{increment:"integer",hideParam:!0}),n=this.addInPort(s);if(e)for(let t=0;t<e.length;t++)e[t]=String(e[t]);const a=new Rt(this,t,o.OP_PORT_TYPE_VALUE,{display:"dropdown",hidePort:!0,type:"string",values:e},n);if(a.indexPort=s,s.onLinkChanged=function(){a.setUiAttribs({greyout:s.isLinked()})},r=this.addInPort(a),void 0!==i){r.set(i);const t=e.findIndex((t=>t==i));n.setValue(t),r.defaultValue=i,n.defaultValue=t}}return r},St.prototype.inSwitch=function(t,e,i,s){let r=null;if(s){const i=new j(this,t,o.OP_PORT_TYPE_STRING,{display:"switch",hidePort:!0,type:"string",values:e});r=this.addInPort(i)}else{i||(i=e[0]);const s=new j(this,t+" index",o.OP_PORT_TYPE_VALUE,{increment:"integer",hideParam:!0}),n=this.addInPort(s);if(e)for(let t=0;t<e.length;t++)e[t]=String(e[t]);const a=new It(this,t,o.OP_PORT_TYPE_STRING,{display:"switch",hidePort:!0,type:"string",values:e},n);if(s.onLinkChanged=function(){a.setUiAttribs({greyout:s.isLinked()})},r=this.addInPort(a),void 0!==i){r.set(i);const t=e.findIndex((t=>t==i));n.setValue(t),r.defaultValue=i,n.defaultValue=t}}return r},St.prototype.inValueInt=St.prototype.inInt=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{increment:"integer"}));return void 0!==e&&(i.set(e),i.defaultValue=e),i},St.prototype.inFile=function(t,e,i){const s=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{display:"file",type:"string",filter:e}));return void 0!==i&&(s.set(i),s.defaultValue=i),s},St.prototype.inUrl=function(t,e,i){const s=this.addInPort(new j(this,t,o.OP_PORT_TYPE_STRING,{display:"file",type:"string",filter:e}));return void 0!==i&&(s.set(i),s.defaultValue=i),s},St.prototype.inTexture=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_OBJECT,{display:"texture",objType:"texture",preview:!0}));return i.ignoreValueSerialize=!0,void 0!==e&&i.set(e),i},St.prototype.inObject=function(t,e,i){const s=this.addInPort(new j(this,t,o.OP_PORT_TYPE_OBJECT,{objType:i}));return s.ignoreValueSerialize=!0,void 0!==e&&s.set(e),s},St.prototype.inGradient=function(t,e){const i=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{display:"gradient",hidePort:!0}));return void 0!==e&&i.set(e),i},St.prototype.inArray=function(t,e,i){!i&&CABLES.UTILS.isNumeric(e)&&(i=e);const s=this.addInPort(new j(this,t,o.OP_PORT_TYPE_ARRAY,{stride:i}));return void 0===e||!Array.isArray(e)&&null!=e||s.set(e),s},St.prototype.inValueSlider=St.prototype.inFloatSlider=function(t,e,i,s){const r={display:"range"};null!=i&&null!=s&&(r.min=i,r.max=s);const n=this.addInPort(new j(this,t,o.OP_PORT_TYPE_VALUE,r));return void 0!==e&&(n.set(e),n.defaultValue=e),n},St.prototype.outFunction=St.prototype.outTrigger=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_FUNCTION));return void 0!==e&&i.set(e),i},St.prototype.outValue=St.prototype.outNumber=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_VALUE));return void 0!==e&&i.set(e),i},St.prototype.outValueBool=St.prototype.outBool=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{display:"bool"}));return void 0!==e?i.set(e):i.set(0),i},St.prototype.outBoolNum=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{display:"boolnum"}));return i.set=function(t){this.setValue(t?1:0)}.bind(i),void 0!==e?i.set(e):i.set(0),i},St.prototype.outValueString=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_VALUE,{type:"string"}));return void 0!==e&&i.set(e),i},St.prototype.outString=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_STRING,{type:"string"}));return void 0!==e?i.set(e):i.set(""),i},St.prototype.outObject=function(t,e,i){const s=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_OBJECT,{objType:i||null}));return s.set(e||null),s.ignoreValueSerialize=!0,s},St.prototype.outArray=function(t,e,i){!i&&CABLES.UTILS.isNumeric(e)&&(i=e);const s=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_ARRAY,{stride:i}));return void 0===e||!Array.isArray(e)&&null!=e||s.set(e),s.ignoreValueSerialize=!0,s},St.prototype.outTexture=function(t,e){const i=this.addOutPort(new j(this,t,o.OP_PORT_TYPE_OBJECT,{preview:!0,objType:"texture"}));return void 0!==e&&i.set(e||CGL.Texture.getEmptyTexture(this.patch.cgl)),i.ignoreValueSerialize=!0,i},St.prototype.inDynamic=function(t,e,i,s){const r=new j(this,t,o.OP_PORT_TYPE_DYNAMIC,i);return r.shouldLink=function(t,i){if(e&&l.isArray(e)){for(let s=0;s<e.length;s++){if(t==this&&i.type===e[s])return!0;if(i==this&&t.type===e[s])return!0}return!1}return!0},this.addInPort(r),void 0!==s&&(r.set(s),r.defaultValue=s),r},St.prototype.removeLinks=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].removeLinks();for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].removeLinks()},St.prototype.getSerialized=function(){const t={};this.opId&&(t.opId=this.opId),this.patch.storeObjNames&&(t.objName=this.objName),this.enabled||(t.disabled=!0),t.id=this.id,t.uiAttribs=JSON.parse(JSON.stringify(this.uiAttribs))||{},this.storage&&Object.keys(this.storage).length>0&&(t.storage=JSON.parse(JSON.stringify(this.storage))),this.uiAttribs.hasOwnProperty("working")&&1==this.uiAttribs.working&&delete this.uiAttribs.working,t.uiAttribs.hasOwnProperty("uierrors")&&delete t.uiAttribs.uierrors,t.portsIn=[],t.portsOut=[];for(let e=0;e<this.portsIn.length;e++){const i=this.portsIn[e].getSerialized();i&&t.portsIn.push(i)}for(const e in this.portsOut){const i=this.portsOut[e].getSerialized();i&&t.portsOut.push(i)}return 0==t.portsIn.length&&delete t.portsIn,0==t.portsOut.length&&delete t.portsOut,E(t),t},St.prototype.getFirstOutPortByType=function(t){for(const e in this.portsOut)if(this.portsOut[e].type==t)return this.portsOut[e]},St.prototype.getFirstInPortByType=function(t){for(const e in this.portsIn)if(this.portsIn[e].type==t)return this.portsIn[e]},St.prototype.getPort=St.prototype.getPortByName=function(t,e){if(e){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].getName().toLowerCase()==t||this.portsIn[e].id.toLowerCase()==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].getName().toLowerCase()==t||this.portsOut[e].id.toLowerCase()==t)return this.portsOut[e]}else{for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].getName()==t||this.portsIn[e].id==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].getName()==t||this.portsOut[e].id==t)return this.portsOut[e]}},St.prototype.getPortById=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].id==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].id==t)return this.portsOut[e]},St.prototype.updateAnims=function(){if(this._hasAnimPort)for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].updateAnim()},St.prototype.log=function(){const t="op "+this.objName;if(CABLES.UI&&!CABLES.UI.logFilter.shouldPrint(t,...arguments))return;if(!CABLES.UI&&this.patch.silent)return;const e=["[op "+CABLES.getShortOpName(this.objName)+"]"];e.push.apply(e,arguments),Function.prototype.apply.apply(console.log,[console,e])},St.prototype.error=St.prototype.logError=function(){if(!this)return void console.log("no this...!!!");const t=["[op "+CABLES.getShortOpName(this.objName)+"]"];t.push.apply(t,arguments),Function.prototype.apply.apply(console.error,[console,t]),window.gui&&window.gui.emitEvent("opLogEvent",this.objName,"error",arguments)},St.prototype.warn=St.prototype.logWarn=function(){const t=["[op "+CABLES.getShortOpName(this.objName)+"]"];t.push.apply(t,arguments),Function.prototype.apply.apply(console.warn,[console,t])},St.prototype.verbose=St.prototype.logVerbose=function(){const t="op "+CABLES.getShortOpName(this.objName);if(CABLES.UI&&!CABLES.UI.logFilter.shouldPrint(t,...arguments))return;if(!CABLES.UI&&this.patch.silent)return;const e=["["+t+"]"];e.push.apply(e,arguments),Function.prototype.apply.apply(console.info,[console,e])},St.prototype.profile=function(t){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t]._onTriggered=this.portsIn[t]._onTriggeredProfiling,this.portsIn[t].set=this.portsIn[t]._onSetProfiling},St.prototype.findParent=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].isLinked()){if(this.portsIn[e].links[0].portOut.parent.objName==t)return this.portsIn[e].links[0].portOut.parent;let i=null;if(i=this.portsIn[e].links[0].portOut.parent.findParent(t),i)return i}return null},St.prototype.cleanUp=function(){if(this._instances){for(let t=0;t<this._instances.length;t++)this._instances[t].onDelete&&this._instances[t].onDelete();this._instances.length=0}for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].setAnimated(!1);this.onAnimFrame&&this.patch.removeOnAnimFrame(this)},St.prototype.instanced=function(t){if(console.log("instanced",this.patch.instancing.numCycles()),0===this.patch.instancing.numCycles())return!1;let e=0,i=0;if(!this._instances||this._instances.length!=this.patch.instancing.numCycles()){for(this._instances||(this._instances=[]),this._.log("creating instances of ",this.objName,this.patch.instancing.numCycles(),this._instances.length),this._instances.length=this.patch.instancing.numCycles(),e=0;e<this._instances.length;e++){this._instances[e]=this.patch.createOp(this.objName,!0),this._instances[e].instanced=function(){return!1},this._instances[e].uiAttr(this.uiAttribs);for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].type==o.OP_PORT_TYPE_FUNCTION&&(this._instances[e].getPortByName(this.portsOut[t].name).trigger=this.portsOut[t].trigger.bind(this.portsOut[t]))}for(i=0;i<this.portsIn.length;i++)this.portsIn[i].onChange=null,this.portsIn[i].onValueChanged=null}for(i=0;i<this.portsIn.length;i++)this.portsIn[i].type!=o.OP_PORT_TYPE_VALUE&&this.portsIn[i].type!=o.OP_PORT_TYPE_ARRAY||this._instances[this.patch.instancing.index()].portsIn[i].set(this.portsIn[i].get()),this.portsIn[i].type;for(i=0;i<this.portsOut.length;i++)this.portsOut[i].type==o.OP_PORT_TYPE_VALUE&&this.portsOut[i].set(this._instances[this.patch.instancing.index()].portsOut[i].get());return!0},St.prototype.initInstancable=function(){},St.prototype.setValues=function(t){for(const e in t){const i=this.getPortByName(e);i?i.set(t[e]):this._log.warn("op.setValues: port not found:",e)}},St.prototype.hasUiError=function(t){return this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t]},St.prototype.setUiError=function(t,e,i){if(!e&&!this.hasUiErrors)return;if(!e&&!this._uiErrors.hasOwnProperty(t))return;if(this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t].txt==e)return;t.indexOf(" ")>-1&&this._log.warn("setuierror id cant have spaces! ",t),t=t.replaceAll(" ","_"),!e&&this._uiErrors.hasOwnProperty(t)?delete this._uiErrors[t]:!e||this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t].txt==e||(null==i&&(i=2),this._uiErrors[t]={txt:e,level:i,id:t});const s=[];for(const t in this._uiErrors)s.push(this._uiErrors[t]);this.uiAttr({uierrors:s}),this.hasUiErrors=Object.keys(this._uiErrors).length,this.emitEvent("uiErrorChange")},St.prototype.setError=function(t,e){this._log.warn("old error message op.error() - use op.setUiError()")},St.prototype.setEnabled=function(t){this.enabled=t,this.emitEvent("onEnabledChange",t),this.enabled?this.setUiError("_disabled",null):this.setUiError("_disabled","Op is disabled",0)},St.prototype.setPortGroup=function(t,e){for(let i=0;i<e.length;i++)e[i]&&(e[i].setUiAttribs?e[i].setUiAttribs({group:t}):this._log.error("setPortGroup: invalid port!"))},St.prototype.setUiAxisPorts=function(t,e,i){t&&t.setUiAttribs({axis:"X"}),e&&e.setUiAttribs({axis:"Y"}),i&&i.setUiAttribs({axis:"Z"})},St.prototype.removePort=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e]==t)return this.portsIn.splice(e,1),this.emitEvent("onUiAttribsChange",{}),void this.emitEvent("onPortRemoved",{})},St.prototype._checkLinksNeededToWork=function(){},St.prototype.toWorkNeedsParent=function(t){this.patch.isEditorMode()&&(this._linkTimeRules.needsParentOp=t)},St.prototype.toWorkShouldNotBeChild=function(t,e){this.patch.isEditorMode()&&(this._linkTimeRules.forbiddenParent=t,null!=e&&(this._linkTimeRules.forbiddenParentType=e))},St.prototype.toWorkPortsNeedToBeLinked=function(){if(this.patch.isEditorMode())for(let t=0;t<arguments.length;t++)-1==this._linkTimeRules.needsLinkedToWork.indexOf(arguments[t])&&this._linkTimeRules.needsLinkedToWork.push(arguments[t])},St.prototype.toWorkPortsNeedToBeLinkedReset=function(){this.patch.isEditorMode()&&(this._linkTimeRules.needsLinkedToWork.length=0,this.checkLinkTimeWarnings&&this.checkLinkTimeWarnings())},St.prototype.initVarPorts=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].getVariableName()&&this.portsIn[t].setVariable(this.portsIn[t].getVariableName())},St.prototype.refreshParams=function(){this.patch&&this.patch.isEditorMode()&&this.isCurrentUiOp()&&gui.opParams.show(this)},St.prototype.isCurrentUiOp=function(){if(this.patch.isEditorMode())return gui.patchView.isCurrentOp(this)},St.prototype.renderVizLayer=null}const Pt=function(t){CABLES.EventTarget.apply(this),this._log=new r("LoadingStatus"),this._loadingAssets={},this._cbFinished=[],this._assetTasks=[],this._percent=0,this._count=0,this._countFinished=0,this._order=0,this._startTime=0,this._patch=t,this._wasFinishedPrinted=!1,this._loadingAssetTaskCb=!1};Pt.prototype.setOnFinishedLoading=function(t){this._cbFinished.push(t)},Pt.prototype.getNumAssets=function(){return this._countFinished},Pt.prototype.getProgress=function(){return this._percent},Pt.prototype.checkStatus=function(){this._countFinished=0,this._count=0;for(const t in this._loadingAssets)this._count++,this._loadingAssets[t].finished||this._countFinished++;if(this._percent=(this._count-this._countFinished)/this._count,0===this._countFinished){for(let t=0;t<this._cbFinished.length;t++)if(this._cbFinished[t]){const e=this._cbFinished[t];setTimeout((()=>{e(this._patch),this.emitEvent("finishedAll")}),100)}this._wasFinishedPrinted||(this._wasFinishedPrinted=!0,this.print()),this.emitEvent("finishedAll")}},Pt.prototype.getList=function(){let t=[];for(const e in this._loadingAssets)t.push(this._loadingAssets[e]);return t},Pt.prototype.getListJobs=function(){let t=[];for(const e in this._loadingAssets)this._loadingAssets[e].finished||t.push(this._loadingAssets[e].name);return t},Pt.prototype.print=function(){if(this._patch.config.silent)return;const t=[];for(const e in this._loadingAssets)t.push([this._loadingAssets[e].order,this._loadingAssets[e].type,this._loadingAssets[e].name,(this._loadingAssets[e].timeEnd-this._loadingAssets[e].timeStart)/1e3+"s"]);this._log.groupCollapsed("finished loading "+this._order+" assets in "+(Date.now()-this._startTime)/1e3+"s"),this._log.table(t),this._log.groupEnd()},Pt.prototype.finished=function(t){const e=this._loadingAssets[t];e&&(e.finished&&this._log.warn("loading job was already finished",e),e.op&&e.op.setUiAttribs({loading:!1}),e.finished=!0,e.timeEnd=Date.now()),this.checkStatus(),this.emitEvent("finishedTask")},Pt.prototype._startAssetTasks=function(){for(let t=0;t<this._assetTasks.length;t++)this._assetTasks[t]();this._assetTasks.length=0},Pt.prototype.addAssetLoadingTask=function(t){this._patch.isEditorMode()&&!CABLES.UI.loaded?(this._assetTasks.push(t),this._loadingAssetTaskCb||window.gui.addEventListener("uiloaded",this._startAssetTasks.bind(this)),this._loadingAssetTaskCb=!0):t(),this.emitEvent("addAssetTask")},Pt.prototype.existByName=function(t){for(let e in this._loadingAssets)if(this._loadingAssets[e].name==t&&!this._loadingAssets[e].finished)return!0},Pt.prototype.start=function(t,e,i){0==this._startTime&&(this._startTime=Date.now());const s=m();return i&&i.setUiAttribs({loading:!0}),this._loadingAssets[s]={id:s,op:i,type:t,name:e,finished:!1,timeStart:Date.now(),order:this._order},this._order++,this.emitEvent("startTask"),s};const Ft=function(){this._loops=[],this._indizes=[],this._index=0};Ft.prototype.pushLoop=function(t){this._loops.push(Math.abs(Math.floor(t))),this._indizes.push(this._index)},Ft.prototype.popLoop=function(){this._loops.pop(),this._index=this._indizes.pop(),0===this._loops.length&&(this._index=0)},Ft.prototype.numLoops=function(){return this._loops.length},Ft.prototype.numCycles=function(){if(0===this._loops.length)return 0;let t=this._loops[0];for(let e=1;e<this._loops.length;e++)t*=this._loops[e];return t},Ft.prototype.inLoop=function(){return this._loops.length>0},Ft.prototype.increment=function(){this._index++},Ft.prototype.index=function(){return this._index};class Ot{constructor(t){this.startFrame=t.getFrameNum(),this.items={},this.currentId=null,this.currentStart=0,this._patch=t}getItems(){return this.items}clear(){this.paused||(this.items={})}togglePause(){this.paused=!this.paused,this.paused||(this.items={},this.currentStart=performance.now())}add(t,e){this.paused||(null!==this.currentId&&(e&&e.id==this.currentId||this.items[this.currentId]&&(this.items[this.currentId].timeUsed+=performance.now()-this.currentStart,(!this.items[this.currentId].peakTime||nt()-this.items[this.currentId].peakTime>5e3)&&(this.items[this.currentId].peak=0,this.items[this.currentId].peakTime=nt()),this.items[this.currentId].peak=Math.max(this.items[this.currentId].peak,performance.now()-this.currentStart))),null!==e?(this.items[e.id]||(this.items[e.id]={numTriggers:0,timeUsed:0}),this.items[e.id].lastFrame!=this._patch.getFrameNum()&&(this.items[e.id].numTriggers=0),this.items[e.id].lastFrame=this._patch.getFrameNum(),this.items[e.id].numTriggers++,this.items[e.id].opid=e.op.id,this.items[e.id].title=e.op.name+"."+e.name,this.items[e.id].subPatch=e.op.uiAttribs.subPatch,this.currentId=e.id,this.currentStart=performance.now()):this.currentId=null)}print(){console.log("--------");for(const t in this.items)console.log(this.items[t].title+": "+this.items[t].numTriggers+" / "+this.items[t].timeUsed)}}const Nt=class extends H{constructor(t,e,i){super(),this._name=t,this.type=i,this.setValue(e)}addListener(t){this.on("change",t,"var")}getValue(){return this._v}getName(){return this._name}setValue(t){this._v=t,this.emitEvent("change",t,this)}},Ct=function(t){H.apply(this),this._log=new r("core_patch"),this.ops=[],this.settings={},this.config=t||{glCanvasResizeToWindow:!1,prefixAssetPath:"",prefixJsPath:"",silent:!0,onError:null,onFinishedLoading:null,onFirstFrameRendered:null,onPatchLoaded:null,fpsLimit:0},this.timer=new ot,this.freeTimer=new ot,this.animFrameOps=[],this.animFrameCallbacks=[],this.gui=!1,CABLES.logSilent=this.silent=!0,this.profiler=null,this.aborted=!1,this._crashedOps=[],this._renderOneFrame=!1,this._animReq=null,this._opIdCache={},this._triggerStack=[],this.storeObjNames=!1,this.loading=new Pt(this),this._volumeListeners=[],this._paused=!1,this._frameNum=0,this.instancing=new Ft,this.onOneFrameRendered=null,this.namedTriggers={},this._origData=null,this._frameNext=0,this._frameInterval=0,this._lastFrameTime=0,this._frameWasdelayed=!0,this.frameStore={},this.deSerialized=!1,this._lastReqAnimTimeStamp=0,this.cgCanvas=null,function(){return!this}()||console.log("not in strict mode: core patch"),this._isLocal=0===document.location.href.indexOf("file:"),this.config.hasOwnProperty("silent")&&(this.silent=CABLES.logSilent=this.config.silent),this.config.hasOwnProperty("doRequestAnimation")||(this.config.doRequestAnimation=!0),this.config.prefixAssetPath||(this.config.prefixAssetPath=""),this.config.prefixJsPath||(this.config.prefixJsPath=""),this.config.masterVolume||(this.config.masterVolume=1),this._variables={},this._variableListeners=[],this.vars={},t&&t.vars&&(this.vars=t.vars),this.cgl=new xt(this),this.cgp=null,this._subpatchOpCache={},this.cgl.setCanvas(this.config.glCanvasId||this.config.glCanvas||"glcanvas"),!0===this.config.glCanvasResizeToWindow&&this.cgl.setAutoResize("window"),!0===this.config.glCanvasResizeToParent&&this.cgl.setAutoResize("parent"),this.loading.setOnFinishedLoading(this.config.onFinishedLoading),this.cgl.aborted&&(this.aborted=!0),this.cgl.silent&&(this.silent=!0),this.freeTimer.play(),this.exec(),this.aborted||(this.config.patch?this.deSerialize(this.config.patch):this.config.patchFile&&O(this.config.patchFile,((t,e)=>{const i=JSON.parse(e);if(t)return this._log.error("err",t),this._log.error("data",i),void this._log.error("data",i.msg);this.deSerialize(i)})),this.timer.play()),console.log("made with https://cables.gl")};Ct.prototype.isPlaying=function(){return!this._paused},Ct.prototype.isRenderingOneFrame=function(){return this._renderOneFrame},Ct.prototype.renderOneFrame=function(){this._paused=!0,this._renderOneFrame=!0,this.exec(),this._renderOneFrame=!1},Ct.prototype.getFPS=function(){return console.log("deprecated getfps"),0},Ct.prototype.isEditorMode=function(){return!0===this.config.editorMode},Ct.prototype.pause=function(){cancelAnimationFrame(this._animReq),this.emitEvent("pause"),this._animReq=null,this._paused=!0,this.freeTimer.pause()},Ct.prototype.resume=function(){this._paused&&(cancelAnimationFrame(this._animReq),this._paused=!1,this.freeTimer.play(),this.emitEvent("resume"),this.exec())},Ct.prototype.setVolume=function(t){this.config.masterVolume=t;for(let e=0;e<this._volumeListeners.length;e++)this._volumeListeners[e].onMasterVolumeChanged(t)},Ct.prototype.getAssetPath=function(t=null){if(this.isEditorMode())return"/assets/"+(t||gui.project()._id)+"/";if(document.location.href.indexOf("cables.gl")>0||document.location.href.indexOf("cables.local")>0){const e=document.location.pathname.split("/");return"/assets/"+(t||e[e.length-1])+"/"}return this.config.hasOwnProperty("assetPath")?this.config.assetPath:"assets/"},Ct.prototype.getJsPath=function(){return this.config.hasOwnProperty("jsPath")?this.config.jsPath:"js/"},Ct.prototype.getFilePath=function(t){return t?0===(t=String(t)).indexOf("https:")||0===t.indexOf("http:")||0===t.indexOf("data:")||0===t.indexOf("file:")?t:(t=t.replace("//","/"),this.config.prefixAssetPath+t+(this.config.suffixAssetPath||"")):t},Ct.prototype.clear=function(){for(this.emitEvent("patchClearStart"),this.cgl.TextureEffectMesh=null,this.animFrameOps.length=0,this.timer=new ot;this.ops.length>0;)this.deleteOp(this.ops[0].id);this.emitEvent("patchClearEnd")},Ct.getOpClass=function(t){const e=t.split(".");let i=null;try{return 2==e.length?i=window[e[0]][e[1]]:3==e.length?i=window[e[0]][e[1]][e[2]]:4==e.length?i=window[e[0]][e[1]][e[2]][e[3]]:5==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]]:6==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]]:7==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]]:8==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]]:9==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]][e[8]]:10==e.length&&(i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]][e[8]][e[9]]),i}catch(t){return null}},Ct.prototype.createOp=function(t,e,i=null){let s=null,r="";try{if(-1===t.indexOf("Ops.")){const n=t;if(CABLES.OPS[n])r=CABLES.OPS[n].objName,s=new CABLES.OPS[n].f(this,r,e,n),s.opId=n;else{if(!i)throw new Error("could not find op by id: "+n);t=i,console.log("could not find op by id: "+n)}}if(!s){r=t;const i=t.split(".");if(!Ct.getOpClass(r))throw this.emitEvent("criticalError",{title:"unknown op",text:"unknown op: "+r}),this._log.error("unknown op: "+r),new Error("unknown op: "+r);if(2==i.length?s=new window[i[0]][i[1]](this,r,e):3==i.length?s=new window[i[0]][i[1]][i[2]](this,r,e):4==i.length?s=new window[i[0]][i[1]][i[2]][i[3]](this,r,e):5==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]](this,r,e):6==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]](this,r,e):7==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]](this,r,e):8==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]](this,r,e):9==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]][i[8]](this,r,e):10==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]][i[8]][i[9]](this,r,e):console.log("parts.length",i.length),s){s.opId=null;for(const t in CABLES.OPS)CABLES.OPS[t].objName==r&&(s.opId=t)}}}catch(t){if(this._crashedOps.push(r),this.emitEvent("exceptionOp",t,r,s),!this.isEditorMode())throw this._log.error(t),this._log.error("[instancing error] "+r,t),CABLES.api&&CABLES.api.sendErrorReport(t),this.exitError("INSTANCE_ERR","Instancing Error 1"+r,t),new Error("instancing error 1"+r)}return s?(s._objName=r,s.patch=this):this._log.log("no op was created!?",t,e),s},Ct.prototype.addOp=function(t,e,i,s,r){const n=this.createOp(t,i,r);if(n){if((e=e||{}).hasOwnProperty("errors")&&delete e.errors,e.hasOwnProperty("error")&&delete e.error,e.subPatch=e.subPatch||0,n.uiAttr(e),n.onCreate&&n.onCreate(),n.hasOwnProperty("onAnimFrame")&&this.addOnAnimFrame(n),n.hasOwnProperty("onMasterVolumeChanged")&&this._volumeListeners.push(n),this._opIdCache[n.id])return void console.log("opid with id "+n.id+" already exists in patch!");this.ops.push(n),this._opIdCache[n.id]=n,this.emitEvent("onOpAdd",n,s),this._subPatchCacheAdd&&this._subPatchCacheAdd(e.subPatch,n),n.init&&n.init(),n.emitEvent("init",s)}else this._log.error("addop: no op.....");return n},Ct.prototype.addOnAnimFrame=function(t){for(let e=0;e<this.animFrameOps.length;e++)if(this.animFrameOps[e]==t)return;this.animFrameOps.push(t)},Ct.prototype.removeOnAnimFrame=function(t){for(let e=0;e<this.animFrameOps.length;e++)if(this.animFrameOps[e]==t)return void this.animFrameOps.splice(e,1)},Ct.prototype.addOnAnimFrameCallback=function(t){this.animFrameCallbacks.push(t)},Ct.prototype.removeOnAnimCallback=function(t){for(let e=0;e<this.animFrameCallbacks.length;e++)if(this.animFrameCallbacks[e]==t)return void this.animFrameCallbacks.splice(e,1)},Ct.prototype.deleteOp=function(t,e,i){let s=!1;for(const r in this.ops)if(this.ops[r].id==t){const n=this.ops[r];let o=null,a=null;if(n){s=!0,e&&n.portsIn.length>0&&n.portsIn[0].isLinked()&&n.portsOut.length>0&&n.portsOut[0].isLinked()&&n.portsIn[0].getType()==n.portsOut[0].getType()&&n.portsIn[0].links[0]&&(o=n.portsIn[0].links[0].getOtherPort(n.portsIn[0]),a=n.portsOut[0].links[0].getOtherPort(n.portsOut[0]));const h=this.ops[r];h.removeLinks(),this.onDelete&&(console.log("deprecated this.onDelete",this.onDelete),this.onDelete(h)),this.ops.splice(r,1),h.emitEvent("delete",this.ops[r]),this.emitEvent("onOpDelete",h,i),this.clearSubPatchCache&&this.clearSubPatchCache(h.uiAttribs.subPatch),h.onDelete&&h.onDelete(i),h.cleanUp(),null!==o&&null!==a&&this.link(o.op,o.getName(),a.op,a.getName()),delete this._opIdCache[t];break}}s||console.log("core patch deleteop: not found...",t)},Ct.prototype.getFrameNum=function(){return this._frameNum},Ct.prototype.emitOnAnimFrameEvent=function(t,e){t=t||this.timer.getTime();for(let i=0;i<this.animFrameCallbacks.length;++i)this.animFrameCallbacks[i]&&this.animFrameCallbacks[i](t,this._frameNum,e);for(let i=0;i<this.animFrameOps.length;++i)this.animFrameOps[i].onAnimFrame&&this.animFrameOps[i].onAnimFrame(t,this._frameNum,e)},Ct.prototype.renderFrame=function(t){this.timer.update(),this.freeTimer.update();const e=this.timer.getTime(),i=performance.now();this.cgl.frameStartTime=this.timer.getTime();const s=t-this._lastReqAnimTimeStamp||t;this.emitOnAnimFrameEvent(null,s),this.cgl.profileData.profileFrameDelta=s,this._lastReqAnimTimeStamp=t,this.cgl.profileData.profileOnAnimFrameOps=performance.now()-i,this.emitEvent("onRenderFrame",e),this._frameNum++,1==this._frameNum&&this.config.onFirstFrameRendered&&this.config.onFirstFrameRendered()},Ct.prototype.exec=function(t){if(!this._renderOneFrame&&(this._paused||this.aborted))return;this.emitEvent("reqAnimFrame"),cancelAnimationFrame(this._animReq),this.config.fpsLimit=this.config.fpsLimit||0,this.config.fpsLimit&&(this._frameInterval=1e3/this.config.fpsLimit);const e=CABLES.now(),i=e-this._frameNext;if(this.isEditorMode()&&!this._renderOneFrame&&e-this._lastFrameTime>=500&&0!==this._lastFrameTime&&!this._frameWasdelayed)return this._lastFrameTime=0,setTimeout(this.exec.bind(this),500),this.emitEvent("renderDelayStart"),void(this._frameWasdelayed=!0);(this._renderOneFrame||0===this.config.fpsLimit||i>this._frameInterval||this._frameWasdelayed)&&(this.renderFrame(t),this._frameInterval&&(this._frameNext=e-i%this._frameInterval)),this._frameWasdelayed&&(this.emitEvent("renderDelayEnd"),this._frameWasdelayed=!1),this._renderOneFrame&&(this.onOneFrameRendered&&this.onOneFrameRendered(),this.emitEvent("renderedOneFrame"),this._renderOneFrame=!1),this.config.doRequestAnimation&&(this._animReq=this.cgl.canvas.ownerDocument.defaultView.requestAnimationFrame(this.exec.bind(this)))},Ct.prototype.link=function(t,e,i,s,r,n){if(!t)return void console.log("link: op1 is null ");if(!i)return void console.log("link: op2 is null");const o=t.getPort(e,r),a=i.getPort(s,r);if(o)if(a){if(!o.shouldLink(o,a)||!a.shouldLink(o,a))return!1;if(yt.canLink(o,a)){const t=new yt(this);return t.link(o,a),this.emitEvent("onLink",o,a,t,n),t}}else console.log("port not found! "+s+" of "+i.name+"("+i.objName+")");else console.log("port not found! "+e+"("+t.objName+")")},Ct.prototype.serialize=function(t){const e={};t=t||{},e.ops=[],e.settings=this.settings;for(const t in this.ops){const i=this.ops[t];e.ops.push(i.getSerialized())}return E(e),t.asObject?e:JSON.stringify(e)},Ct.prototype.getOpById=function(t){return this._opIdCache[t]},Ct.prototype.getOpsByName=function(t){const e=[];for(const i in this.ops)this.ops[i].name==t&&e.push(this.ops[i]);return e},Ct.prototype.getOpsByObjName=function(t){const e=[];for(const i in this.ops)this.ops[i].objName==t&&e.push(this.ops[i]);return e},Ct.prototype.loadLib=function(t){F("/ui/libs/"+t+".js",((t,e)=>{const i=document.createElement("script");i.type="text/javascript",i.text=e,document.getElementsByTagName("head")[0].appendChild(i)}),"GET")},Ct.prototype.reloadOp=function(t,e){let i=0;const s=[],r=[];for(const e in this.ops)this.ops[e].objName==t&&r.push(this.ops[e]);for(let e=0;e<r.length;e++){i++;const n=r[e];n.deleted=!0;const o=this.addOp(t,n.uiAttribs);if(!o)continue;let a;n&&n.storage&&o.setStorage(JSON.parse(JSON.stringify(n.storage))),s.push(o);for(let t in n.portsIn)if(0===n.portsIn[t].links.length){const e=o.getPort(n.portsIn[t].name);e?(e.set(n.portsIn[t].get()),n.portsIn[t].getVariableName()&&e.setVariable(n.portsIn[t].getVariableName())):this._log.error("[reloadOp] could not set port "+n.portsIn[t].name+", propably renamed port ?")}else for(;n.portsIn[t].links.length;){const e=n.portsIn[t].links[0].portIn.name,i=n.portsIn[t].links[0].portOut.name,s=n.portsIn[t].links[0].portOut.op;n.portsIn[t].links[0].remove(),a=this.link(o,e,s,i),a?a.setValue():console.log("[reloadOp] relink after op reload not successfull for port "+i)}for(let t in n.portsOut)for(;n.portsOut[t].links.length;){const e=n.portsOut[t].links[0].portOut.name,i=n.portsOut[t].links[0].portIn.name,s=n.portsOut[t].links[0].portIn.op;n.portsOut[t].links[0].remove(),a=this.link(o,e,s,i),a?a.setValue():console.log("relink after op reload not successfull for port "+i)}this.deleteOp(n.id,!1,!0)}e(i,s)},Ct.prototype.getSubPatchOp=function(t,e){for(const i in this.ops)if(this.ops[i].uiAttribs&&this.ops[i].uiAttribs.subPatch==t&&this.ops[i].objName==e)return this.ops[i];return!1},Ct.prototype.getSubPatchOuterOp=function(t){const e=this.ops;for(let i=0;i<e.length;i++){const s=e[i];if(s.isSubPatchOp()&&s.patchId.get()==t)return s}},Ct.prototype.getSubPatchOps=function(t,e=!1){let i=[];for(const e in this.ops)this.ops[e].uiAttribs&&this.ops[e].uiAttribs.subPatch==t&&i.push(this.ops[e]);if(e)for(const t in i)if(i[t].storage&&i[t].storage.subPatchVer){const e=i[t].portsIn.find((t=>"patchId"===t.name));e&&(i=i.concat(this.getSubPatchOps(e.value,!0)))}return i},Ct.prototype._addLink=function(t,e,i,s){this.link(this.getOpById(t),i,this.getOpById(e),s,!1,!0)},Ct.prototype.deSerialize=function(t,e){if(e=e||{genIds:!1,createRef:!1},this.aborted)return;const i=[],s=this.loading.start("core","deserialize");this.namespace=t.namespace||"",this.name=t.name||"","string"==typeof t&&(t=JSON.parse(t)),this.settings=t.settings,this.emitEvent("patchLoadStart"),window.logStartup&&logStartup("add "+t.ops.length+" ops... ");for(let s=0;s<t.ops.length;s++){const r=CABLES.now(),n=t.ops[s];let a=null;try{a=n.opId?this.addOp(n.opId,n.uiAttribs,n.id,!0,n.objName):this.addOp(n.objName,n.uiAttribs,n.id,!0)}catch(t){throw console.log("[instancing error] op data:",n,t),new Error("could not create op by id: <b>"+(n.objName||n.opId)+"</b> ("+n.id+")")}if(a){e.genIds&&(a.id=f()),a.portsInData=n.portsIn,a._origData=JSON.parse(JSON.stringify(n)),a.storage=n.storage,n.hasOwnProperty("disabled")&&a.setEnabled(!n.disabled);for(const t in n.portsIn){const e=n.portsIn[t];if(e&&e.hasOwnProperty("name")){const t=a.getPort(e.name);!t||"bool"!=t.uiAttribs.display&&"bool"!=t.uiAttribs.type||isNaN(e.value)||(e.value=!0===e.value),t&&void 0!==e.value&&t.type!=o.OP_PORT_TYPE_TEXTURE&&t.set(e.value),t&&t.deSerializeSettings(e)}}for(const e in n.portsOut){const i=n.portsOut[e];if(i&&i.hasOwnProperty("name")){const r=a.getPort(i.name);r&&r.type!=o.OP_PORT_TYPE_TEXTURE&&i.hasOwnProperty("value")&&r.set(t.ops[s].portsOut[e].value),r&&i.expose&&r.setUiAttribs({expose:!0})}}i.push(a)}const h=Math.round(100*(CABLES.now()-r))/100;!this.silent&&h>5&&console.log("long op init ",t.ops[s].objName,h)}window.logStartup&&logStartup("add ops done");for(const t in this.ops)this.ops[t].onLoadedValueSet&&(this.ops[t].onLoadedValueSet(this.ops[t]._origData),this.ops[t].onLoadedValueSet=null,this.ops[t]._origData=null),this.ops[t].emitEvent("loadedValueSet");if(window.logStartup&&logStartup("creating links"),t.ops)for(let e=0;e<t.ops.length;e++){if(t.ops[e].portsIn)for(let i=0;i<t.ops[e].portsIn.length;i++)if(t.ops[e].portsIn[i]&&t.ops[e].portsIn[i].links)for(let s=0;s<t.ops[e].portsIn[i].links.length;s++)this._addLink(t.ops[e].portsIn[i].links[s].objIn,t.ops[e].portsIn[i].links[s].objOut,t.ops[e].portsIn[i].links[s].portIn,t.ops[e].portsIn[i].links[s].portOut);if(t.ops[e].portsOut)for(let i=0;i<t.ops[e].portsOut.length;i++)if(t.ops[e].portsOut[i]&&t.ops[e].portsOut[i].links)for(let s=0;s<t.ops[e].portsOut[i].links.length;s++)if(t.ops[e].portsOut[i].links[s])if(t.ops[e].portsOut[i].links[s].subOpRef){const r=this.getOpById(t.ops[e].portsOut[i].links[s].objOut);let n=null,o=0;for(let n=0;n<this.ops.length;n++)if(this.ops[n].storage&&this.ops[n].storage.ref==t.ops[e].portsOut[i].links[s].subOpRef&&r.uiAttribs.subPatch==this.ops[n].uiAttribs.subPatch){o=this.ops[n].patchId.get();break}for(let r=0;r<this.ops.length;r++)if(this.ops[r].storage&&this.ops[r].storage.ref==t.ops[e].portsOut[i].links[s].refOp&&this.ops[r].uiAttribs.subPatch==o){n=this.ops[r];break}n?this._addLink(n.id,t.ops[e].portsOut[i].links[s].objOut,t.ops[e].portsOut[i].links[s].portIn,t.ops[e].portsOut[i].links[s].portOut):this._log.warn("could not find op for lost link")}else this._addLink(t.ops[e].portsOut[i].links[s].objIn,t.ops[e].portsOut[i].links[s].objOut,t.ops[e].portsOut[i].links[s].portIn,t.ops[e].portsOut[i].links[s].portOut)}window.logStartup&&logStartup("calling ops onloaded");for(const t in this.ops)this.ops[t].onLoaded&&(this.ops[t].onLoaded(),this.ops[t].onLoaded=null);window.logStartup&&logStartup("initializing ops...");for(const t in this.ops)this.ops[t].init&&(this.ops[t].init(),this.ops[t].init=null);if(window.logStartup&&logStartup("initializing vars..."),this.config.variables)for(const t in this.config.variables)this.setVarValue(t,this.config.variables[t]);window.logStartup&&logStartup("initializing var ports");for(const t in this.ops)this.ops[t].initVarPorts(),delete this.ops[t].uiAttribs.pasted;setTimeout((()=>{this.loading.finished(s)}),100),window.logStartup&&logStartup("calling onPatchLoaded/patchLoadEnd"),this.config.onPatchLoaded&&this.config.onPatchLoaded(this),this.deSerialized=!0,this.emitEvent("patchLoadEnd",i,t,e.genIds)},Ct.prototype.profile=function(t){this.profiler=new Ot(this);for(const e in this.ops)this.ops[e].profile(t)},Ct.prototype.setVariable=function(t,e){void 0!==this._variables[t]?this._variables[t].setValue(e):console.log("variable "+t+" not found!")},Ct.prototype._sortVars=function(){if(!this.isEditorMode())return;const t={};Object.keys(this._variables).sort(((t,e)=>t.localeCompare(e,"en",{sensitivity:"base"}))).forEach((e=>{t[e]=this._variables[e]})),this._variables=t},Ct.prototype.hasVar=function(t){return void 0!==this._variables[t]},Ct.prototype.setVarValue=function(t,e,i){return this.hasVar(t)?this._variables[t].setValue(e):(this._variables[t]=new Nt(t,e,i),this._sortVars(),this.emitEvent("variablesChanged")),this._variables[t]},Ct.prototype.getVarValue=function(t,e){if(this._variables.hasOwnProperty(t))return this._variables[t].getValue()},Ct.prototype.getVar=function(t){if(this._variables.hasOwnProperty(t))return this._variables[t]},Ct.prototype.deleteVar=function(t){for(let e=0;e<this.ops.length;e++)for(let i=0;i<this.ops[e].portsIn.length;i++)this.ops[e].portsIn[i].getVariableName()==t&&this.ops[e].portsIn[i].setVariable(null);delete this._variables[t],this.emitEvent("variableDeleted",t),this.emitEvent("variablesChanged")},Ct.prototype.getVars=function(t){if(void 0===t)return this._variables;const e=[];t==CABLES.OP_PORT_TYPE_STRING&&(t="string"),t==CABLES.OP_PORT_TYPE_VALUE&&(t="number"),t==CABLES.OP_PORT_TYPE_ARRAY&&(t="array"),t==CABLES.OP_PORT_TYPE_OBJECT&&(t="object");for(const i in this._variables)this._variables[i].type&&this._variables[i].type!=t||e.push(this._variables[i]);return e},Ct.prototype.exitError=function(t,e,i){if(this.aborted=!0,this&&this.config&&this.config.onError)this.config.onError(t,e);else if(!this.isEditorMode()){const s=document.createElement("div"),r=this.cgl.canvas.getBoundingClientRect();s.setAttribute("style","position:absolute;border:5px solid red;padding:15px;background-color:black;color:white;font-family:monospace;"),s.style.top=r.top+"px",s.style.left=r.left+"px";let n="cables - An error occured:<br/>";n+="["+t+"] - "+e,i&&(n+="<br/>Exception: "+i.message),s.innerHTML=n;const o=this.cgl.canvas.parentElement;for(;o.hasChildNodes();)o.removeChild(o.lastChild);document.body.appendChild(s)}},Ct.prototype.preRenderOps=function(){this._log.log("prerendering...");for(let t=0;t<this.ops.length;t++)this.ops[t].preRender&&(this.ops[t].preRender(),this._log.log("prerender "+this.ops[t].objName))},Ct.prototype.dispose=function(){this.pause(),this.clear(),this.cgl.dispose()},Ct.prototype.pushTriggerStack=function(t){this._triggerStack.push(t)},Ct.prototype.popTriggerStack=function(){this._triggerStack.pop()},Ct.prototype.printTriggerStack=function(){if(0==this._triggerStack.length)return;console.groupCollapsed("trigger port stack "+this._triggerStack[this._triggerStack.length-1].op.name+"."+this._triggerStack[this._triggerStack.length-1].name);const t=[];for(let e=0;e<this._triggerStack.length;e++)t.push(e+". "+this._triggerStack[e].op.name+" "+this._triggerStack[e].name);console.table(t),console.groupEnd()},Ct.prototype.getDocument=function(){return this.cgl.canvas.ownerDocument},Ct.replaceOpIds=function(t,e){const i={};for(const e in t.ops)i[t.ops[e].id]=t.ops[e];for(const s in t.ops)for(const r in t.ops[s].portsOut){const n=t.ops[s].portsOut[r].links;if(n){let t=n.length;for(;t--;)if(n[t]&&(!i[n[t].objIn]||!i[n[t].objOut]))if(e.doNotUnlinkLostLinks){if(e.fixLostLinks){const e=gui.corePatch().getOpById(n[t].objIn);if(e){const i=gui.patchView.getSubPatchOuterOp(e.uiAttribs.subPatch);i&&(e.storage=e.storage||{},e.storage.ref=e.storage.ref||CABLES.shortId(),n[t].refOp=e.storage.ref,n[t].subOpRef=i.storage.ref)}else console.log("op not found!")}}else n.splice(t,1)}}for(const i in t.ops){const s=t.ops[i],r=s.id;let n=CABLES.shortId();e.prefixHash?n=T(e.prefixHash+r):e.prefixId?n=e.prefixId+r:e.refAsId&&(s.storage&&s.storage.ref?(n=s.storage.ref,delete s.storage.ref):(s.storage=s.storage||{},s.storage.ref=n=CABLES.shortId()));const o=s.id=n;e.oldIdAsRef&&(s.storage=s.storage||{},s.storage.ref=r);for(const e in t.ops){if(t.ops[e].portsIn)for(const i in t.ops[e].portsIn)if(t.ops[e].portsIn[i].links){let s=t.ops[e].portsIn[i].links.length;for(;s--;)null===t.ops[e].portsIn[i].links[s]&&t.ops[e].portsIn[i].links.splice(s,1);for(s in t.ops[e].portsIn[i].links)t.ops[e].portsIn[i].links[s].objIn===r&&(t.ops[e].portsIn[i].links[s].objIn=o),t.ops[e].portsIn[i].links[s].objOut===r&&(t.ops[e].portsIn[i].links[s].objOut=o)}if(t.ops[e].portsOut)for(const i in t.ops[e].portsOut)if(t.ops[e].portsOut[i].links){let s=t.ops[e].portsOut[i].links.length;for(;s--;)null===t.ops[e].portsOut[i].links[s]&&t.ops[e].portsOut[i].links.splice(s,1);for(s in t.ops[e].portsOut[i].links)t.ops[e].portsOut[i].links[s].objIn===r&&(t.ops[e].portsOut[i].links[s].objIn=o),t.ops[e].portsOut[i].links[s].objOut===r&&(t.ops[e].portsOut[i].links[s].objOut=o)}}}const s=[],r=[];for(let i=0;i<t.ops.length;i++)if(t.ops[i].storage&&t.ops[i].storage.subPatchVer)for(const n in t.ops[i].portsIn)if("patchId"===t.ops[i].portsIn[n].name){let o=f();e.prefixHash&&(o=T(e.prefixHash+t.ops[i].portsIn[n].value));const a=t.ops[i].portsIn[n].value,h=t.ops[i].portsIn[n].value=o;s.push(h);for(let e=0;e<t.ops.length;e++)t.ops[e].uiAttribs&&t.ops[e].uiAttribs.subPatch===a&&(t.ops[e].uiAttribs.subPatch=h,r.push(t.ops[e].id))}for(const i in t.ops){let s=!1;for(let e=0;e<r.length;e++)if(t.ops[i].id===r[e]){s=!0;break}!s&&t.ops[i].uiAttribs&&null!=e.parentSubPatchId&&(t.ops[i].uiAttribs.subPatch=e.parentSubPatchId)}return t};const wt=Ct,Mt={addPatch:function(t,e){let i=t,s=m();if("string"==typeof t&&(s=t,i=document.getElementById(s),!i))return void console.error(s+" Polyshape Container Element not found!");const r=document.createElement("canvas");return r.id="glcanvas_"+s,r.width=i.clientWidth,r.height=i.clientHeight,window.addEventListener("resize",function(){this.setAttribute("width",i.clientWidth),this.height=i.clientHeight}.bind(r)),i.appendChild(r),(e=e||{}).glCanvasId=r.id,e.onError||(e.onError=function(t){console.error(t)}),CABLES.patch=new wt(e),r}},Ut={toneJsInitialized:!1,createAudioContext:function(t){if(window.AudioContext=window.AudioContext||window.webkitAudioContext,window.AudioContext)return window.audioContext||(window.audioContext=new AudioContext),window.Tone&&!Ut.toneJsInitialized&&(Tone.setContext(window.audioContext),Ut.toneJsInitialized=!0),window.audioContext;t.patch.config.onError("NO_WEBAUDIO","Web Audio is not supported in this browser.")},getAudioContext:function(){return window.audioContext},createAudioInPort:function(t,e,i,s){if(!t||!e||!i){const e="ERROR: createAudioInPort needs three parameters, op, portName and audioNode";throw t.log(e),new Error(e)}s||(s=0),t.webAudio=t.webAudio||{},t.webAudio.audioInPorts=t.webAudio.audioInPorts||[];const r=t.inObject(e);return r.webAudio={},r.webAudio.previousAudioInNode=null,r.webAudio.audioNode=i,t.webAudio.audioInPorts[e]=r,r.onChange=function(){const e=r.get();if(e)try{e.connect?(e.connect(r.webAudio.audioNode,0,s),t.setUiError("audioCtx",null)):t.setUiError("audioCtx","The passed input is not an audio context. Please make sure you connect an audio context to the input.",2)}catch(i){throw t.log("Error: Failed to connect web audio node!",i),t.log("port.webAudio.audioNode",r.webAudio.audioNode),t.log("audioInNode: ",e),t.log("inputChannelIndex:",s),t.log("audioInNode.connect: ",e.connect),i}else if(r.webAudio.previousAudioInNode)try{r.webAudio.previousAudioInNode.disconnect&&r.webAudio.previousAudioInNode.disconnect(r.webAudio.audioNode,0,s),t.setUiError("audioCtx",null)}catch(e){try{r.webAudio.previousAudioInNode.disconnect(r.webAudio.audioNode)}catch(i){throw t.log("Disconnecting audio node with in/out port index, as well as without in/out-port-index did not work ",e),e.printStackTrace&&e.printStackTrace(),e}}r.webAudio.previousAudioInNode=e},r},replaceNodeInPort:function(t,e,i){const s=t.webAudio.previousAudioInNode;if(s&&s.disconnect){try{s.disconnect(e)}catch(t){throw t.printStackTrace&&t.printStackTrace(),new Error("replaceNodeInPort: Could not disconnect old audio node. "+t.name+" "+t.message)}t.webAudio.audioNode=i;try{s.connect(i)}catch(t){throw t.printStackTrace&&t.printStackTrace(),new Error("replaceNodeInPort: Could not connect to new node. "+t.name+" "+t.message)}}},createAudioOutPort:function(t,e,i){if(!t||!e||!i){const e="ERROR: createAudioOutPort needs three parameters, op, portName and audioNode";throw t.log(e),new Error(e)}const s=t.outObject(e);return s.set(i),s},createAudioParamInPort:function(t,e,i,s,r){if(!t||!e||!i)return t.log("ERROR: createAudioParamInPort needs three parameters, op, portName and audioNode"),t&&t.name&&t.log("opname: ",t.name),t.log("portName",e),void t.log("audioNode: ",i);t.webAudio=t.webAudio||{},t.webAudio.audioInPorts=t.webAudio.audioInPorts||[];const n=t.inDynamic(e,[o.OP_PORT_TYPE_VALUE,o.OP_PORT_TYPE_OBJECT],s,r);return n.webAudio={},n.webAudio.previousAudioInNode=null,n.webAudio.audioNode=i,t.webAudio.audioInPorts[e]=n,n.onChange=function(){const e=n.get(),i=n.webAudio.audioNode,s=Ut.getAudioContext();if(null!=e)if("object"==typeof e&&e.connect){try{e.connect(i)}catch(e){throw t.log("Could not connect audio node: ",e),e.printStackTrace&&e.printStackTrace(),e}n.webAudio.previousAudioInNode=e}else{if(i._param&&i._param.minValue&&i._param.maxValue)if(e>=i._param.minValue&&e<=i._param.maxValue)try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("Possible AudioParam problem with tone.js op: ",e),e.printStackTrace&&e.printStackTrace(),e}else t.log("Warning: The value for an audio parameter is out of range!");else if(i.minValue&&i.maxValue)if(e>=i.minValue&&e<=i.maxValue)try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("AudioParam has minValue / maxValue defined, and value is in range, but setting the value failed! ",e),e.printStackTrace&&e.printStackTrace(),e}else t.log("Warning: The value for an audio parameter is out of range!");else try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("Possible AudioParam problem (without minValue / maxValue): ",e),e.printStackTrace&&e.printStackTrace(),e}if(n.webAudio.previousAudioInNode&&n.webAudio.previousAudioInNode.disconnect){try{n.webAudio.previousAudioInNode.disconnect(i)}catch(e){throw t.log("Could not disconnect previous audio node: ",e),e}n.webAudio.previousAudioInNode=void 0}}else n.webAudio.previousAudioInNode},n},loadAudioFile:function(t,e,i,s,r){const n=Ut.createAudioContext();let o=null;(r||void 0===r)&&(o=t.loading.start("audio",e),t.isEditorMode()&&gui.jobs().start({id:"loadaudio"+o,title:" loading audio ("+e+")"}));const a=new XMLHttpRequest;e&&(a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=function(){t.loading.finished(o),t.isEditorMode()&&gui.jobs().finish("loadaudio"+o),n.decodeAudioData(a.response,i,s)},a.send())},isValidToneTime:function(t){try{new Tone.Time(t)}catch(t){return!1}return!0},isValidToneNote:function(t){try{Tone.Frequency(t)}catch(t){return!1}return!0}},Bt=function(t,e,i){this._patch=t,this.connector=i,this._log=new r("PatchConnectionReceiver")};Bt.prototype._addOp=function(t){let e=null;t.vars.uiAttribs&&(e=t.vars.uiAttribs);const i=this._patch.addOp(t.vars.objName,e,t.vars.opId,!0);i&&(i.id=t.vars.opId,t.vars.portsIn&&t.vars.portsIn.forEach((t=>{const e=i.getPortByName(t.name);e&&e.set(t.value)})))},Bt.prototype._receive=function(t){let e={};if(e=t.hasOwnProperty("event")?t:JSON.parse(t.data),e.event==h.PACO_OP_CREATE){if(this._patch.getOpById(e.vars.opId))return;this._log.verbose("op create:",e.vars.objName),window.gui?gui.serverOps.loadOpLibs(e.vars.objName,(()=>{this._addOp(e)})):this._addOp(e)}else if(e.event==h.PACO_DESERIALIZE)e.vars.json&&(window.gui?gui.serverOps.loadProjectDependencies(e.vars.json,(()=>{this._patch.deSerialize(e.vars.json,{genIds:e.vars.genIds})})):this._patch.deSerialize(e.vars.json,{genIds:e.vars.genIds}));else if(e.event==h.PACO_LOAD)this._log.verbose("PACO load patch....."),this._patch.clear(),window.gui?gui.serverOps.loadProjectDependencies(JSON.parse(e.vars.patch),(()=>{this._patch.deSerialize(e.vars.patch)})):this._patch.deSerialize(e.vars.patch);else if(e.event==h.PACO_CLEAR)this._patch.clear(),this._log.log("clear");else if(e.event==h.PACO_OP_DELETE)this._log.verbose("op delete",e.vars.objName),this._patch.getOpById(e.vars.op),this._patch.deleteOp(e.vars.op,!0);else if(e.event==h.PACO_OP_ENABLE){const t=this._patch.getOpById(e.vars.op);t&&(t.enabled=!0)}else if(e.event==h.PACO_OP_DISABLE){const t=this._patch.getOpById(e.vars.op);t&&(t.enabled=!1)}else if(e.event==h.PACO_UIATTRIBS){const t=this._patch.getOpById(e.vars.op);t?.setUiAttrib(e.vars.uiAttribs)}else if(e.event==h.PACO_UNLINK){const t=this._patch.getOpById(e.vars.op1),i=this._patch.getOpById(e.vars.op2),s=t?.getPort(e.vars.port1),r=i?.getPort(e.vars.port2);s&&r?s.removeLinkTo(r):this._log.warn("paco unlink could not find port...")}else if(e.event==h.PACO_LINK){const t=this._patch.getOpById(e.vars.op1),i=this._patch.getOpById(e.vars.op2);t&&i&&this._patch.link(t,e.vars.port1,i,e.vars.port2)}else if(e.event==h.PACO_VALUECHANGE){if("+ create new one"===e.vars.v)return;const t=this._patch.getOpById(e.vars.op);if(t){const i=t.getPort(e.vars.port);i&&i.set(e.vars.v)}}else if(e.event==h.PACO_VARIABLES){const t=this._patch.getOpById(e.vars.opId);t&&t.varName&&t.varName.set(e.vars.varName)}else if(e.event==h.PACO_TRIGGERS){const t=this._patch.getOpById(e.vars.opId);t&&t.varName&&t.varName.set(e.vars.varName)}else if(e.event==h.PACO_PORT_SETVARIABLE){const t=this._patch.getOpById(e.vars.opId);if(t){const i=t.getPortByName(e.vars.portName);i&&i.setVariable(e.vars.variableName)}}else if(e.event==h.PACO_PORT_SETANIMATED){const t=this._patch.getOpById(e.vars.opId);t&&t.portsIn[e.vars.portIndex]&&e.vars.hasOwnProperty("targetState")&&this._patch.emitEvent("pacoPortValueSetAnimated",t,e.vars.portIndex,e.vars.targetState,e.vars.defaultValue)}else if(e.event==h.PACO_PORT_ANIM_UPDATED){const t=this._patch.getOpById(e.vars.opId);if(t){const i=t.getPortByName(e.vars.portName);if(i){const t=i.getSerialized();t.anim=e.vars.anim,i.anim=null,i.deSerializeSettings(t),this._patch.emitEvent("pacoPortAnimUpdated",i)}}}else this._log.warn("unknown patchConnectionEvent!",t)};const Lt=function(t){this.connectors=[],this.paused=!1,t.addEventListener("onOpDelete",(t=>{this.send(CABLES.PACO_OP_DELETE,{op:t.id,objName:t.objName})})),t.addEventListener("patchClearStart",(()=>{this.paused=!0})),t.addEventListener("patchClearEnd",(()=>{this.paused=!1})),t.addEventListener("patchLoadStart",(()=>{this.paused=!0})),t.addEventListener("patchLoadEnd",((t,e,i)=>{this.paused=!1,this.send(CABLES.PACO_DESERIALIZE,{json:e,genIds:i})})),t.addEventListener("onOpAdd",(t=>{const e=[];t.portsIn.forEach((t=>{const i={id:t.id,name:t.name,value:t.get()};e.push(i)}));let i={};t.uiAttribs&&(i={...t.uiAttribs}),this.send(CABLES.PACO_OP_CREATE,{opId:t.id,objName:t.objName,uiAttribs:i,portsIn:e})})),t.addEventListener("onUnLink",((t,e)=>{this.send(CABLES.PACO_UNLINK,{op1:t.op.id,op2:e.op.id,port1:t.getName(),port2:e.getName()})})),t.addEventListener("onUiAttribsChange",((t,e)=>{e&&(delete e.extendTitle,delete e.history,delete e.translate,Object.keys(e).length>0&&this.send(CABLES.PACO_UIATTRIBS,{op:t.id,uiAttribs:e}))})),t.addEventListener("opVariableNameChanged",((t,e)=>{const i={opId:t.id,varName:e};this.send(CABLES.PACO_VARIABLES,i)})),t.addEventListener("opTriggerNameChanged",((t,e)=>{const i={opId:t.id,varName:e};this.send(CABLES.PACO_TRIGGERS,i)})),t.addEventListener("onLink",((t,e)=>{this.send(CABLES.PACO_LINK,{op1:t.op.id,op2:e.op.id,port1:t.name,port2:e.name})})),t.addEventListener("portSetVariable",((t,e,i)=>{const s={opId:t.id,portName:e.name,variableName:i};this.send(CABLES.PACO_PORT_SETVARIABLE,s)})),t.addEventListener("portAnimUpdated",((t,e,i)=>{if(t&&e){const s={opId:t.id,portName:e.name,anim:i.getSerialized()};this.send(CABLES.PACO_PORT_ANIM_UPDATED,s)}}))};Lt.prototype.send=function(t,e){if(!this.paused&&(t!==CABLES.PACO_VALUECHANGE||"+ create new one"!==e.v))for(let i=0;i<this.connectors.length;i++)this.connectors[i].send(t,e)};const kt=function(){window.BroadcastChannel&&(this.bc=new BroadcastChannel("test_channel"))};kt.prototype.receive=function(t){this.bc&&(this._log.log("init"),this.bc.onmessage=t._receive.bind(t))},kt.prototype.send=function(t,e){if(!this.bc)return;const i={};i.event=t,i.vars=e,this.bc.postMessage(JSON.stringify(i))};class Dt{constructor(t){this.name=t,this.dur=0,this._startTime=0,this.childs=[]}start(){this._startTime=performance.now()}end(){this.dur=performance.now()-this._startTime}push(t){const e=new Dt(t);return this.childs.push(e),e.start(),e}print(t){t=t||0;let e="";for(let i=0;i<t;i++)e+="  ";for(let e=0;e<this.childs.length;e++)this.childs[e].print(t+1)}}class Vt extends X{constructor(t,e,i,s,r,n,o,a,h,l){super(t,e,i,s,r,n,o,a,h,l),this._loc=-1,this._cgl=t._cgl}updateValueF(){}setValueF(t){this.needsUpdate=!0,this._value=t}updateValue2F(){}setValue2F(t){this.needsUpdate=!0,this._value=t}updateValue3F(){}setValue3F(t){this.needsUpdate=!0,this._value=t}updateValue4F(){}setValue4F(t){this.needsUpdate=!0,this._value=t}getSizeBytes(){return"f"==this._type||"i"==this._type?4:"2i"==this._type||"2f"==this._type?8:"3f"==this._type?12:"4f"==this._type?16:"m4"==this._type?64:void this._log.warn("unknown type getSizeBytes")}}class Gt{constructor(t,e){if(!t)throw new Error("shader constructed without cgp "+e);this._log=new r("cgp_shader"),this._cgp=t,this._name=e,this._uniforms=[],e||this._log.stack("no shader name given"),this._name=e||"unknown",this.id=b(),this._isValid=!0,this._compileReason="",this.shaderModule=null,this._needsRecompile=!0,this._src=""}get isValid(){return this._isValid}get uniforms(){return this._uniforms}getName(){return this._name}setWhyCompile(t){this._compileReason=t}setSource(t){this._src=t,this.setWhyCompile("Source changed"),this._needsRecompile=!0}compile(){this._isValid=!0,console.log("compiling shader...",this._compileReason),this._cgp.pushErrorScope(),this.shaderModule=this._cgp.device.createShaderModule({code:this._src}),this._cgp.popErrorScope("cgp_shader "+this._name,this.error.bind(this)),this._needsRecompile=!1}error(t){this._isValid=!1}bind(){for(let t=0;t<this._uniforms.length;t++);this._needsRecompile&&this.compile()}addUniformFrag(t,e,i,s,r,n){const o=new Vt(this,t,e,i,s,r,n);return o.shaderType="frag",o}addUniformVert(t,e,i,s,r,n){const o=new Vt(this,t,e,i,s,r,n);return o.shaderType="vert",o}addUniform(t,e,i,s,r,n){const o=new Vt(this,t,e,i,s,r,n);return o.shaderType="both",o}_addUniform(t){this._uniforms.push(t),this.setWhyCompile("add uniform "+name),this._needsRecompile=!0}}class Ht{constructor(t,e){this._shaderType=e,this._shader=t,this._cgp=t._cgp,this._gpuBuffer=null,this._values=null,this._sizeBytes=0,this.update()}update(){this._sizeBytes=0;for(let t=0;t<this._shader.uniforms.length;t++){const e=this._shader.uniforms[t];this._shaderType==e.shaderType&&(this._sizeBytes+=e.getSizeBytes())}this._gpuBuffer=this._cgp.device.createBuffer({size:this._sizeBytes,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this._values=new Float32Array(this._sizeBytes/4),this.updateUniformValues()}updateUniformValues(){let t=0;for(let e=0;e<this._shader.uniforms.length;e++){const i=this._shader.uniforms[e];if(i.shaderType==this._shaderType)if(i.getSizeBytes()/4>1)for(let e=0;e<i.getValue().length;e++)this._values[t]=i.getValue()[e],t++;else this._values[t]=i.getValue(),t++}this._cgp.device.queue.writeBuffer(this._gpuBuffer,0,this._values.buffer,this._values.byteOffset,this._values.byteLength)}}class zt{constructor(t,e){if(!t)throw new Error("Pipeline constructed without cgp "+e);this._cgp=t,this._isValid=!0,this._pipeCfg=null,this._renderPipeline=null,this._fsUniformBuffer=null,this._vsUniformBuffer=null,this._old={},this.DEPTH_COMPARE_FUNCS_STRINGS=["never","less","equal","lessequal","greater","notequal","greaterequal","always"]}get isValid(){return this._isValid}setPipeline(t,e){if(!e||!t)return void console.log("pipeline unknown shader/mesh");let i=!this._renderPipeline||!this._pipeCfg||this._old.mesh!=e||this._old.shader!=t||e.needsPipelineUpdate||t.needsPipelineUpdate;this._pipeCfg&&(this._pipeCfg.depthStencil.depthWriteEnabled!=this._cgp.stateDepthWrite()&&(i=!0,this._pipeCfg.depthStencil.depthWriteEnabled=this._cgp.stateDepthWrite()),!1===this._cgp.stateDepthTest()?"never"!=this._pipeCfg.depthStencil.depthCompare&&(this._pipeCfg.depthStencil.depthCompare="never",i=!0):this._pipeCfg.depthStencil.depthCompare!=this._cgp.stateDepthFunc()&&(i=!0,this._pipeCfg.depthStencil.depthCompare=this._cgp.stateDepthFunc()),!1===this._cgp.stateCullFace()?"none"!=this._pipeCfg.primitive.cullMode&&(i=!0,this._pipeCfg.primitive.cullMode="none"):(i=!0,this._pipeCfg.primitive.cullMode=this._cgp.stateCullFaceFacing())),i&&(this._pipeCfg&&this._old.shader==t||(this._pipeCfg=this.getPiplelineObject(t,e)),this._old.shader=t,this._old.mesh=e,this._renderPipeline=this._cgp.device.createRenderPipeline(this._pipeCfg),this._bindUniforms(t)),this._renderPipeline&&this._isValid&&(mat4.copy(this._matModel,this._cgp.mMatrix),mat4.copy(this._matView,this._cgp.vMatrix),mat4.copy(this._matProj,this._cgp.pMatrix),this._cgp.device.queue.writeBuffer(this._vsUniformBuffer,0,this._vsUniformValues.buffer,this._vsUniformValues.byteOffset,this._vsUniformValues.byteLength),this._uniBufFrag.updateUniformValues(),this._cgp.passEncoder.setPipeline(this._renderPipeline),this._cgp.passEncoder.setBindGroup(0,this._bindGroup))}getPiplelineObject(t,e){return{layout:"auto",vertex:{module:t.shaderModule,entryPoint:"myVSMain",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,offset:0,format:"float32x3"}]},{arrayStride:12,attributes:[{shaderLocation:1,offset:0,format:"float32x3"}]},{arrayStride:8,attributes:[{shaderLocation:2,offset:0,format:"float32x2"}]}]},fragment:{module:t.shaderModule,entryPoint:"myFSMain",targets:[{format:this._cgp.presentationFormat}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}}}_bindUniforms(t){this._cgp.pushErrorScope(),this._uniBufFrag=new Ht(t,"frag"),this._vsUniformBuffer=this._cgp.device.createBuffer({size:192,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this._vsUniformValues=new Float32Array(48),this._matModel=this._vsUniformValues.subarray(0,16),this._matView=this._vsUniformValues.subarray(16,32),this._matProj=this._vsUniformValues.subarray(32,48),this._bindGroup=this._cgp.device.createBindGroup({layout:this._renderPipeline.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:this._vsUniformBuffer}},{binding:1,resource:{buffer:this._uniBufFrag._gpuBuffer}}]}),this._cgp.device.queue.writeBuffer(this._vsUniformBuffer,0,this._vsUniformValues.buffer,this._vsUniformValues.byteOffset,this._vsUniformValues.byteLength),this._uniBufFrag.updateUniformValues(),this._cgp.popErrorScope("cgp_pipeline end",(t=>{this._isValid=!1}))}}class Wt{constructor(t,e){if(!t)throw new Error("no cgp");this._log=new r("cgp_texture"),this._cgp=t,this.id=CABLES.uuid(),e=e||{},this.name=e.name||"unknown"}initTexture(t,e){this.width=t.width,this.height=t.height,this.textureType="rgba8unorm";const i={size:{width:t.width,height:t.height},format:this.textureType,usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST},s=this._cgp.device.createTexture(i);return this._cgp.device.queue.copyExternalImageToTexture({source:t},{texture:s},i.size),s}getInfo(){const t=this,e={};return e.name=t.name,e.size=t.width+" x "+t.height,e.textureType=t.textureType,e}}Wt.load=function(t,e,i,s){fetch(e).then((s=>{s.blob().then((s=>{createImageBitmap(s).then((s=>{const r=new Wt(t,{name:e});r.initTexture(s),i?i(r):console.log("Texture.load no onFinished callback")}))}))}))};const Yt={Context:class extends bt{constructor(t){super(),this.patch=t,this.gApi=Tt.GAPI_WEBGPU,this._viewport=[0,0,256,256],this._shaderStack=[],this._simpleShader=null,this._stackCullFaceFacing=[],this._stackDepthTest=[],this._stackCullFace=[],this._stackDepthFunc=[],this._stackDepthWrite=[],this.DEPTH_FUNCS=["never","always","less","less-equal","greater","greater-equal","equal","not-equal"],this.CULL_MODES=["none","back","front","none"]}getViewPort(){return[0,0,this.canvasWidth,this.canvasHeight]}renderStart(t,e,i){this._simpleShader||(this._simpleShader=new Gt(this,"simple default shader"),this._simpleShader.setSource("struct VSUniforms\n{\n    modelMatrix: mat4x4<f32>,\n    viewMatrix: mat4x4<f32>,\n    projMatrix: mat4x4<f32>,\n};\n\nstruct FSUniforms\n{\n    color:vec4<f32>\n};\n\n@group(0) @binding(0) var<uniform> vsUniforms: VSUniforms;\n@group(0) @binding(1) var<uniform> fsUniforms: FSUniforms;\n\nstruct MyVSInput\n{\n    @location(0) position: vec3<f32>,\n    @location(1) normal: vec3<f32>,\n    @location(2) texcoord: vec2<f32>,\n};\n\nstruct MyVSOutput\n{\n    @builtin(position) position: vec4<f32>,\n    @location(0) normal: vec3<f32>,\n    @location(1) texcoord: vec2<f32>,\n};\n\n@vertex\nfn myVSMain(v: MyVSInput) -> MyVSOutput\n{\n    var vsOut: MyVSOutput;\n    var pos =vec4<f32>(v.position, 1.0);\n\n    var mvMatrix=vsUniforms.viewMatrix * vsUniforms.modelMatrix;\n    vsOut.position = vsUniforms.projMatrix * mvMatrix * pos;\n\n    vsOut.normal = v.normal;\n    vsOut.texcoord = v.texcoord;\n    return vsOut;\n}\n\n@fragment\nfn myFSMain(v: MyVSOutput) -> @location(0) vec4<f32>\n{\n    return fsUniforms.color+vec4<f32>(.5,.5,.5,1.0);\n}\n\n"),this._simpleShader.addUniformFrag("4f","color",1,1,0,1)),this.fpsCounter.startFrame(),this._startMatrixStacks(e,i),this.setViewPort(0,0,this.canvasWidth,this.canvasHeight),this.pushShader(this._simpleShader),this.pushDepthTest(!0),this.pushDepthWrite(!0),this.pushDepthFunc("less-equal"),this.emitEvent("beginFrame")}renderEnd(){this._endMatrixStacks(),this.popShader(),this.popDepthFunc(),this.popDepthWrite(),this.popDepthTest(),this.emitEvent("endFrame"),this.fpsCounter.endFrame()}setViewPort(t,e,i,s){this._viewport=[t,e,i,s]}getViewPort(){return this._viewPort}createMesh(t,e){return new CGP.Mesh(this,t,e)}getShader(){return{}}pushShader(t){this._shaderStack.push(t)}popShader(){if(0===this._shaderStack.length)throw new Error("Invalid shader stack pop!");this._shaderStack.pop()}getShader(){return this._shaderStack[this._shaderStack.length-1]}pushErrorScope(){this.device.pushErrorScope("validation")}popErrorScope(t,e){this.device.popErrorScope().then((i=>{i&&(this.patch.emitEvent("criticalError",{title:'WebGPU error "'+t+'"',codeText:i.message}),console.warn("[cgp]",t,i.message,i,e),e&&e(i))}))}pushDepthTest(t){this._stackDepthTest.push(t)}stateDepthTest(){return this._stackDepthTest[this._stackDepthTest.length-1]}popDepthTest(){this._stackDepthTest.pop()}pushDepthWrite(t){t=t||!1,this._stackDepthWrite.push(t)}stateDepthWrite(){return this._stackDepthWrite[this._stackDepthWrite.length-1]}popDepthWrite(){this._stackDepthWrite.pop()}pushDepthFunc(t){this._stackDepthFunc.push(t)}stateDepthFunc(){return this._stackDepthFunc.length>0&&this._stackDepthFunc[this._stackDepthFunc.length-1]}popDepthFunc(){this._stackDepthFunc.pop()}pushCullFace(t){this._stackCullFace.push(t)}stateCullFace(){return this._stackCullFace[this._stackCullFace.length-1]}popCullFace(){this._stackCullFace.pop()}pushCullFaceFacing(t){this._stackCullFaceFacing.push(t)}stateCullFaceFacing(){return this._stackCullFaceFacing[this._stackCullFaceFacing.length-1]}popCullFaceFacing(){this._stackCullFaceFacing.pop()}},Shader:Gt,Mesh:class{constructor(t,e){this._log=new r("cgl_mesh"),this._cgp=t,this._geom=null,this.numIndex=0,this._pipe=new zt(this._cgp),this._numNonIndexed=0,this._positionBuffer=null,this._bufVerticesIndizes=null,this._attributes=[],this._needsPipelineUpdate=!1,e&&this.setGeom(e)}_createBuffer(t,e,i){const s=t.createBuffer({size:e.byteLength,usage:i,mappedAtCreation:!0});return new e.constructor(s.getMappedRange()).set(e),s.unmap(),s}setGeom(t,e){this._needsPipelineUpdate=!0,this._geom=t,this._disposeAttributes(),this._positionBuffer=this._createBuffer(this._cgp.device,new Float32Array(t.vertices),GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST);let i=t.verticesIndices;t.isIndexed()||(i=Array.from(Array(t.vertices.length/3).keys())),this._numIndices=i.length,this._indicesBuffer=this._createBuffer(this._cgp.device,new Uint32Array(i),GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST),t.texCoords&&t.texCoords.length&&this.setAttribute("texCoords",t.texCoords,2),t.vertexNormals&&t.vertexNormals.length&&this.setAttribute("normals",t.vertexNormals,3)}_disposeAttributes(){this._needsPipelineUpdate=!0;for(let t=0;t<this._attributes.length;t++)this._attributes[t].buffer.destroy();this._attributes.length=0}dispose(){this._disposeAttributes()}setAttribute(t,e,i,s){if(!e)throw this._log.error("mesh addAttribute - no array given! "+t),new Error;for(let e=0;e<this._attributes.length;e++){const i=this._attributes[e];if(i.name==t)return i}const r={buffer:this._createBuffer(this._cgp.device,new Float32Array(e),GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST),name:t};return this._attributes.push(r),r}render(){if(!this._positionBuffer)return;const t=this._cgp.getShader();if(t&&t.bind(),this._cgp.getShader()&&this._cgp.getShader().isValid&&(this._pipe.setPipeline(this._cgp.getShader(),this),this._pipe.isValid)){this._cgp.passEncoder.setVertexBuffer(0,this._positionBuffer);for(let t=0;t<this._attributes.length;t++)this._cgp.passEncoder.setVertexBuffer(t+1,this._attributes[t].buffer);this._cgp.passEncoder.setIndexBuffer(this._indicesBuffer,"uint32"),this._numNonIndexed?this._cgp.passEncoder.draw(this._numIndices):this._cgp.passEncoder.drawIndexed(this._numIndices)}}},Pipeline:zt,Texture:Wt};window.CGP=Yt,window.CABLES=window.CABLES||{},CABLES.CG=Tt,CABLES.CGP=Yt,CABLES.EventTarget=H,CABLES.EMBED=Mt,CABLES.Link=yt,CABLES.Port=j,CABLES.Op=St,CABLES.Profiler=Ot,CABLES.Patch=wt,CABLES.Instancing=Ft,CABLES.Timer=ot,CABLES.WEBAUDIO=Ut,CABLES.Variable=function(){let t=null;const e=[];this.onChanged=function(t){e.push(t)},this.getValue=function(){return t},this.setValue=function(e){t=e,this.emitChanged()},this.emitChanged=function(){for(let t=0;t<e.length;t++)e[t]()}},CABLES.LoadingStatus=Pt,CABLES.now=nt,CABLES.internalNow=rt,CABLES.BranchStack=class{constructor(){}start(){this.root=new Dt("Root"),this.root.start(),this.current=this.root}push(t){this.current||this.start();const e=this.current;return this.current=this.current.push(t),this.current.prev=e,this.current.start(),this.current}pop(){this.current&&(this.current.end(),this.current=this.current.prev)}finish(){this.current.end(),this.root.print(),this.current=null}},CABLES.Branch=Dt;const jt=CABLES=Object.assign(CABLES,e,t,i,s,a,h,n,o);(function(){return!this})()||console.warn("not in strict mode: index core")})(),CABLES=__webpack_exports__.default})();
//# originalSourceMappingURL=cables.min.js.map

var CABLES = CABLES || {}; CABLES.build = {"timestamp":1701939081153,"created":"2023-12-07T08:51:21.153Z","git":{"branch":"master","commit":"4bcad0e1f8525d4d59faa49644f419195eaf3c3c","date":"2023-12-07T08:51:03.000Z","message":"live changes"}};
/*!
@fileoverview gl-matrix - High performance matrix and vector operations
@author Brandon Jones
@author Colin MacKenzie IV
@version 3.1.0

Copyright (c) 2015-2019, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).glMatrix={})}(this,function(t){"use strict";var n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array,r=Math.random;var u=Math.PI/180;Math.hypot||(Math.hypot=function(){for(var t=0,n=arguments.length;n--;)t+=arguments[n]*arguments[n];return Math.sqrt(t)});var e=Object.freeze({EPSILON:n,get ARRAY_TYPE(){return a},RANDOM:r,setMatrixArrayType:function(t){a=t},toRadian:function(t){return t*u},equals:function(t,a){return Math.abs(t-a)<=n*Math.max(1,Math.abs(t),Math.abs(a))}});function o(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*i+e*c,t[1]=u*i+o*c,t[2]=r*h+e*s,t[3]=u*h+o*s,t}function i(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}var c=o,h=i,s=Object.freeze({create:function(){var t=new a(4);return a!=Float32Array&&(t[1]=0,t[2]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},fromValues:function(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e},set:function(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t},transpose:function(t,n){if(t===n){var a=n[1];t[1]=n[2],t[2]=a}else t[0]=n[0],t[1]=n[2],t[2]=n[1],t[3]=n[3];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*e-u*r;return o?(o=1/o,t[0]=e*o,t[1]=-r*o,t[2]=-u*o,t[3]=a*o,t):null},adjoint:function(t,n){var a=n[0];return t[0]=n[3],t[1]=-n[1],t[2]=-n[2],t[3]=a,t},determinant:function(t){return t[0]*t[3]-t[2]*t[1]},multiply:o,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+e*i,t[1]=u*c+o*i,t[2]=r*-i+e*c,t[3]=u*-i+o*c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1];return t[0]=r*i,t[1]=u*i,t[2]=e*c,t[3]=o*c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t},str:function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3])},LDU:function(t,n,a,r){return t[2]=r[2]/r[0],a[0]=r[0],a[1]=r[1],a[3]=r[3]-t[2]*a[1],[t,n,a]},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t},subtract:i,exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))},multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},mul:c,sub:h});function M(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return t[0]=r*h+e*s,t[1]=u*h+o*s,t[2]=r*M+e*f,t[3]=u*M+o*f,t[4]=r*l+e*v+i,t[5]=u*l+o*v+c,t}function f(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t}var l=M,v=f,b=Object.freeze({create:function(){var t=new a(6);return a!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(6);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},fromValues:function(t,n,r,u,e,o){var i=new a(6);return i[0]=t,i[1]=n,i[2]=r,i[3]=u,i[4]=e,i[5]=o,i},set:function(t,n,a,r,u,e,o){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=a*e-r*u;return c?(c=1/c,t[0]=e*c,t[1]=-r*c,t[2]=-u*c,t[3]=a*c,t[4]=(u*i-e*o)*c,t[5]=(r*o-a*i)*c,t):null},determinant:function(t){return t[0]*t[3]-t[1]*t[2]},multiply:M,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=Math.sin(a),s=Math.cos(a);return t[0]=r*s+e*h,t[1]=u*s+o*h,t[2]=r*-h+e*s,t[3]=u*-h+o*s,t[4]=i,t[5]=c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r*h,t[1]=u*h,t[2]=e*s,t[3]=o*s,t[4]=i,t[5]=c,t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=r*h+e*s+i,t[5]=u*h+o*s+c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t[4]=0,t[5]=0,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t[4]=0,t[5]=0,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=n[0],t[5]=n[1],t},str:function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],1)},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t},subtract:f,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return Math.abs(r-h)<=n*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(u-s)<=n*Math.max(1,Math.abs(u),Math.abs(s))&&Math.abs(e-M)<=n*Math.max(1,Math.abs(e),Math.abs(M))&&Math.abs(o-f)<=n*Math.max(1,Math.abs(o),Math.abs(f))&&Math.abs(i-l)<=n*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(c-v)<=n*Math.max(1,Math.abs(c),Math.abs(v))},mul:l,sub:v});function m(){var t=new a(9);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function d(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return t[0]=f*r+l*o+v*h,t[1]=f*u+l*i+v*s,t[2]=f*e+l*c+v*M,t[3]=b*r+m*o+d*h,t[4]=b*u+m*i+d*s,t[5]=b*e+m*c+d*M,t[6]=x*r+p*o+y*h,t[7]=x*u+p*i+y*s,t[8]=x*e+p*c+y*M,t}function x(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t}var p=d,y=x,q=Object.freeze({create:m,fromMat4:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[4],t[4]=n[5],t[5]=n[6],t[6]=n[8],t[7]=n[9],t[8]=n[10],t},clone:function(t){var n=new a(9);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromValues:function(t,n,r,u,e,o,i,c,h){var s=new a(9);return s[0]=t,s[1]=n,s[2]=r,s[3]=u,s[4]=e,s[5]=o,s[6]=i,s[7]=c,s[8]=h,s},set:function(t,n,a,r,u,e,o,i,c,h){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[5];t[1]=n[3],t[2]=n[6],t[3]=a,t[5]=n[7],t[6]=r,t[7]=u}else t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=s*o-i*h,f=-s*e+i*c,l=h*e-o*c,v=a*M+r*f+u*l;return v?(v=1/v,t[0]=M*v,t[1]=(-s*r+u*h)*v,t[2]=(i*r-u*o)*v,t[3]=f*v,t[4]=(s*a-u*c)*v,t[5]=(-i*a+u*e)*v,t[6]=l*v,t[7]=(-h*a+r*c)*v,t[8]=(o*a-r*e)*v,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8];return t[0]=o*s-i*h,t[1]=u*h-r*s,t[2]=r*i-u*o,t[3]=i*c-e*s,t[4]=a*s-u*c,t[5]=u*e-a*i,t[6]=e*h-o*c,t[7]=r*c-a*h,t[8]=a*o-r*e,t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8];return n*(h*e-o*c)+a*(-h*u+o*i)+r*(c*u-e*i)},multiply:d,translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=f*r+l*o+h,t[7]=f*u+l*i+s,t[8]=f*e+l*c+M,t},rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=Math.sin(a),l=Math.cos(a);return t[0]=l*r+f*o,t[1]=l*u+f*i,t[2]=l*e+f*c,t[3]=l*o-f*r,t[4]=l*i-f*u,t[5]=l*c-f*e,t[6]=h,t[7]=s,t[8]=M,t},scale:function(t,n,a){var r=a[0],u=a[1];return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=u*n[3],t[4]=u*n[4],t[5]=u*n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=n[0],t[7]=n[1],t[8]=1,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=-a,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=n[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromMat2d:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=0,t[3]=n[2],t[4]=n[3],t[5]=0,t[6]=n[4],t[7]=n[5],t[8]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[3]=s-d,t[6]=f+m,t[1]=s+d,t[4]=1-h-v,t[7]=l-b,t[2]=f-m,t[5]=l+b,t[8]=1-h-M,t},normalFromMat4:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(c*z-o*I-h*R)*S,t[2]=(o*j-i*z+h*w)*S,t[3]=(u*j-r*I-e*P)*S,t[4]=(a*I-u*z+e*R)*S,t[5]=(r*z-a*j-e*w)*S,t[6]=(b*A-m*g+d*q)*S,t[7]=(m*y-v*A-d*p)*S,t[8]=(v*g-b*y+d*x)*S,t):null},projection:function(t,n,a){return t[0]=2/n,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/a,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t},str:function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t},subtract:x,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return Math.abs(r-f)<=n*Math.max(1,Math.abs(r),Math.abs(f))&&Math.abs(u-l)<=n*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(e-v)<=n*Math.max(1,Math.abs(e),Math.abs(v))&&Math.abs(o-b)<=n*Math.max(1,Math.abs(o),Math.abs(b))&&Math.abs(i-m)<=n*Math.max(1,Math.abs(i),Math.abs(m))&&Math.abs(c-d)<=n*Math.max(1,Math.abs(c),Math.abs(d))&&Math.abs(h-x)<=n*Math.max(1,Math.abs(h),Math.abs(x))&&Math.abs(s-p)<=n*Math.max(1,Math.abs(s),Math.abs(p))&&Math.abs(M-y)<=n*Math.max(1,Math.abs(M),Math.abs(y))},mul:p,sub:y});function g(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function A(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],b=n[12],m=n[13],d=n[14],x=n[15],p=a[0],y=a[1],q=a[2],g=a[3];return t[0]=p*r+y*i+q*M+g*b,t[1]=p*u+y*c+q*f+g*m,t[2]=p*e+y*h+q*l+g*d,t[3]=p*o+y*s+q*v+g*x,p=a[4],y=a[5],q=a[6],g=a[7],t[4]=p*r+y*i+q*M+g*b,t[5]=p*u+y*c+q*f+g*m,t[6]=p*e+y*h+q*l+g*d,t[7]=p*o+y*s+q*v+g*x,p=a[8],y=a[9],q=a[10],g=a[11],t[8]=p*r+y*i+q*M+g*b,t[9]=p*u+y*c+q*f+g*m,t[10]=p*e+y*h+q*l+g*d,t[11]=p*o+y*s+q*v+g*x,p=a[12],y=a[13],q=a[14],g=a[15],t[12]=p*r+y*i+q*M+g*b,t[13]=p*u+y*c+q*f+g*m,t[14]=p*e+y*h+q*l+g*d,t[15]=p*o+y*s+q*v+g*x,t}function w(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=r+r,c=u+u,h=e+e,s=r*i,M=r*c,f=r*h,l=u*c,v=u*h,b=e*h,m=o*i,d=o*c,x=o*h;return t[0]=1-(l+b),t[1]=M+x,t[2]=f-d,t[3]=0,t[4]=M-x,t[5]=1-(s+b),t[6]=v+m,t[7]=0,t[8]=f+d,t[9]=v-m,t[10]=1-(s+l),t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t}function R(t,n){return t[0]=n[12],t[1]=n[13],t[2]=n[14],t}function z(t,n){var a=n[0],r=n[1],u=n[2],e=n[4],o=n[5],i=n[6],c=n[8],h=n[9],s=n[10];return t[0]=Math.hypot(a,r,u),t[1]=Math.hypot(e,o,i),t[2]=Math.hypot(c,h,s),t}function P(t,n){var r=new a(3);z(r,n);var u=1/r[0],e=1/r[1],o=1/r[2],i=n[0]*u,c=n[1]*e,h=n[2]*o,s=n[4]*u,M=n[5]*e,f=n[6]*o,l=n[8]*u,v=n[9]*e,b=n[10]*o,m=i+M+b,d=0;return m>0?(d=2*Math.sqrt(m+1),t[3]=.25*d,t[0]=(f-v)/d,t[1]=(l-h)/d,t[2]=(c-s)/d):i>M&&i>b?(d=2*Math.sqrt(1+i-M-b),t[3]=(f-v)/d,t[0]=.25*d,t[1]=(c+s)/d,t[2]=(l+h)/d):M>b?(d=2*Math.sqrt(1+M-i-b),t[3]=(l-h)/d,t[0]=(c+s)/d,t[1]=.25*d,t[2]=(f+v)/d):(d=2*Math.sqrt(1+b-i-M),t[3]=(c-s)/d,t[0]=(l+h)/d,t[1]=(f+v)/d,t[2]=.25*d),t}function j(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t[9]=n[9]-a[9],t[10]=n[10]-a[10],t[11]=n[11]-a[11],t[12]=n[12]-a[12],t[13]=n[13]-a[13],t[14]=n[14]-a[14],t[15]=n[15]-a[15],t}var I=A,S=j,E=Object.freeze({create:function(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t},clone:function(t){var n=new a(16);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},fromValues:function(t,n,r,u,e,o,i,c,h,s,M,f,l,v,b,m){var d=new a(16);return d[0]=t,d[1]=n,d[2]=r,d[3]=u,d[4]=e,d[5]=o,d[6]=i,d[7]=c,d[8]=h,d[9]=s,d[10]=M,d[11]=f,d[12]=l,d[13]=v,d[14]=b,d[15]=m,d},set:function(t,n,a,r,u,e,o,i,c,h,s,M,f,l,v,b,m){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t[9]=s,t[10]=M,t[11]=f,t[12]=l,t[13]=v,t[14]=b,t[15]=m,t},identity:g,transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[3],e=n[6],o=n[7],i=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=a,t[6]=n[9],t[7]=n[13],t[8]=r,t[9]=e,t[11]=n[14],t[12]=u,t[13]=o,t[14]=i}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(u*j-r*I-e*P)*S,t[2]=(b*A-m*g+d*q)*S,t[3]=(f*g-M*A-l*q)*S,t[4]=(c*z-o*I-h*R)*S,t[5]=(a*I-u*z+e*R)*S,t[6]=(m*y-v*A-d*p)*S,t[7]=(s*A-f*y+l*p)*S,t[8]=(o*j-i*z+h*w)*S,t[9]=(r*z-a*j-e*w)*S,t[10]=(v*g-b*y+d*x)*S,t[11]=(M*y-s*g-l*x)*S,t[12]=(i*R-o*P-c*w)*S,t[13]=(a*P-r*R+u*w)*S,t[14]=(b*p-v*q-m*x)*S,t[15]=(s*q-M*p+f*x)*S,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15];return t[0]=i*(f*d-l*m)-M*(c*d-h*m)+b*(c*l-h*f),t[1]=-(r*(f*d-l*m)-M*(u*d-e*m)+b*(u*l-e*f)),t[2]=r*(c*d-h*m)-i*(u*d-e*m)+b*(u*h-e*c),t[3]=-(r*(c*l-h*f)-i*(u*l-e*f)+M*(u*h-e*c)),t[4]=-(o*(f*d-l*m)-s*(c*d-h*m)+v*(c*l-h*f)),t[5]=a*(f*d-l*m)-s*(u*d-e*m)+v*(u*l-e*f),t[6]=-(a*(c*d-h*m)-o*(u*d-e*m)+v*(u*h-e*c)),t[7]=a*(c*l-h*f)-o*(u*l-e*f)+s*(u*h-e*c),t[8]=o*(M*d-l*b)-s*(i*d-h*b)+v*(i*l-h*M),t[9]=-(a*(M*d-l*b)-s*(r*d-e*b)+v*(r*l-e*M)),t[10]=a*(i*d-h*b)-o*(r*d-e*b)+v*(r*h-e*i),t[11]=-(a*(i*l-h*M)-o*(r*l-e*M)+s*(r*h-e*i)),t[12]=-(o*(M*m-f*b)-s*(i*m-c*b)+v*(i*f-c*M)),t[13]=a*(M*m-f*b)-s*(r*m-u*b)+v*(r*f-u*M),t[14]=-(a*(i*m-c*b)-o*(r*m-u*b)+v*(r*c-u*i)),t[15]=a*(i*f-c*M)-o*(r*f-u*M)+s*(r*c-u*i),t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8],s=t[9],M=t[10],f=t[11],l=t[12],v=t[13],b=t[14],m=t[15];return(n*o-a*e)*(M*m-f*b)-(n*i-r*e)*(s*m-f*v)+(n*c-u*e)*(s*b-M*v)+(a*i-r*o)*(h*m-f*l)-(a*c-u*o)*(h*b-M*l)+(r*c-u*i)*(h*v-s*l)},multiply:A,translate:function(t,n,a){var r,u,e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2];return n===t?(t[12]=n[0]*b+n[4]*m+n[8]*d+n[12],t[13]=n[1]*b+n[5]*m+n[9]*d+n[13],t[14]=n[2]*b+n[6]*m+n[10]*d+n[14],t[15]=n[3]*b+n[7]*m+n[11]*d+n[15]):(r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=h,t[7]=s,t[8]=M,t[9]=f,t[10]=l,t[11]=v,t[12]=r*b+i*m+M*d+n[12],t[13]=u*b+c*m+f*d+n[13],t[14]=e*b+h*m+l*d+n[14],t[15]=o*b+s*m+v*d+n[15]),t},scale:function(t,n,a){var r=a[0],u=a[1],e=a[2];return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*u,t[5]=n[5]*u,t[6]=n[6]*u,t[7]=n[7]*u,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=n[11]*e,t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},rotate:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b,m,d,x,p,y,q,g,A,w,R,z,P,j,I=u[0],S=u[1],E=u[2],O=Math.hypot(I,S,E);return O<n?null:(I*=O=1/O,S*=O,E*=O,e=Math.sin(r),i=1-(o=Math.cos(r)),c=a[0],h=a[1],s=a[2],M=a[3],f=a[4],l=a[5],v=a[6],b=a[7],m=a[8],d=a[9],x=a[10],p=a[11],y=I*I*i+o,q=S*I*i+E*e,g=E*I*i-S*e,A=I*S*i-E*e,w=S*S*i+o,R=E*S*i+I*e,z=I*E*i+S*e,P=S*E*i-I*e,j=E*E*i+o,t[0]=c*y+f*q+m*g,t[1]=h*y+l*q+d*g,t[2]=s*y+v*q+x*g,t[3]=M*y+b*q+p*g,t[4]=c*A+f*w+m*R,t[5]=h*A+l*w+d*R,t[6]=s*A+v*w+x*R,t[7]=M*A+b*w+p*R,t[8]=c*z+f*P+m*j,t[9]=h*z+l*P+d*j,t[10]=s*z+v*P+x*j,t[11]=M*z+b*P+p*j,a!==t&&(t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t)},rotateX:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[4],o=n[5],i=n[6],c=n[7],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[4]=e*u+h*r,t[5]=o*u+s*r,t[6]=i*u+M*r,t[7]=c*u+f*r,t[8]=h*u-e*r,t[9]=s*u-o*r,t[10]=M*u-i*r,t[11]=f*u-c*r,t},rotateY:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u-h*r,t[1]=o*u-s*r,t[2]=i*u-M*r,t[3]=c*u-f*r,t[8]=e*r+h*u,t[9]=o*r+s*u,t[10]=i*r+M*u,t[11]=c*r+f*u,t},rotateZ:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[4],s=n[5],M=n[6],f=n[7];return n!==t&&(t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u+h*r,t[1]=o*u+s*r,t[2]=i*u+M*r,t[3]=c*u+f*r,t[4]=h*u-e*r,t[5]=s*u-o*r,t[6]=M*u-i*r,t[7]=f*u-c*r,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=n[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotation:function(t,a,r){var u,e,o,i=r[0],c=r[1],h=r[2],s=Math.hypot(i,c,h);return s<n?null:(i*=s=1/s,c*=s,h*=s,u=Math.sin(a),o=1-(e=Math.cos(a)),t[0]=i*i*o+e,t[1]=c*i*o+h*u,t[2]=h*i*o-c*u,t[3]=0,t[4]=i*c*o-h*u,t[5]=c*c*o+e,t[6]=h*c*o+i*u,t[7]=0,t[8]=i*h*o+c*u,t[9]=c*h*o-i*u,t[10]=h*h*o+e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},fromXRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=a,t[7]=0,t[8]=0,t[9]=-a,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromYRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=0,t[2]=-a,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=a,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromZRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=0,t[4]=-a,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotationTranslation:w,fromQuat2:function(t,n){var r=new a(3),u=-n[0],e=-n[1],o=-n[2],i=n[3],c=n[4],h=n[5],s=n[6],M=n[7],f=u*u+e*e+o*o+i*i;return f>0?(r[0]=2*(c*i+M*u+h*o-s*e)/f,r[1]=2*(h*i+M*e+s*u-c*o)/f,r[2]=2*(s*i+M*o+c*e-h*u)/f):(r[0]=2*(c*i+M*u+h*o-s*e),r[1]=2*(h*i+M*e+s*u-c*o),r[2]=2*(s*i+M*o+c*e-h*u)),w(t,n,r),t},getTranslation:R,getScaling:z,getRotation:P,fromRotationTranslationScale:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3],c=u+u,h=e+e,s=o+o,M=u*c,f=u*h,l=u*s,v=e*h,b=e*s,m=o*s,d=i*c,x=i*h,p=i*s,y=r[0],q=r[1],g=r[2];return t[0]=(1-(v+m))*y,t[1]=(f+p)*y,t[2]=(l-x)*y,t[3]=0,t[4]=(f-p)*q,t[5]=(1-(M+m))*q,t[6]=(b+d)*q,t[7]=0,t[8]=(l+x)*g,t[9]=(b-d)*g,t[10]=(1-(M+v))*g,t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t},fromRotationTranslationScaleOrigin:function(t,n,a,r,u){var e=n[0],o=n[1],i=n[2],c=n[3],h=e+e,s=o+o,M=i+i,f=e*h,l=e*s,v=e*M,b=o*s,m=o*M,d=i*M,x=c*h,p=c*s,y=c*M,q=r[0],g=r[1],A=r[2],w=u[0],R=u[1],z=u[2],P=(1-(b+d))*q,j=(l+y)*q,I=(v-p)*q,S=(l-y)*g,E=(1-(f+d))*g,O=(m+x)*g,T=(v+p)*A,D=(m-x)*A,F=(1-(f+b))*A;return t[0]=P,t[1]=j,t[2]=I,t[3]=0,t[4]=S,t[5]=E,t[6]=O,t[7]=0,t[8]=T,t[9]=D,t[10]=F,t[11]=0,t[12]=a[0]+w-(P*w+S*R+T*z),t[13]=a[1]+R-(j*w+E*R+D*z),t[14]=a[2]+z-(I*w+O*R+F*z),t[15]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[1]=s+d,t[2]=f-m,t[3]=0,t[4]=s-d,t[5]=1-h-v,t[6]=l+b,t[7]=0,t[8]=f+m,t[9]=l-b,t[10]=1-h-M,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},frustum:function(t,n,a,r,u,e,o){var i=1/(a-n),c=1/(u-r),h=1/(e-o);return t[0]=2*e*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*e*c,t[6]=0,t[7]=0,t[8]=(a+n)*i,t[9]=(u+r)*c,t[10]=(o+e)*h,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*e*2*h,t[15]=0,t},perspective:function(t,n,a,r,u){var e,o=1/Math.tan(n/2);return t[0]=o/a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=u&&u!==1/0?(e=1/(r-u),t[10]=(u+r)*e,t[14]=2*u*r*e):(t[10]=-1,t[14]=-2*r),t},perspectiveFromFieldOfView:function(t,n,a,r){var u=Math.tan(n.upDegrees*Math.PI/180),e=Math.tan(n.downDegrees*Math.PI/180),o=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),c=2/(o+i),h=2/(u+e);return t[0]=c,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=h,t[6]=0,t[7]=0,t[8]=-(o-i)*c*.5,t[9]=(u-e)*h*.5,t[10]=r/(a-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*a/(a-r),t[15]=0,t},ortho:function(t,n,a,r,u,e,o){var i=1/(n-a),c=1/(r-u),h=1/(e-o);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*c,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*h,t[11]=0,t[12]=(n+a)*i,t[13]=(u+r)*c,t[14]=(o+e)*h,t[15]=1,t},lookAt:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2],x=u[0],p=u[1],y=u[2],q=r[0],A=r[1],w=r[2];return Math.abs(b-q)<n&&Math.abs(m-A)<n&&Math.abs(d-w)<n?g(t):(M=b-q,f=m-A,l=d-w,e=p*(l*=v=1/Math.hypot(M,f,l))-y*(f*=v),o=y*(M*=v)-x*l,i=x*f-p*M,(v=Math.hypot(e,o,i))?(e*=v=1/v,o*=v,i*=v):(e=0,o=0,i=0),c=f*i-l*o,h=l*e-M*i,s=M*o-f*e,(v=Math.hypot(c,h,s))?(c*=v=1/v,h*=v,s*=v):(c=0,h=0,s=0),t[0]=e,t[1]=c,t[2]=M,t[3]=0,t[4]=o,t[5]=h,t[6]=f,t[7]=0,t[8]=i,t[9]=s,t[10]=l,t[11]=0,t[12]=-(e*b+o*m+i*d),t[13]=-(c*b+h*m+s*d),t[14]=-(M*b+f*m+l*d),t[15]=1,t)},targetTo:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=r[0],c=r[1],h=r[2],s=u-a[0],M=e-a[1],f=o-a[2],l=s*s+M*M+f*f;l>0&&(s*=l=1/Math.sqrt(l),M*=l,f*=l);var v=c*f-h*M,b=h*s-i*f,m=i*M-c*s;return(l=v*v+b*b+m*m)>0&&(v*=l=1/Math.sqrt(l),b*=l,m*=l),t[0]=v,t[1]=b,t[2]=m,t[3]=0,t[4]=M*m-f*b,t[5]=f*v-s*m,t[6]=s*b-M*v,t[7]=0,t[8]=s,t[9]=M,t[10]=f,t[11]=0,t[12]=u,t[13]=e,t[14]=o,t[15]=1,t},str:function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t[9]=n[9]+a[9],t[10]=n[10]+a[10],t[11]=n[11]+a[11],t[12]=n[12]+a[12],t[13]=n[13]+a[13],t[14]=n[14]+a[14],t[15]=n[15]+a[15],t},subtract:j,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=n[11]*a,t[12]=n[12]*a,t[13]=n[13]*a,t[14]=n[14]*a,t[15]=n[15]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t[9]=n[9]+a[9]*r,t[10]=n[10]+a[10]*r,t[11]=n[11]+a[11]*r,t[12]=n[12]+a[12]*r,t[13]=n[13]+a[13]*r,t[14]=n[14]+a[14]*r,t[15]=n[15]+a[15]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=t[9],l=t[10],v=t[11],b=t[12],m=t[13],d=t[14],x=t[15],p=a[0],y=a[1],q=a[2],g=a[3],A=a[4],w=a[5],R=a[6],z=a[7],P=a[8],j=a[9],I=a[10],S=a[11],E=a[12],O=a[13],T=a[14],D=a[15];return Math.abs(r-p)<=n*Math.max(1,Math.abs(r),Math.abs(p))&&Math.abs(u-y)<=n*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(e-q)<=n*Math.max(1,Math.abs(e),Math.abs(q))&&Math.abs(o-g)<=n*Math.max(1,Math.abs(o),Math.abs(g))&&Math.abs(i-A)<=n*Math.max(1,Math.abs(i),Math.abs(A))&&Math.abs(c-w)<=n*Math.max(1,Math.abs(c),Math.abs(w))&&Math.abs(h-R)<=n*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(s-z)<=n*Math.max(1,Math.abs(s),Math.abs(z))&&Math.abs(M-P)<=n*Math.max(1,Math.abs(M),Math.abs(P))&&Math.abs(f-j)<=n*Math.max(1,Math.abs(f),Math.abs(j))&&Math.abs(l-I)<=n*Math.max(1,Math.abs(l),Math.abs(I))&&Math.abs(v-S)<=n*Math.max(1,Math.abs(v),Math.abs(S))&&Math.abs(b-E)<=n*Math.max(1,Math.abs(b),Math.abs(E))&&Math.abs(m-O)<=n*Math.max(1,Math.abs(m),Math.abs(O))&&Math.abs(d-T)<=n*Math.max(1,Math.abs(d),Math.abs(T))&&Math.abs(x-D)<=n*Math.max(1,Math.abs(x),Math.abs(D))},mul:I,sub:S});function O(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function T(t){var n=t[0],a=t[1],r=t[2];return Math.hypot(n,a,r)}function D(t,n,r){var u=new a(3);return u[0]=t,u[1]=n,u[2]=r,u}function F(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t}function L(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t}function V(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t}function Q(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return Math.hypot(a,r,u)}function Y(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return a*a+r*r+u*u}function X(t){var n=t[0],a=t[1],r=t[2];return n*n+a*a+r*r}function Z(t,n){var a=n[0],r=n[1],u=n[2],e=a*a+r*r+u*u;return e>0&&(e=1/Math.sqrt(e)),t[0]=n[0]*e,t[1]=n[1]*e,t[2]=n[2]*e,t}function _(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function B(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2];return t[0]=u*c-e*i,t[1]=e*o-r*c,t[2]=r*i-u*o,t}var N,k=F,U=L,W=V,C=Q,G=Y,H=T,J=X,K=(N=O(),function(t,n,a,r,u,e){var o,i;for(n||(n=3),a||(a=0),i=r?Math.min(r*n+a,t.length):t.length,o=a;o<i;o+=n)N[0]=t[o],N[1]=t[o+1],N[2]=t[o+2],u(N,N,e),t[o]=N[0],t[o+1]=N[1],t[o+2]=N[2];return t}),$=Object.freeze({create:O,clone:function(t){var n=new a(3);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n},length:T,fromValues:D,copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t},set:function(t,n,a,r){return t[0]=n,t[1]=a,t[2]=r,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t},subtract:F,multiply:L,divide:V,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t},distance:Q,squaredDistance:Y,squaredLength:X,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t},normalize:Z,dot:_,cross:B,lerp:function(t,n,a,r){var u=n[0],e=n[1],o=n[2];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t},hermite:function(t,n,a,r,u,e){var o=e*e,i=o*(2*e-3)+1,c=o*(e-2)+e,h=o*(e-1),s=o*(3-2*e);return t[0]=n[0]*i+a[0]*c+r[0]*h+u[0]*s,t[1]=n[1]*i+a[1]*c+r[1]*h+u[1]*s,t[2]=n[2]*i+a[2]*c+r[2]*h+u[2]*s,t},bezier:function(t,n,a,r,u,e){var o=1-e,i=o*o,c=e*e,h=i*o,s=3*e*i,M=3*c*o,f=c*e;return t[0]=n[0]*h+a[0]*s+r[0]*M+u[0]*f,t[1]=n[1]*h+a[1]*s+r[1]*M+u[1]*f,t[2]=n[2]*h+a[2]*s+r[2]*M+u[2]*f,t},random:function(t,n){n=n||1;var a=2*r()*Math.PI,u=2*r()-1,e=Math.sqrt(1-u*u)*n;return t[0]=Math.cos(a)*e,t[1]=Math.sin(a)*e,t[2]=u*n,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[3]*r+a[7]*u+a[11]*e+a[15];return o=o||1,t[0]=(a[0]*r+a[4]*u+a[8]*e+a[12])/o,t[1]=(a[1]*r+a[5]*u+a[9]*e+a[13])/o,t[2]=(a[2]*r+a[6]*u+a[10]*e+a[14])/o,t},transformMat3:function(t,n,a){var r=n[0],u=n[1],e=n[2];return t[0]=r*a[0]+u*a[3]+e*a[6],t[1]=r*a[1]+u*a[4]+e*a[7],t[2]=r*a[2]+u*a[5]+e*a[8],t},transformQuat:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=u*h-e*c,M=e*i-r*h,f=r*c-u*i,l=u*f-e*M,v=e*s-r*f,b=r*M-u*s,m=2*o;return s*=m,M*=m,f*=m,l*=2,v*=2,b*=2,t[0]=i+s+l,t[1]=c+M+v,t[2]=h+f+b,t},rotateX:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0],e[1]=u[1]*Math.cos(r)-u[2]*Math.sin(r),e[2]=u[1]*Math.sin(r)+u[2]*Math.cos(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateY:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[2]*Math.sin(r)+u[0]*Math.cos(r),e[1]=u[1],e[2]=u[2]*Math.cos(r)-u[0]*Math.sin(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateZ:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0]*Math.cos(r)-u[1]*Math.sin(r),e[1]=u[0]*Math.sin(r)+u[1]*Math.cos(r),e[2]=u[2],t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},angle:function(t,n){var a=D(t[0],t[1],t[2]),r=D(n[0],n[1],n[2]);Z(a,a),Z(r,r);var u=_(a,r);return u>1?0:u<-1?Math.PI:Math.acos(u)},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t},str:function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=a[0],i=a[1],c=a[2];return Math.abs(r-o)<=n*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(u-i)<=n*Math.max(1,Math.abs(u),Math.abs(i))&&Math.abs(e-c)<=n*Math.max(1,Math.abs(e),Math.abs(c))},sub:k,mul:U,div:W,dist:C,sqrDist:G,len:H,sqrLen:J,forEach:K});function tt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function nt(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n}function at(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e}function rt(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function ut(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t}function et(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t}function ot(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}function it(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t[3]=n[3]*a[3],t}function ct(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t[3]=n[3]/a[3],t}function ht(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t}function st(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return Math.hypot(a,r,u,e)}function Mt(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return a*a+r*r+u*u+e*e}function ft(t){var n=t[0],a=t[1],r=t[2],u=t[3];return Math.hypot(n,a,r,u)}function lt(t){var n=t[0],a=t[1],r=t[2],u=t[3];return n*n+a*a+r*r+u*u}function vt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e;return o>0&&(o=1/Math.sqrt(o)),t[0]=a*o,t[1]=r*o,t[2]=u*o,t[3]=e*o,t}function bt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]}function mt(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t[3]=i+r*(a[3]-i),t}function dt(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]}function xt(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))}var pt=ot,yt=it,qt=ct,gt=st,At=Mt,wt=ft,Rt=lt,zt=function(){var t=tt();return function(n,a,r,u,e,o){var i,c;for(a||(a=4),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],t[3]=n[i+3],e(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2],n[i+3]=t[3];return n}}(),Pt=Object.freeze({create:tt,clone:nt,fromValues:at,copy:rt,set:ut,add:et,subtract:ot,multiply:it,divide:ct,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t[3]=Math.min(n[3],a[3]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t[3]=Math.max(n[3],a[3]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t},scale:ht,scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},distance:st,squaredDistance:Mt,length:ft,squaredLength:lt,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t},normalize:vt,dot:bt,cross:function(t,n,a,r){var u=a[0]*r[1]-a[1]*r[0],e=a[0]*r[2]-a[2]*r[0],o=a[0]*r[3]-a[3]*r[0],i=a[1]*r[2]-a[2]*r[1],c=a[1]*r[3]-a[3]*r[1],h=a[2]*r[3]-a[3]*r[2],s=n[0],M=n[1],f=n[2],l=n[3];return t[0]=M*h-f*c+l*i,t[1]=-s*h+f*o-l*e,t[2]=s*c-M*o+l*u,t[3]=-s*i+M*e-f*u,t},lerp:mt,random:function(t,n){var a,u,e,o,i,c;n=n||1;do{i=(a=2*r()-1)*a+(u=2*r()-1)*u}while(i>=1);do{c=(e=2*r()-1)*e+(o=2*r()-1)*o}while(c>=1);var h=Math.sqrt((1-i)/c);return t[0]=n*a,t[1]=n*u,t[2]=n*e*h,t[3]=n*o*h,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3];return t[0]=a[0]*r+a[4]*u+a[8]*e+a[12]*o,t[1]=a[1]*r+a[5]*u+a[9]*e+a[13]*o,t[2]=a[2]*r+a[6]*u+a[10]*e+a[14]*o,t[3]=a[3]*r+a[7]*u+a[11]*e+a[15]*o,t},transformQuat:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2],h=a[3],s=h*r+i*e-c*u,M=h*u+c*r-o*e,f=h*e+o*u-i*r,l=-o*r-i*u-c*e;return t[0]=s*h+l*-o+M*-c-f*-i,t[1]=M*h+l*-i+f*-o-s*-c,t[2]=f*h+l*-c+s*-i-M*-o,t[3]=n[3],t},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},str:function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},exactEquals:dt,equals:xt,sub:pt,mul:yt,div:qt,dist:gt,sqrDist:At,len:wt,sqrLen:Rt,forEach:zt});function jt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function It(t,n,a){a*=.5;var r=Math.sin(a);return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=Math.cos(a),t}function St(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,t}function Et(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+o*i,t[1]=u*c+e*i,t[2]=e*c-u*i,t[3]=o*c-r*i,t}function Ot(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c-e*i,t[1]=u*c+o*i,t[2]=e*c+r*i,t[3]=o*c-u*i,t}function Tt(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+u*i,t[1]=u*c-r*i,t[2]=e*c+o*i,t[3]=o*c-e*i,t}function Dt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=Math.exp(e),c=o>0?i*Math.sin(o)/o:0;return t[0]=a*c,t[1]=r*c,t[2]=u*c,t[3]=i*Math.cos(o),t}function Ft(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=o>0?Math.atan2(o,e)/o:0;return t[0]=a*i,t[1]=r*i,t[2]=u*i,t[3]=.5*Math.log(a*a+r*r+u*u+e*e),t}function Lt(t,a,r,u){var e,o,i,c,h,s=a[0],M=a[1],f=a[2],l=a[3],v=r[0],b=r[1],m=r[2],d=r[3];return(o=s*v+M*b+f*m+l*d)<0&&(o=-o,v=-v,b=-b,m=-m,d=-d),1-o>n?(e=Math.acos(o),i=Math.sin(e),c=Math.sin((1-u)*e)/i,h=Math.sin(u*e)/i):(c=1-u,h=u),t[0]=c*s+h*v,t[1]=c*M+h*b,t[2]=c*f+h*m,t[3]=c*l+h*d,t}function Vt(t,n){var a,r=n[0]+n[4]+n[8];if(r>0)a=Math.sqrt(r+1),t[3]=.5*a,a=.5/a,t[0]=(n[5]-n[7])*a,t[1]=(n[6]-n[2])*a,t[2]=(n[1]-n[3])*a;else{var u=0;n[4]>n[0]&&(u=1),n[8]>n[3*u+u]&&(u=2);var e=(u+1)%3,o=(u+2)%3;a=Math.sqrt(n[3*u+u]-n[3*e+e]-n[3*o+o]+1),t[u]=.5*a,a=.5/a,t[3]=(n[3*e+o]-n[3*o+e])*a,t[e]=(n[3*e+u]+n[3*u+e])*a,t[o]=(n[3*o+u]+n[3*u+o])*a}return t}var Qt,Yt,Xt,Zt,_t,Bt,Nt=nt,kt=at,Ut=rt,Wt=ut,Ct=et,Gt=St,Ht=ht,Jt=bt,Kt=mt,$t=ft,tn=$t,nn=lt,an=nn,rn=vt,un=dt,en=xt,on=(Qt=O(),Yt=D(1,0,0),Xt=D(0,1,0),function(t,n,a){var r=_(n,a);return r<-.999999?(B(Qt,Yt,n),H(Qt)<1e-6&&B(Qt,Xt,n),Z(Qt,Qt),It(t,Qt,Math.PI),t):r>.999999?(t[0]=0,t[1]=0,t[2]=0,t[3]=1,t):(B(Qt,n,a),t[0]=Qt[0],t[1]=Qt[1],t[2]=Qt[2],t[3]=1+r,rn(t,t))}),cn=(Zt=jt(),_t=jt(),function(t,n,a,r,u,e){return Lt(Zt,n,u,e),Lt(_t,a,r,e),Lt(t,Zt,_t,2*e*(1-e)),t}),hn=(Bt=m(),function(t,n,a,r){return Bt[0]=a[0],Bt[3]=a[1],Bt[6]=a[2],Bt[1]=r[0],Bt[4]=r[1],Bt[7]=r[2],Bt[2]=-n[0],Bt[5]=-n[1],Bt[8]=-n[2],rn(t,Vt(t,Bt))}),sn=Object.freeze({create:jt,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},setAxisAngle:It,getAxisAngle:function(t,a){var r=2*Math.acos(a[3]),u=Math.sin(r/2);return u>n?(t[0]=a[0]/u,t[1]=a[1]/u,t[2]=a[2]/u):(t[0]=1,t[1]=0,t[2]=0),r},getAngle:function(t,n){var a=Jt(t,n);return Math.acos(2*a*a-1)},multiply:St,rotateX:Et,rotateY:Ot,rotateZ:Tt,calculateW:function(t,n){var a=n[0],r=n[1],u=n[2];return t[0]=a,t[1]=r,t[2]=u,t[3]=Math.sqrt(Math.abs(1-a*a-r*r-u*u)),t},exp:Dt,ln:Ft,pow:function(t,n,a){return Ft(t,n),Ht(t,t,a),Dt(t,t),t},slerp:Lt,random:function(t){var n=r(),a=r(),u=r(),e=Math.sqrt(1-n),o=Math.sqrt(n);return t[0]=e*Math.sin(2*Math.PI*a),t[1]=e*Math.cos(2*Math.PI*a),t[2]=o*Math.sin(2*Math.PI*u),t[3]=o*Math.cos(2*Math.PI*u),t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e,i=o?1/o:0;return t[0]=-a*i,t[1]=-r*i,t[2]=-u*i,t[3]=e*i,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t},fromMat3:Vt,fromEuler:function(t,n,a,r){var u=.5*Math.PI/180;n*=u,a*=u,r*=u;var e=Math.sin(n),o=Math.cos(n),i=Math.sin(a),c=Math.cos(a),h=Math.sin(r),s=Math.cos(r);return t[0]=e*c*s-o*i*h,t[1]=o*i*s+e*c*h,t[2]=o*c*h-e*i*s,t[3]=o*c*s+e*i*h,t},str:function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},clone:Nt,fromValues:kt,copy:Ut,set:Wt,add:Ct,mul:Gt,scale:Ht,dot:Jt,lerp:Kt,length:$t,len:tn,squaredLength:nn,sqrLen:an,normalize:rn,exactEquals:un,equals:en,rotationTo:on,sqlerp:cn,setAxes:hn});function Mn(t,n,a){var r=.5*a[0],u=.5*a[1],e=.5*a[2],o=n[0],i=n[1],c=n[2],h=n[3];return t[0]=o,t[1]=i,t[2]=c,t[3]=h,t[4]=r*h+u*c-e*i,t[5]=u*h+e*o-r*c,t[6]=e*h+r*i-u*o,t[7]=-r*o-u*i-e*c,t}function fn(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t}var ln=Ut;var vn=Ut;function bn(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[4],c=a[5],h=a[6],s=a[7],M=n[4],f=n[5],l=n[6],v=n[7],b=a[0],m=a[1],d=a[2],x=a[3];return t[0]=r*x+o*b+u*d-e*m,t[1]=u*x+o*m+e*b-r*d,t[2]=e*x+o*d+r*m-u*b,t[3]=o*x-r*b-u*m-e*d,t[4]=r*s+o*i+u*h-e*c+M*x+v*b+f*d-l*m,t[5]=u*s+o*c+e*i-r*h+f*x+v*m+l*b-M*d,t[6]=e*s+o*h+r*c-u*i+l*x+v*d+M*m-f*b,t[7]=o*s-r*i-u*c-e*h+v*x-M*b-f*m-l*d,t}var mn=bn;var dn=Jt;var xn=$t,pn=xn,yn=nn,qn=yn;var gn=Object.freeze({create:function(){var t=new a(8);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0),t[3]=1,t},clone:function(t){var n=new a(8);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n},fromValues:function(t,n,r,u,e,o,i,c){var h=new a(8);return h[0]=t,h[1]=n,h[2]=r,h[3]=u,h[4]=e,h[5]=o,h[6]=i,h[7]=c,h},fromRotationTranslationValues:function(t,n,r,u,e,o,i){var c=new a(8);c[0]=t,c[1]=n,c[2]=r,c[3]=u;var h=.5*e,s=.5*o,M=.5*i;return c[4]=h*u+s*r-M*n,c[5]=s*u+M*t-h*r,c[6]=M*u+h*n-s*t,c[7]=-h*t-s*n-M*r,c},fromRotationTranslation:Mn,fromTranslation:function(t,n){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*n[0],t[5]=.5*n[1],t[6]=.5*n[2],t[7]=0,t},fromRotation:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},fromMat4:function(t,n){var r=jt();P(r,n);var u=new a(3);return R(u,n),Mn(t,r,u),t},copy:fn,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},set:function(t,n,a,r,u,e,o,i,c){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t},getReal:ln,getDual:function(t,n){return t[0]=n[4],t[1]=n[5],t[2]=n[6],t[3]=n[7],t},setReal:vn,setDual:function(t,n){return t[4]=n[0],t[5]=n[1],t[6]=n[2],t[7]=n[3],t},getTranslation:function(t,n){var a=n[4],r=n[5],u=n[6],e=n[7],o=-n[0],i=-n[1],c=-n[2],h=n[3];return t[0]=2*(a*h+e*o+r*c-u*i),t[1]=2*(r*h+e*i+u*o-a*c),t[2]=2*(u*h+e*c+a*i-r*o),t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=.5*a[0],c=.5*a[1],h=.5*a[2],s=n[4],M=n[5],f=n[6],l=n[7];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=o*i+u*h-e*c+s,t[5]=o*c+e*i-r*h+M,t[6]=o*h+r*c-u*i+f,t[7]=-r*i-u*c-e*h+l,t},rotateX:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Et(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateY:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Ot(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateZ:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Tt(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateByQuatAppend:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=n[3];return t[0]=i*o+s*r+c*e-h*u,t[1]=c*o+s*u+h*r-i*e,t[2]=h*o+s*e+i*u-c*r,t[3]=s*o-i*r-c*u-h*e,i=n[4],c=n[5],h=n[6],s=n[7],t[4]=i*o+s*r+c*e-h*u,t[5]=c*o+s*u+h*r-i*e,t[6]=h*o+s*e+i*u-c*r,t[7]=s*o-i*r-c*u-h*e,t},rotateByQuatPrepend:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,i=a[4],c=a[5],h=a[6],s=a[7],t[4]=r*s+o*i+u*h-e*c,t[5]=u*s+o*c+e*i-r*h,t[6]=e*s+o*h+r*c-u*i,t[7]=o*s-r*i-u*c-e*h,t},rotateAroundAxis:function(t,a,r,u){if(Math.abs(u)<n)return fn(t,a);var e=Math.hypot(r[0],r[1],r[2]);u*=.5;var o=Math.sin(u),i=o*r[0]/e,c=o*r[1]/e,h=o*r[2]/e,s=Math.cos(u),M=a[0],f=a[1],l=a[2],v=a[3];t[0]=M*s+v*i+f*h-l*c,t[1]=f*s+v*c+l*i-M*h,t[2]=l*s+v*h+M*c-f*i,t[3]=v*s-M*i-f*c-l*h;var b=a[4],m=a[5],d=a[6],x=a[7];return t[4]=b*s+x*i+m*h-d*c,t[5]=m*s+x*c+d*i-b*h,t[6]=d*s+x*h+b*c-m*i,t[7]=x*s-b*i-m*c-d*h,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t},multiply:bn,mul:mn,scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t},dot:dn,lerp:function(t,n,a,r){var u=1-r;return dn(n,a)<0&&(r=-r),t[0]=n[0]*u+a[0]*r,t[1]=n[1]*u+a[1]*r,t[2]=n[2]*u+a[2]*r,t[3]=n[3]*u+a[3]*r,t[4]=n[4]*u+a[4]*r,t[5]=n[5]*u+a[5]*r,t[6]=n[6]*u+a[6]*r,t[7]=n[7]*u+a[7]*r,t},invert:function(t,n){var a=yn(n);return t[0]=-n[0]/a,t[1]=-n[1]/a,t[2]=-n[2]/a,t[3]=n[3]/a,t[4]=-n[4]/a,t[5]=-n[5]/a,t[6]=-n[6]/a,t[7]=n[7]/a,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t[4]=-n[4],t[5]=-n[5],t[6]=-n[6],t[7]=n[7],t},length:xn,len:pn,squaredLength:yn,sqrLen:qn,normalize:function(t,n){var a=yn(n);if(a>0){a=Math.sqrt(a);var r=n[0]/a,u=n[1]/a,e=n[2]/a,o=n[3]/a,i=n[4],c=n[5],h=n[6],s=n[7],M=r*i+u*c+e*h+o*s;t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=(i-r*M)/a,t[5]=(c-u*M)/a,t[6]=(h-e*M)/a,t[7]=(s-o*M)/a}return t},str:function(t){return"quat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=a[0],f=a[1],l=a[2],v=a[3],b=a[4],m=a[5],d=a[6],x=a[7];return Math.abs(r-M)<=n*Math.max(1,Math.abs(r),Math.abs(M))&&Math.abs(u-f)<=n*Math.max(1,Math.abs(u),Math.abs(f))&&Math.abs(e-l)<=n*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(o-v)<=n*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(i-b)<=n*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(c-m)<=n*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(h-d)<=n*Math.max(1,Math.abs(h),Math.abs(d))&&Math.abs(s-x)<=n*Math.max(1,Math.abs(s),Math.abs(x))}});function An(){var t=new a(2);return a!=Float32Array&&(t[0]=0,t[1]=0),t}function wn(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t}function Rn(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t}function zn(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t}function Pn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return Math.hypot(a,r)}function jn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return a*a+r*r}function In(t){var n=t[0],a=t[1];return Math.hypot(n,a)}function Sn(t){var n=t[0],a=t[1];return n*n+a*a}var En=In,On=wn,Tn=Rn,Dn=zn,Fn=Pn,Ln=jn,Vn=Sn,Qn=function(){var t=An();return function(n,a,r,u,e,o){var i,c;for(a||(a=2),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],e(t,t,o),n[i]=t[0],n[i+1]=t[1];return n}}(),Yn=Object.freeze({create:An,clone:function(t){var n=new a(2);return n[0]=t[0],n[1]=t[1],n},fromValues:function(t,n){var r=new a(2);return r[0]=t,r[1]=n,r},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t},set:function(t,n,a){return t[0]=n,t[1]=a,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t},subtract:wn,multiply:Rn,divide:zn,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t},distance:Pn,squaredDistance:jn,length:In,squaredLength:Sn,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},normalize:function(t,n){var a=n[0],r=n[1],u=a*a+r*r;return u>0&&(u=1/Math.sqrt(u)),t[0]=n[0]*u,t[1]=n[1]*u,t},dot:function(t,n){return t[0]*n[0]+t[1]*n[1]},cross:function(t,n,a){var r=n[0]*a[1]-n[1]*a[0];return t[0]=t[1]=0,t[2]=r,t},lerp:function(t,n,a,r){var u=n[0],e=n[1];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t},random:function(t,n){n=n||1;var a=2*r()*Math.PI;return t[0]=Math.cos(a)*n,t[1]=Math.sin(a)*n,t},transformMat2:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u,t[1]=a[1]*r+a[3]*u,t},transformMat2d:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u+a[4],t[1]=a[1]*r+a[3]*u+a[5],t},transformMat3:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[3]*u+a[6],t[1]=a[1]*r+a[4]*u+a[7],t},transformMat4:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[4]*u+a[12],t[1]=a[1]*r+a[5]*u+a[13],t},rotate:function(t,n,a,r){var u=n[0]-a[0],e=n[1]-a[1],o=Math.sin(r),i=Math.cos(r);return t[0]=u*i-e*o+a[0],t[1]=u*o+e*i+a[1],t},angle:function(t,n){var a=t[0],r=t[1],u=n[0],e=n[1],o=a*a+r*r;o>0&&(o=1/Math.sqrt(o));var i=u*u+e*e;i>0&&(i=1/Math.sqrt(i));var c=(a*u+r*e)*o*i;return c>1?0:c<-1?Math.PI:Math.acos(c)},zero:function(t){return t[0]=0,t[1]=0,t},str:function(t){return"vec2("+t[0]+", "+t[1]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]},equals:function(t,a){var r=t[0],u=t[1],e=a[0],o=a[1];return Math.abs(r-e)<=n*Math.max(1,Math.abs(r),Math.abs(e))&&Math.abs(u-o)<=n*Math.max(1,Math.abs(u),Math.abs(o))},len:En,sub:On,mul:Tn,div:Dn,dist:Fn,sqrDist:Ln,sqrLen:Vn,forEach:Qn});t.glMatrix=e,t.mat2=s,t.mat2d=b,t.mat3=q,t.mat4=E,t.quat=sn,t.quat2=gn,t.vec2=Yn,t.vec3=$,t.vec4=Pt,Object.defineProperty(t,"__esModule",{value:!0})});

// ["glMatrix", "mat2", "mat2d", "mat3", "mat4", "quat", "quat2", "vec2", "vec3", "vec4"]
window.glMatrix = glMatrix;
window.mat2 = glMatrix.mat2;
window.mat2d = glMatrix.mat2d;
window.mat3 = glMatrix.mat3;
window.mat4 = glMatrix.mat4;
window.quat = glMatrix.quat;
window.quat2 = glMatrix.quat2;
window.vec2 = glMatrix.vec2;
window.vec3 = glMatrix.vec3;
window.vec4 = glMatrix.vec4;



var CABLES = CABLES || {}; CABLES.build = {"timestamp":1701939081153,"created":"2023-12-07T08:51:21.153Z","git":{"branch":"master","commit":"4bcad0e1f8525d4d59faa49644f419195eaf3c3c","date":"2023-12-07T08:51:03.000Z","message":"live changes"}};
if(!CABLES.exportedPatches)CABLES.exportedPatches={};CABLES.exportedPatches["34XcHM"]={ops:[{id:"fc453f31-15f6-41ea-807a-9468377d228b",uiAttribs:{},portsIn:[{name:"FPS Limit",value:0},{name:"Reduce FPS not focussed",value:true},{name:"Reduce FPS loading",value:0},{name:"Clear",value:true},{name:"ClearAlpha",value:true},{name:"Fullscreen Button",value:false},{name:"Active",value:true},{name:"Hires Displays",value:false},{name:"Pixel Unit index",value:0},{name:"Pixel Unit",value:"Display"}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4",objOut:"fc453f31-15f6-41ea-807a-9468377d228b"}]},{name:"width",value:693},{name:"height",value:398}],objName:"Ops.Gl.MainLoop"},{id:"2d624d54-dd41-4433-9da4-2b7b3d9f4d9d",uiAttribs:{},portsIn:[{name:"posX",value:-1.12},{name:"posY",value:-.35},{name:"posZ",value:-.21},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Execute",portOut:"trigger",objIn:"xmyxgzo0v",objOut:"2d624d54-dd41-4433-9da4-2b7b3d9f4d9d"}]}],objName:"Ops.Gl.Matrix.Transform"},{id:"fa6fa5ac-b1fe-40e1-ba74-2ed0508f0f3f",uiAttribs:{},portsIn:[{name:"Diffuse R",value:.9333333333333333},{name:"Diffuse G",value:.8516666666666667},{name:"Diffuse B",value:.42291666666666666},{name:"Diffuse A",value:1},{name:"Double Sided",value:false},{name:"Colorize Texture",value:false}],portsOut:[{name:"next",links:[{portIn:"render",portOut:"next",objIn:"78adc089-6871-44cf-98db-cb1206de43ca",objOut:"fa6fa5ac-b1fe-40e1-ba74-2ed0508f0f3f"}]}],objName:"Ops.Gl.Phong.LambertMaterial_v2"},{id:"o7cy7pvtk",uiAttribs:{},portsIn:[{name:"posX",value:.74},{name:"posY",value:-.02},{name:"posZ",value:-.21},{name:"scale",value:.55},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Execute",portOut:"trigger",objIn:"fa6fa5ac-b1fe-40e1-ba74-2ed0508f0f3f",objOut:"o7cy7pvtk"}]}],objName:"Ops.Gl.Matrix.Transform"},{id:"xmyxgzo0v",uiAttribs:{},portsIn:[{name:"Diffuse R",value:.9333333333333333},{name:"Diffuse G",value:.42352941176470593},{name:"Diffuse B",value:.5866666666666664},{name:"Diffuse A",value:1},{name:"Double Sided",value:false},{name:"Colorize Texture",value:false}],portsOut:[{name:"next",links:[{portIn:"Render",portOut:"next",objIn:"6d9ca86c-c392-440c-a0c5-b6ddf83688e7",objOut:"xmyxgzo0v"}]}],objName:"Ops.Gl.Phong.LambertMaterial_v2"},{id:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4",uiAttribs:{},portsIn:[{name:"posX",value:.17},{name:"posY",value:.05},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:.25},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"2d624d54-dd41-4433-9da4-2b7b3d9f4d9d",objOut:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4"},{portIn:"render",portOut:"trigger",objIn:"o7cy7pvtk",objOut:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4"},{portIn:"render",portOut:"trigger",objIn:"ee1c5edd-a8f8-484d-b2e9-c4c4995757f3",objOut:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4"},{portIn:"exe",portOut:"trigger",objIn:"284bwrx3o",objOut:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4"}]}],objName:"Ops.Gl.Matrix.Transform"},{id:"78adc089-6871-44cf-98db-cb1206de43ca",uiAttribs:{},portsIn:[{name:"sides",value:32},{name:"rings",value:32},{name:"innerRadius",value:.5},{name:"outerRadius",value:1},{name:"Draw",value:true,title:"Render mesh"}],objName:"Ops.Gl.Meshes.Torus_v3"},{id:"5cff14f3-d869-498d-a2ad-a7126227777a",uiAttribs:{},portsIn:[{name:"Speed",value:30.71},{name:"Play",value:true},{name:"Sync to timeline",value:false}],portsOut:[{name:"Time",links:[{portIn:"value",portOut:"Time",objIn:"ea1ebd3c-ed02-411e-b4df-598f130d99ad",objOut:"5cff14f3-d869-498d-a2ad-a7126227777a"}]}],objName:"Ops.Anim.Timer_v2"},{id:"ea1ebd3c-ed02-411e-b4df-598f130d99ad",uiAttribs:{},portsIn:[{name:"phase",value:0},{name:"frequency",value:.1},{name:"amplitude",value:70},{name:"asine",value:false}],portsOut:[{name:"result",links:[{portIn:"rotY",portOut:"result",objIn:"ea2fd0bb-69e5-4a9b-8f49-0a16cf1191e4",objOut:"ea1ebd3c-ed02-411e-b4df-598f130d99ad"}]}],objName:"Ops.Math.Sine"},{id:"bb3cb89f-d573-43e2-9e44-c32c5818fd8c",uiAttribs:{},portsIn:[{name:"Text",value:"cables"},{name:"Scale",value:1},{name:"Font",value:"Arial"},{name:"align index",value:1},{name:"align",value:"center"},{name:"vertical align index",value:1},{name:"vertical align",value:"Middle"},{name:"Line Height",value:1},{name:"Letter Spacing",value:0},{name:"filter index",value:2},{name:"filter",value:"mipmap"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"a",value:1}],portsOut:[{name:"Total Lines",value:1},{name:"Width",value:1.032374313899449},{name:"Font Available",value:0}],objName:"Ops.Gl.Meshes.TextMesh_v2"},{id:"ee1c5edd-a8f8-484d-b2e9-c4c4995757f3",uiAttribs:{},portsIn:[{name:"posX",value:0},{name:"posY",value:0},{name:"posZ",value:.33},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"bb3cb89f-d573-43e2-9e44-c32c5818fd8c",objOut:"ee1c5edd-a8f8-484d-b2e9-c4c4995757f3"}]}],objName:"Ops.Gl.Matrix.Transform"},{id:"atv6c7y9e",uiAttribs:{},portsIn:[{name:"posX",value:0},{name:"posY",value:.1},{name:"posZ",value:0},{name:"scale",value:.77},{name:"rotX",value:0},{name:"rotY",value:-90},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"e00khpo68",objOut:"atv6c7y9e"}]}],objName:"Ops.Gl.Matrix.Transform"},{id:"oy9g132i3",uiAttribs:{},portsIn:[{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:4},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"Size index",value:0},{name:"Size",value:"Biggest"},{name:"R Source index",value:0},{name:"R Source",value:"R"},{name:"R Value index",value:0},{name:"R Value",value:"Source"},{name:"R Default",value:1},{name:"G Source index",value:1},{name:"G Source",value:"G"},{name:"G Value index",value:0},{name:"G Value",value:"Source"},{name:"G Default",value:1},{name:"B Source index",value:2},{name:"B Source",value:"B"},{name:"B Value index",value:0},{name:"B Value",value:"Source"},{name:"B Default",value:1},{name:"A Source index",value:0},{name:"A Source",value:"R"},{name:"A Value index",value:0},{name:"A Value",value:"Source"},{name:"A Default",value:1}],portsOut:[{name:"Texture",links:[{portIn:"AORM",portOut:"Texture",objIn:"b3r31wogz",objOut:"oy9g132i3"}]}],objName:"Ops.Gl.Textures.CombineTextures"},{id:"73mb508w4",uiAttribs:{},portsIn:[{name:"Name",value:"8"},{name:"Filter index",value:2},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"clamp to edge"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false}],portsOut:[{name:"Texture",links:[{portIn:"Normal map",portOut:"Texture",objIn:"b3r31wogz",objOut:"73mb508w4"}]},{name:"Width",value:2048},{name:"Height",value:2048},{name:"Type",value:"image/jpeg"},{name:"Found",value:true}],objName:"Ops.Gl.GLTF.GltfTexture"},{id:"kyijps8aj",uiAttribs:{},portsIn:[{name:"Name",value:"7"},{name:"Filter index",value:2},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"clamp to edge"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false}],portsOut:[{name:"Texture",links:[{portIn:"R",portOut:"Texture",objIn:"oy9g132i3",objOut:"kyijps8aj"}]},{name:"Width",value:2048},{name:"Height",value:2048},{name:"Type",value:"image/jpeg"},{name:"Found",value:true}],objName:"Ops.Gl.GLTF.GltfTexture"},{id:"3surxfb28",uiAttribs:{},portsIn:[{name:"Name",value:"6"},{name:"Filter index",value:2},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"clamp to edge"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false}],portsOut:[{name:"Texture",links:[{portIn:"Emission",portOut:"Texture",objIn:"b3r31wogz",objOut:"3surxfb28"}]},{name:"Width",value:2048},{name:"Height",value:2048},{name:"Type",value:"image/jpeg"},{name:"Found",value:true}],objName:"Ops.Gl.GLTF.GltfTexture"},{id:"lay0tj0fm",uiAttribs:{},portsIn:[{name:"Name",value:"5"},{name:"Filter index",value:2},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"clamp to edge"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false}],portsOut:[{name:"Texture",links:[{portIn:"B",portOut:"Texture",objIn:"oy9g132i3",objOut:"lay0tj0fm"},{portIn:"G",portOut:"Texture",objIn:"oy9g132i3",objOut:"lay0tj0fm"}]},{name:"Width",value:2048},{name:"Height",value:2048},{name:"Type",value:"image/jpeg"},{name:"Found",value:true}],objName:"Ops.Gl.GLTF.GltfTexture"},{id:"4o639wgwf",uiAttribs:{},portsIn:[{name:"Name",value:"4"},{name:"Filter index",value:2},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"clamp to edge"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false}],portsOut:[{name:"Texture",links:[{portIn:"Albedo",portOut:"Texture",objIn:"b3r31wogz",objOut:"4o639wgwf"}]},{name:"Width",value:2048},{name:"Height",value:2048},{name:"Type",value:"image/jpeg"},{name:"Found",value:true}],objName:"Ops.Gl.GLTF.GltfTexture"},{id:"b3r31wogz",uiAttribs:{},portsIn:[{name:"R",value:1},{name:"G",value:1},{name:"B",value:1},{name:"A",value:1},{name:"Roughness",value:.5},{name:"Metalness",value:0},{name:"Alpha Mode index",value:3},{name:"Alpha Mode",value:"Blend"},{name:"Use Clear Coat",value:false},{name:"Clear Coat Intensity",value:1},{name:"Clear Coat Roughness",value:.614},{name:"Use Normal map for Clear Coat",value:false},{name:"Use Thin Film",value:false},{name:"Thin Film Intensity",value:1},{name:"Thin Film IOR",value:1.3},{name:"Thin Film Thickness (nm)",value:600},{name:"Thickness Tex Min",value:300},{name:"Thickness Tex Max",value:600},{name:"Tonemapping index",value:0},{name:"Tonemapping",value:"sRGB"},{name:"Exposure",value:1},{name:"Emission Intensity",value:1},{name:"Disable geometric roughness",value:false},{name:"Use roughness from normal map",value:false},{name:"Use Vertex Colours",value:false},{name:"Vertex Colour Mode index",value:0},{name:"Vertex Colour Mode",value:"colour"},{name:"Height Intensity",value:1},{name:"Faster heightmapping",value:false},{name:"Num mip levels",value:0},{name:"Diffuse Intensity",value:1},{name:"Specular Intensity",value:1},{name:"Lightmap is RGBE",value:false},{name:"Lightmap Intensity",value:1}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"atv6c7y9e",objOut:"b3r31wogz"}]}],objName:"Ops.Gl.Pbr.PbrMaterial"},{id:"0iokmdu4i",uiAttribs:{},portsIn:[{name:"File",value:"assets/lib_hdr_gravelpath.rgbe.png",display:"file"},{name:"Filter index",value:0},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"repeat"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:"0"},{name:"Data Format index",value:3},{name:"Data Format",value:"RGBA"},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false},{name:"Active",value:true},{name:"Save Memory",value:true}],portsOut:[{name:"Texture",links:[{portIn:"RGBE Environment map",portOut:"Texture",objIn:"2w9ajztqx",objOut:"0iokmdu4i"}]},{name:"Width",value:1024},{name:"Height",value:512},{name:"Aspect Ratio",value:2},{name:"Loaded",value:true},{name:"Loading",value:false}],objName:"Ops.Gl.Texture_v2"},{id:"2w9ajztqx",uiAttribs:{},portsIn:[{name:"Size Irradiance map index",value:2},{name:"Size Irradiance map",value:64},{name:"Size pre-filtered environment index",value:1},{name:"Size pre-filtered environment",value:128},{name:"Size IBL LUT index",value:1},{name:"Size IBL LUT",value:256},{name:"Force 8bit IBL",value:true},{name:"Environment map does not contain RGBE data",value:false},{name:"Rotation",value:0},{name:"Use parallax correction",value:false},{name:"center X",value:0},{name:"center Y",value:1.8},{name:"center Z",value:0},{name:"Box min X",value:-1},{name:"Box min Y",value:-1},{name:"Box min Z",value:-1},{name:"Box max X",value:1},{name:"Box max Y",value:1},{name:"Box max Z",value:1}],portsOut:[{name:"next",links:[{portIn:"Execute",portOut:"next",objIn:"oy9g132i3",objOut:"2w9ajztqx"},{portIn:"render",portOut:"next",objIn:"b3r31wogz",objOut:"2w9ajztqx"}]},{name:"Number of Pre-filtered mip levels",value:7}],objName:"Ops.Gl.Pbr.PbrEnvironmentLight"},{id:"e00khpo68",uiAttribs:{},portsIn:[{name:"data",value:""},{name:"glb File",value:"assets/654a1089765b6f277db8e991_DamagedHelmet.glb",display:"file"},{name:"Draw",value:true},{name:"Camera index",value:0},{name:"Camera",value:"None"},{name:"Animation",value:""},{name:"Center index",value:1},{name:"Center",value:"XYZ"},{name:"Rescale",value:true},{name:"Rescale Size",value:2.5},{name:"Time",value:0},{name:"Sync to timeline",value:false},{name:"Loop",value:true},{name:"Normals Format index",value:0},{name:"Normals Format",value:"XYZ"},{name:"Vertices Format index",value:0},{name:"Vertices Format",value:"XYZ"},{name:"Calc Normals index",value:0},{name:"Calc Normals",value:"Auto"},{name:"Hide Nodes",value:0},{name:"Use Material Properties",value:true},{name:"Active",value:true}],portsOut:[{name:"Next",links:[{portIn:"Render",portOut:"Next",objIn:"73mb508w4",objOut:"e00khpo68"},{portIn:"Render",portOut:"Next",objIn:"kyijps8aj",objOut:"e00khpo68"},{portIn:"Render",portOut:"Next",objIn:"3surxfb28",objOut:"e00khpo68"},{portIn:"Render",portOut:"Next",objIn:"lay0tj0fm",objOut:"e00khpo68"},{portIn:"Render",portOut:"Next",objIn:"4o639wgwf",objOut:"e00khpo68"}]},{name:"Generator",value:"Khronos Blender glTF 2.0 exporter"},{name:"GLTF Version",value:2},{name:"Anim Length",value:0},{name:"Anim Time",value:0},{name:"Loading",value:false}],objName:"Ops.Gl.GLTF.GltfScene_v4"},{id:"sbangax07",uiAttribs:{},portsIn:[{name:"File",value:"assets/lib_hdr_gravelpath.rgbe.png",display:"file"},{name:"Filter index",value:0},{name:"Filter",value:"linear"},{name:"Wrap index",value:2},{name:"Wrap",value:"repeat"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:"0"},{name:"Data Format index",value:3},{name:"Data Format",value:"RGBA"},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false},{name:"Active",value:true},{name:"Save Memory",value:true}],portsOut:[{name:"Texture",links:[{portIn:"Skybox",portOut:"Texture",objIn:"ogzmwvv9a",objOut:"sbangax07"}]},{name:"Width",value:1024},{name:"Height",value:512},{name:"Aspect Ratio",value:2},{name:"Loaded",value:true},{name:"Loading",value:false}],objName:"Ops.Gl.Texture_v2"},{id:"284bwrx3o",uiAttribs:{},portsOut:[{name:"trigger 0",links:[{portIn:"render",portOut:"trigger 0",objIn:"2w9ajztqx",objOut:"284bwrx3o"}]},{name:"trigger 6",links:[{portIn:"Trigger In",portOut:"trigger 6",objIn:"ogzmwvv9a",objOut:"284bwrx3o"}]}],objName:"Ops.Trigger.Sequence"},{id:"ogzmwvv9a",uiAttribs:{},portsIn:[{name:"Render",value:true},{name:"Rotate",value:0},{name:"RGBE Format",value:true},{name:"Exposure",value:1},{name:"Gamma",value:2.2}],objName:"Ops.Gl.CubeMap.Skybox"},{id:"6d9ca86c-c392-440c-a0c5-b6ddf83688e7",uiAttribs:{},portsIn:[{name:"Render Mesh",value:true},{name:"Width",value:1},{name:"Length",value:1},{name:"Height",value:1},{name:"Center",value:true},{name:"Mapping index",value:0},{name:"Mapping",value:"Side"},{name:"Bias",value:0},{name:"Flip X",value:true},{name:"Top",value:true},{name:"Bottom",value:true},{name:"Left",value:true},{name:"Right",value:true},{name:"Front",value:true},{name:"Back",value:true}],objName:"Ops.Patch.P34XcHM.Cube_v2"}],_id:"656b50d16a524e69b1d2063b",export:{time:"2023-12-12 11:27:11",service:"github",exportNumber:1}};if(!CABLES.exportedPatch){CABLES.exportedPatch=CABLES.exportedPatches["34XcHM"]}"use strict";var CABLES=CABLES||{};CABLES.OPS=CABLES.OPS||{};var Ops=Ops||{};Ops.Gl=Ops.Gl||{};Ops.Anim=Ops.Anim||{};Ops.Math=Ops.Math||{};Ops.Patch=Ops.Patch||{};Ops.Gl.Pbr=Ops.Gl.Pbr||{};Ops.Gl.GLTF=Ops.Gl.GLTF||{};Ops.Trigger=Ops.Trigger||{};Ops.Gl.Phong=Ops.Gl.Phong||{};Ops.Gl.Matrix=Ops.Gl.Matrix||{};Ops.Gl.Meshes=Ops.Gl.Meshes||{};Ops.Gl.CubeMap=Ops.Gl.CubeMap||{};Ops.Gl.Textures=Ops.Gl.Textures||{};Ops.Patch.P34XcHM=Ops.Patch.P34XcHM||{};Ops.Gl.MainLoop=function(){CABLES.Op.apply(this,arguments);const i=this;const e={};const t=i.inValue("FPS Limit",0),n=i.outTrigger("trigger"),s=i.outNumber("width"),r=i.outNumber("height"),a=i.inValueBool("Reduce FPS not focussed",true),o=i.inValueBool("Reduce FPS loading"),l=i.inValueBool("Clear",true),h=i.inValueBool("ClearAlpha",true),c=i.inValueBool("Fullscreen Button",false),f=i.inValueBool("Active",true),u=i.inValueBool("Hires Displays",false),g=i.inSwitch("Pixel Unit",["Display","CSS"],"Display");i.onAnimFrame=S;u.onChange=function(){if(u.get())i.patch.cgl.pixelDensity=window.devicePixelRatio;else i.patch.cgl.pixelDensity=1;i.patch.cgl.updateSize();if(CABLES.UI)gui.setLayout()};f.onChange=function(){i.patch.removeOnAnimFrame(i);if(f.get()){i.setUiAttrib({extendTitle:""});i.onAnimFrame=S;i.patch.addOnAnimFrame(i);i.log("adding again!")}else{i.setUiAttrib({extendTitle:"Inactive"})}};const m=i.patch.cgl;let d=0;let p=0;if(!i.patch.cgl)i.uiAttr({error:"No webgl cgl context"});const _=vec3.create();vec3.set(_,0,0,0);const b=vec3.create();vec3.set(b,0,0,-2);c.onChange=A;setTimeout(A,100);let T=null;let E=true;let x=true;window.addEventListener("blur",()=>{E=false});window.addEventListener("focus",()=>{E=true});document.addEventListener("visibilitychange",()=>{x=!document.hidden});C();g.onChange=()=>{s.set(0);r.set(0)};function v(){if(o.get()&&i.patch.loading.getProgress()<1)return 5;if(a.get()){if(!x)return 10;if(!E)return 30}return t.get()}function A(){function e(){if(T)T.style.display="block"}function t(){if(T)T.style.display="none"}i.patch.cgl.canvas.addEventListener("mouseleave",t);i.patch.cgl.canvas.addEventListener("mouseenter",e);if(c.get()){if(!T){T=document.createElement("div");const n=i.patch.cgl.canvas.parentElement;if(n)n.appendChild(T);T.addEventListener("mouseenter",e);T.addEventListener("click",function(e){if(CABLES.UI&&!e.shiftKey)gui.cycleFullscreen();else m.fullScreen()})}T.style.padding="10px";T.style.position="absolute";T.style.right="5px";T.style.top="5px";T.style.width="20px";T.style.height="20px";T.style.cursor="pointer";T.style["border-radius"]="40px";T.style.background="#444";T.style["z-index"]="9999";T.style.display="none";T.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 490 490" style="width:20px;height:20px;" xml:space="preserve" width="512px" height="512px"><g><path d="M173.792,301.792L21.333,454.251v-80.917c0-5.891-4.776-10.667-10.667-10.667C4.776,362.667,0,367.442,0,373.333V480     c0,5.891,4.776,10.667,10.667,10.667h106.667c5.891,0,10.667-4.776,10.667-10.667s-4.776-10.667-10.667-10.667H36.416     l152.459-152.459c4.093-4.237,3.975-10.99-0.262-15.083C184.479,297.799,177.926,297.799,173.792,301.792z" fill="#FFFFFF"/><path d="M480,0H373.333c-5.891,0-10.667,4.776-10.667,10.667c0,5.891,4.776,10.667,10.667,10.667h80.917L301.792,173.792     c-4.237,4.093-4.354,10.845-0.262,15.083c4.093,4.237,10.845,4.354,15.083,0.262c0.089-0.086,0.176-0.173,0.262-0.262     L469.333,36.416v80.917c0,5.891,4.776,10.667,10.667,10.667s10.667-4.776,10.667-10.667V10.667C490.667,4.776,485.891,0,480,0z" fill="#FFFFFF"/><path d="M36.416,21.333h80.917c5.891,0,10.667-4.776,10.667-10.667C128,4.776,123.224,0,117.333,0H10.667     C4.776,0,0,4.776,0,10.667v106.667C0,123.224,4.776,128,10.667,128c5.891,0,10.667-4.776,10.667-10.667V36.416l152.459,152.459     c4.237,4.093,10.99,3.975,15.083-0.262c3.992-4.134,3.992-10.687,0-14.82L36.416,21.333z" fill="#FFFFFF"/><path d="M480,362.667c-5.891,0-10.667,4.776-10.667,10.667v80.917L316.875,301.792c-4.237-4.093-10.99-3.976-15.083,0.261     c-3.993,4.134-3.993,10.688,0,14.821l152.459,152.459h-80.917c-5.891,0-10.667,4.776-10.667,10.667s4.776,10.667,10.667,10.667     H480c5.891,0,10.667-4.776,10.667-10.667V373.333C490.667,367.442,485.891,362.667,480,362.667z" fill="#FFFFFF"/></g></svg>'}else{if(T){T.style.display="none";T.remove();T=null}}}i.onDelete=function(){m.gl.clearColor(0,0,0,0);m.gl.clear(m.gl.COLOR_BUFFER_BIT|m.gl.DEPTH_BUFFER_BIT)};function S(e){if(!f.get())return;if(m.aborted||m.canvas.clientWidth===0||m.canvas.clientHeight===0)return;i.patch.cg=m;if(u.get())i.patch.cgl.pixelDensity=window.devicePixelRatio;const t=performance.now();i.patch.config.fpsLimit=v();if(m.canvasWidth==-1){m.setCanvas(i.patch.config.glCanvasId);return}if(m.canvasWidth!=s.get()||m.canvasHeight!=r.get()){let e=1;if(g.get()=="CSS")e=i.patch.cgl.pixelDensity;s.set(m.canvasWidth/e);r.set(m.canvasHeight/e)}if(CABLES.now()-p>1e3){CGL.fpsReport=CGL.fpsReport||[];if(i.patch.loading.getProgress()>=1&&p!==0)CGL.fpsReport.push(d);d=0;p=CABLES.now()}CGL.MESH.lastShader=null;CGL.MESH.lastMesh=null;m.renderStart(m,_,b);if(l.get()){m.gl.clearColor(0,0,0,1);m.gl.clear(m.gl.COLOR_BUFFER_BIT|m.gl.DEPTH_BUFFER_BIT)}n.trigger();if(CGL.MESH.lastMesh)CGL.MESH.lastMesh.unBind();if(CGL.Texture.previewTexture){if(!CGL.Texture.texturePreviewer)CGL.Texture.texturePreviewer=new CGL.Texture.texturePreview(m);CGL.Texture.texturePreviewer.render(CGL.Texture.previewTexture)}m.renderEnd(m);i.patch.cg=null;if(h.get()){m.gl.clearColor(1,1,1,1);m.gl.colorMask(false,false,false,true);m.gl.clear(m.gl.COLOR_BUFFER_BIT);m.gl.colorMask(true,true,true,true)}if(!m.frameStore.phong)m.frameStore.phong={};d++;i.patch.cgl.profileData.profileMainloopMs=performance.now()-t}function C(){setTimeout(()=>{if(i.patch.getOpsByObjName(i.name).length>1){i.setUiError("multimainloop","there should only be one mainloop op!");i.patch.addEventListener("onOpDelete",C)}else i.setUiError("multimainloop",null,1)},500)}};Ops.Gl.MainLoop.prototype=new CABLES.Op;CABLES.OPS["b0472a1d-db16-4ba6-8787-f300fbdc77bb"]={f:Ops.Gl.MainLoop,objName:"Ops.Gl.MainLoop"};Ops.Gl.Matrix.Transform=function(){CABLES.Op.apply(this,arguments);const n=this;const e={};const t=n.inTrigger("render"),i=n.inValue("posX",0),s=n.inValue("posY",0),r=n.inValue("posZ",0),a=n.inValue("scale",1),o=n.inValue("rotX",0),l=n.inValue("rotY",0),h=n.inValue("rotZ",0),c=n.outTrigger("trigger");n.setPortGroup("Rotation",[o,l,h]);n.setPortGroup("Position",[i,s,r]);n.setPortGroup("Scale",[a]);n.setUiAxisPorts(i,s,r);n.toWorkPortsNeedToBeLinked(t,c);const f=vec3.create();const u=vec3.create();const g=mat4.create();mat4.identity(g);let m=false,d=false,p=true,_=true,b=true;o.onChange=l.onChange=h.onChange=S;i.onChange=s.onChange=r.onChange=v;a.onChange=A;t.onTriggered=function(){let e=false;if(p){E();e=true}if(_){x();e=true}if(b)e=true;if(e)T();const t=n.patch.cg||n.patch.cgl;t.pushModelMatrix();mat4.multiply(t.mMatrix,t.mMatrix,g);c.trigger();t.popModelMatrix();if(CABLES.UI&&CABLES.UI.showCanvasTransforms)gui.setTransform(n.id,i.get(),s.get(),r.get());if(n.isCurrentUiOp())gui.setTransformGizmo({posX:i,posY:s,posZ:r})};n.transform3d=function(){return{pos:[i,s,r]}};function T(){mat4.identity(g);if(d)mat4.translate(g,g,f);if(o.get()!==0)mat4.rotateX(g,g,o.get()*CGL.DEG2RAD);if(l.get()!==0)mat4.rotateY(g,g,l.get()*CGL.DEG2RAD);if(h.get()!==0)mat4.rotateZ(g,g,h.get()*CGL.DEG2RAD);if(m)mat4.scale(g,g,u);b=false}function E(){d=false;if(i.get()!==0||s.get()!==0||r.get()!==0)d=true;vec3.set(f,i.get(),s.get(),r.get());p=false}function x(){m=true;vec3.set(u,a.get(),a.get(),a.get());_=false}function v(){p=true}function A(){_=true}function S(){b=true}T()};Ops.Gl.Matrix.Transform.prototype=new CABLES.Op;CABLES.OPS["650baeb1-db2d-4781-9af6-ab4e9d4277be"]={f:Ops.Gl.Matrix.Transform,objName:"Ops.Gl.Matrix.Transform"};Ops.Gl.Phong.LambertMaterial_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={lambert_frag:"{{MODULES_HEAD}}\n\n#define AMBIENT 0\n#define POINT 1\n#define DIRECTIONAL 2\n#define SPOT 3\n\nIN vec3 norm;\nIN vec4 modelPos;\n\n// UNI mat4 normalMatrix;\nIN mat3 normalMatrix; // when instancing...\n\nIN vec2 texCoord;\n\nIN vec3 mvNormal;\nIN vec3 mvTangent;\nIN vec3 mvBiTangent;\n\nUNI vec4 materialColor;//r,g,b,a;\n\nstruct Light {\n    vec3 position;\n    vec3 color;\n    // * SPOT LIGHT * //\n    #ifdef HAS_SPOT\n        vec3 conePointAt;\n        #define COSCONEANGLE x\n        #define COSCONEANGLEINNER y\n        #define SPOTEXPONENT z\n        vec3 spotProperties;\n    #endif\n\n    #define INTENSITY x\n    #define ATTENUATION y\n    #define FALLOFF z\n    #define RADIUS w\n    vec4 lightProperties;\n\n    int type;\n    int castLight;\n    #define CASTLIGHT x\n    #define TYPE y\n    ivec2 castLightType;\n};\n#ifdef HAS_TEXTURES\n    #ifdef HAS_TEXTURE_DIFFUSE\n        UNI sampler2D texDiffuse;\n    #endif\n#endif\n\nUNI Light lights[NUM_LIGHTS];\n\n// * UTILITY FUNCTIONS */\nfloat when_gt(float x, float y) { return max(sign(x - y), 0.0); } // comparator function\nfloat when_eq(float x, float y) { return 1. - abs(sign(x - y)); } // comparator function\nfloat when_neq(float x, float y) { return abs(sign(x - y)); } // comparator function\n\n\n// * LIGHT CALCULATIONS */\nfloat CalculateFalloff(float radius, float falloff, float distLight)\n{\n    float denom = distLight / radius + 1.0;\n    float attenuation = 1.0 / (denom*denom);\n    float t = (attenuation - 0.1) / (1.0 - 0.1);\n\n    t = t * (20.0 * (1. - falloff) * 20.0 * (1. - falloff));\n\n    return min(1.0,max(t, 0.0));\n}\n\nfloat Falloff2(vec3 lightDirection, float falloff) {\n    float distanceSquared = dot(lightDirection, lightDirection);\n    float factor = distanceSquared * falloff;\n    float smoothFactor = clamp(1. - factor * factor, 0., 1.);\n    float attenuation = smoothFactor * smoothFactor;\n\n    return attenuation * 1. / max(distanceSquared, 0.00001);\n}\n\n#ifdef HAS_SPOT\n    float CalculateSpotLightEffect(vec3 lightPosition, vec3 conePointAt, float cosConeAngle, float cosConeAngleInner, float spotExponent, vec3 lightDirection) {\n        vec3 spotLightDirection = normalize(lightPosition-conePointAt);\n        float spotAngle = dot(-lightDirection, spotLightDirection);\n        float epsilon = cosConeAngle - cosConeAngleInner;\n\n        float spotIntensity = clamp((spotAngle - cosConeAngle)/epsilon, 0.0, 1.0);\n        spotIntensity = pow(spotIntensity, max(0.01, spotExponent));\n\n        return max(0., spotIntensity);\n    }\n#endif\nvec3 CalculateDiffuseColor(vec3 lightDirection, vec3 normal, vec3 lightColor, vec3 materialColor, inout float lambert) {\n    lambert = clamp(dot(lightDirection, normal), 0., 1.);\n    vec3 diffuseColor = lambert * lightColor * materialColor;\n    return diffuseColor;\n}\n\n\n// MAIN\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n\n    vec4 col=vec4(0.0);\n    vec3 normal = normalize(mat3(normalMatrix)*norm);\n\n    #ifdef DOUBLE_SIDED\n        if(!gl_FrontFacing) normal = normal*-1.0;\n    #endif\n\n    vec3 matColor = materialColor.rgb;\n\n    #ifdef HAS_TEXTURES\n        #ifdef HAS_TEXTURE_DIFFUSE\n            matColor = texture(texDiffuse, texCoord).rgb;\n            #ifdef COLORIZE_TEXTURE\n                matColor *= materialColor.rgb;\n            #endif\n        #endif\n    #endif\n\n    for(int l=0;l<NUM_LIGHTS;l++) {\n        if (lights[l].castLightType.TYPE == AMBIENT) {\n            col.rgb += lights[l].lightProperties.INTENSITY * lights[l].color;\n        } else {\n            if (lights[l].castLightType.CASTLIGHT == 0) continue;\n\n            vec3 lightModelDiff= lights[l].position - modelPos.xyz;\n            vec3 lightDirection = normalize(lightModelDiff);\n\n            if (lights[l].castLightType.TYPE == DIRECTIONAL) lightDirection = lights[l].position;\n\n            float lambert = 1.; // inout variable\n            vec3 diffuseColor = CalculateDiffuseColor(lightDirection, normal, lights[l].color, matColor, lambert);\n\n            if (lights[l].castLightType.TYPE != DIRECTIONAL) diffuseColor *= Falloff2(lightDirection, lights[l].lightProperties.FALLOFF);\n\n            #ifdef HAS_SPOT\n                if (lights[l].castLightType.TYPE == SPOT) diffuseColor *= CalculateSpotLightEffect(\n                    lights[l].position, lights[l].conePointAt, lights[l].spotProperties.COSCONEANGLE,\n                    lights[l].spotProperties.COSCONEANGLEINNER, lights[l].spotProperties.SPOTEXPONENT,\n                    lightDirection\n                );\n            #endif\n\n            diffuseColor *= lights[l].lightProperties.INTENSITY;\n            col.rgb += diffuseColor;\n        }\n    }\n\n\n    col.a = materialColor.a;\n\n    {{MODULE_COLOR}}\n\n    // col.rgb=norm.rgb;\n\n    outColor = col;\n}\n",lambert_vert:"#define TEX_REPEAT_X x;\n#define TEX_REPEAT_Y y;\n#define TEX_OFFSET_X z;\n#define TEX_OFFSET_Y w;\n\nIN vec3 vPosition;\nIN vec3 attrVertNormal;\nIN vec2 attrTexCoord;\n\nIN vec3 attrTangent;\nIN vec3 attrBiTangent;\nIN float attrVertIndex;\n\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\n\nOUT vec3 norm;\nOUT mat4 mvMatrix;\nOUT mat3 normalMatrix;\nOUT vec4 modelPos;\nOUT vec2 texCoord;\n{{MODULES_HEAD}}\n\nmat3 transposeMat3(mat3 m)\n{\n    return mat3(\n        m[0][0], m[1][0], m[2][0],\n        m[0][1], m[1][1], m[2][1],\n        m[0][2], m[1][2], m[2][2]);\n}\n\nmat3 inverseMat3(mat3 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n    float b01 = a22 * a11 - a12 * a21;\n    float b11 = -a22 * a10 + a12 * a20;\n    float b21 = a21 * a10 - a11 * a20;\n\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n        b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n        b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nvoid main()\n{\n    vec4 pos = vec4( vPosition, 1. );\n    mat4 mMatrix=modelMatrix;\n    vec3 tangent=attrTangent,\n        bitangent=attrBiTangent;\n\n    texCoord=attrTexCoord;\n    texCoord.y = 1. - texCoord.y;\n\n    norm=attrVertNormal;\n\n    {{MODULE_VERTEX_POSITION}}\n\n    normalMatrix = transposeMat3(inverseMat3(mat3(mMatrix)));\n\n\n    // this needs only to be done when instancing....\n\n    mvMatrix=viewMatrix*mMatrix;\n    modelPos=mMatrix*pos;\n\n    gl_Position = projMatrix * mvMatrix * pos;\n}\n"};const i={ambient:0,point:1,directional:2,spot:3};const n=e.inTrigger("Execute"),s=e.inValueSlider("Diffuse R",Math.random()),r=e.inValueSlider("Diffuse G",Math.random()),a=e.inValueSlider("Diffuse B",Math.random()),o=e.inValueSlider("Diffuse A",1);s.setUiAttribs({colorPick:true});e.setPortGroup("Diffuse Color",[s,r,a,o]);const l=e.inBool("Double Sided",false);l.setUiAttribs({hidePort:true});l.onChange=function(){p.toggleDefine("DOUBLE_SIDED",l.get())};e.setPortGroup("Material Properties",[l]);e.toWorkPortsNeedToBeLinked(n);e.toWorkShouldNotBeChild("Ops.Gl.TextureEffects.ImageCompose",CABLES.OP_PORT_TYPE_FUNCTION);const h=e.inTexture("Diffuse Texture");let c=null;const f=null;h.onChange=g;const u=e.inBool("Colorize Texture",false);u.onChange=function(){p.toggleDefine("COLORIZE_TEXTURE",u.get())};e.setPortGroup("Texture",[h,u]);function g(){if(h.get()){if(!p.hasDefine("HAS_TEXTURE_DIFFUSE")){p.define("HAS_TEXTURE_DIFFUSE");if(!c)c=new CGL.Uniform(p,"t","texDiffuse",0)}}else{p.removeUniform("texDiffuse");p.removeDefine("HAS_TEXTURE_DIFFUSE");c=null}}const m=e.outTrigger("next");const d=e.patch.cgl;const p=new CGL.Shader(d,"LambertMaterial");p.define("NUM_LIGHTS","1");const _=new CGL.Uniform(p,"4f","materialColor",s,r,a,o);p.uniformColorDiffuse=_;const b=e.outObject("Shader");b.set(p);const T=d.maxUniformsFrag;const E=T===64?6:16;p.setSource(t.lambert_vert,t.lambert_frag);const x=[{type:"point",position:[0,2,1],intensity:1,attenuation:0,falloff:.5,radius:80,castLight:1}];p.define("MAX_LIGHTS",E.toString());let v=null;function A(){v={color:new CGL.Uniform(p,"3f","lights[0].color",[1,1,1]),position:new CGL.Uniform(p,"3f","lights[0].position",[0,11,0]),lightProperties:new CGL.Uniform(p,"4f","lights[0].lightProperties",[1,1,1,1]),conePointAt:new CGL.Uniform(p,"3f","lights[0].conePointAt",vec3.create()),spotProperties:new CGL.Uniform(p,"3f","lights[0].spotProperties",[0,0,0,0]),castLightType:new CGL.Uniform(p,"2i","lights[0].castLightType",[0,0])}}function S(e){p.define("NUM_LIGHTS","1");if(p.hasDefine("HAS_SPOT")){p.removeDefine("HAS_SPOT")}if(p.hasDefine("HAS_DIRECTIONAL")){p.removeDefine("HAS_DIRECTIONAL")}if(p.hasDefine("HAS_AMBIENT")){p.removeDefine("HAS_AMBIENT")}if(!p.hasDefine("HAS_POINT"))p.define("HAS_POINT");v.position.setValue(e.position);v.color.setValue(e.color);v.lightProperties.setValue([e.intensity,e.attenuation,e.falloff,e.radius]);v.castLightType.setValue([1,i[e.type]]);v.conePointAt.setValue(e.conePointAt);v.spotProperties.setValue([e.cosConeAngle,e.cosConeAngleInner,e.spotExponent])}const C=[];const I={directional:false,spot:false,ambient:false,point:false};function R(t){for(let e=0;e<C.length;e+=1){C[e]=null}I.directional=false;I.spot=false;I.ambient=false;I.point=false;for(let e=0;e<t.length;e+=1){if(e===E)return;C[e]=null;const n=t[e];const i=n.type;if(!I[i])I[i]=true;if(!C[e]){C[e]={color:new CGL.Uniform(p,"3f","lights["+e+"].color",[1,1,1]),position:new CGL.Uniform(p,"3f","lights["+e+"].position",[0,11,0]),lightProperties:new CGL.Uniform(p,"4f","lights["+e+"].lightProperties",[1,1,1,1]),conePointAt:new CGL.Uniform(p,"3f","lights["+e+"].conePointAt",vec3.create()),spotProperties:new CGL.Uniform(p,"3f","lights["+e+"].spotProperties",[0,0,0,0]),castLightType:new CGL.Uniform(p,"2i","lights["+e+"].castLightType",[0,0])}}}for(let e=0,t=Object.keys(I);e<t.length;e+=1){const s=t[e];p.toggleDefine("HAS_"+s.toUpperCase(),I[s])}}function L(t){for(let e=0;e<t.length;e+=1){const n=t[e];n.isUsed=true;C[e].position.setValue(n.position);C[e].color.setValue(n.color);C[e].lightProperties.setValue([n.intensity,n.attenuation,n.falloff,n.radius]);C[e].conePointAt.setValue(n.conePointAt);C[e].spotProperties.setValue([n.cosConeAngle,n.cosConeAngleInner,n.spotExponent]);C[e].castLightType.setValue([Number(n.castLight),i[n.type]])}}let O=0;function M(e){if(e.length!==O){R(e);O=e.length;p.define("NUM_LIGHTS",""+Math.max(O,1));L(e)}else{L(e)}}const y=mat4.create();function N(){if(!d.frameStore.lightStack||!d.frameStore.lightStack.length){if(!v)A();mat4.invert(y,d.vMatrix);x[0].position=[y[12],y[13],y[14]];S(x[0]);O=-1}else{if(p){if(d.frameStore.lightStack){if(d.frameStore.lightStack.length){v=null;M(d.frameStore.lightStack)}}}}}n.onTriggered=function(){if(!p){e.log("lambert has no shader...");return}if(d.frameStore.lightStack){if(d.frameStore.lightStack.length===0)e.setUiError("deflight","Default light is enabled. Please add lights to your patch to make this warning disappear.",1);else e.setUiError("deflight",null)}d.pushShader(p);p.popTextures();N();if(h.get())p.pushTexture(c,h.get().tex);m.trigger();d.popShader()};g()};Ops.Gl.Phong.LambertMaterial_v2.prototype=new CABLES.Op;CABLES.OPS["d69316f1-bde9-4645-8280-c635a8982e0d"]={f:Ops.Gl.Phong.LambertMaterial_v2,objName:"Ops.Gl.Phong.LambertMaterial_v2"};Ops.Gl.Meshes.Torus_v3=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("render"),s=e.inValue("sides",32),r=e.inValue("rings",32),a=e.inValue("innerRadius",.5),o=e.inValue("outerRadius",1),i=e.inBool("Draw",true),l=e.outTrigger("trigger"),g=e.outObject("geometry");i.setUiAttribs({title:"Render mesh"});const m=vec3.fromValues(0,1,0),d=vec3.fromValues(1,0,0);let p=vec3.create(),_=vec3.create();g.ignoreValueSerialize=true;let b=e.patch.cgl;let T=null;let E=null;let x=0,v=0,A=0;let h=true;r.onChange=s.onChange=a.onChange=o.onChange=function(){h=true};n.onTriggered=function(){if(h)c();if(i.get()&&T!==null)T.render(b.getShader());l.trigger()};function c(){let e=Math.round(r.get())+1;let t=Math.round(s.get())+1;if(e<3)e=3;if(t<3)t=3;let n=a.get();let i=o.get();f(n,i,e,t);h=false}function S(e,t){let n;let i=Math.abs(e);let s=2*Math.PI/(e-1);if(t)s=-s;let r=[];let a=[];r[0]=0;a[0]=1;for(n=1;n<i-1;n++){r[n]=Math.sin(s*n);a[n]=Math.cos(s*n)}r[i-1]=0;a[i-1]=1;return{cost:a,sint:r}}function f(n,i,s,r){let a=S(s,false);let o=S(r,true);let l;E=new CGL.Geometry("torus");let h=[];let c=[];let f=[];let u=[];for(x=0;x<s;x++){for(v=0;v<r;v++){let e=3*(x*r+v);let t=2*(x*r+v);E.vertices[e]=a.cost[x]*(i+o.cost[v]*n);E.vertices[e+1]=a.sint[x]*(i+o.cost[v]*n);E.vertices[e+2]=o.sint[v]*n;f[e]=p[0]=a.cost[x]*o.cost[v];f[e+1]=p[1]=a.sint[x]*o.cost[v];f[e+2]=p[2]=o.sint[v];if(Math.abs(p[1])==1)l=d;else l=m;vec3.cross(_,p,l);vec3.normalize(_,_);h[e]=_[0];h[e+1]=_[1];h[e+2]=_[2];vec3.cross(_,_,p);c[e]=_[0];c[e+1]=_[1];c[e+2]=_[2];u[t]=x/(s-1);u[t+1]=v/(r-1)}}for(x=0,A=0;x<s-1;x++){for(v=0;v<r-1;v++){let e=x*r+v;E.verticesIndices[A++]=e;E.verticesIndices[A++]=e+1;E.verticesIndices[A++]=e+r;E.verticesIndices[A++]=e+1;E.verticesIndices[A++]=e+r+1;E.verticesIndices[A++]=e+r}}if(E.biTangents.length==c.length)E.biTangents.set(c);else E.biTangents=new Float32Array(c);if(E.tangents.length==h.length)E.tangents.set(h);else E.tangents=new Float32Array(h);if(E.vertexNormals.length==f.length)E.vertexNormals.set(f);else E.vertexNormals=new Float32Array(f);E.setTexCoords(u);g.set(null);g.set(E);if(!T)T=new CGL.Mesh(b,E);else T.setGeom(E)}};Ops.Gl.Meshes.Torus_v3.prototype=new CABLES.Op;CABLES.OPS["bfe60760-6cf6-43d0-96da-b4848c2b146a"]={f:Ops.Gl.Meshes.Torus_v3,objName:"Ops.Gl.Meshes.Torus_v3"};Ops.Anim.Timer_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const r=e.inValue("Speed",1),n=e.inValueBool("Play",true),i=e.inTriggerButton("Reset"),s=e.inValueBool("Sync to timeline",false),a=e.outNumber("Time");e.setPortGroup("Controls",[n,i,r]);const o=new CABLES.Timer;let l=null;let h=0;let c=false;n.onChange=f;f();function f(){if(n.get()){o.play();e.patch.addOnAnimFrame(e)}else{o.pause();e.patch.removeOnAnimFrame(e)}}i.onTriggered=u;function u(){h=0;l=null;o.setTime(0);a.set(0)}s.onChange=function(){c=s.get();n.setUiAttribs({greyout:c});i.setUiAttribs({greyout:c})};e.onAnimFrame=function(e,t,n){if(o.isPlaying()){if(CABLES.overwriteTime!==undefined){a.set(CABLES.overwriteTime*r.get())}else if(c){a.set(e*r.get())}else{o.update();const i=o.get();if(l===null){l=i;return}const s=Math.abs(i-l);l=i;h+=s*r.get();if(h!=h)h=0;a.set(h)}}}};Ops.Anim.Timer_v2.prototype=new CABLES.Op;CABLES.OPS["aac7f721-208f-411a-adb3-79adae2e471a"]={f:Ops.Anim.Timer_v2,objName:"Ops.Anim.Timer_v2"};Ops.Math.Sine=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValue("value"),i=e.inValue("phase",0),s=e.inValue("frequency",1),r=e.inValue("amplitude",1),a=e.inValueBool("asine",false),o=e.outNumber("result");let l=Math.sin;s.onChange=r.onChange=i.onChange=n.onChange=function(){o.set(r.get()*l(n.get()*s.get()+i.get()))};a.onChange=function(){if(a.get())l=Math.asin;else l=Math.sin}};Ops.Math.Sine.prototype=new CABLES.Op;CABLES.OPS["d24da018-9f3d-428b-85c9-6ff14d77548b"]={f:Ops.Math.Sine,objName:"Ops.Math.Sine"};Ops.Gl.Meshes.TextMesh_v2=function(){CABLES.Op.apply(this,arguments);const t=this;const e={textmesh_frag:"UNI sampler2D tex;\n#ifdef DO_MULTEX\n    UNI sampler2D texMul;\n#endif\n#ifdef DO_MULTEX_MASK\n    UNI sampler2D texMulMask;\n#endif\nIN vec2 texCoord;\nIN vec2 texPos;\nUNI float r;\nUNI float g;\nUNI float b;\nUNI float a;\n\nvoid main()\n{\n    vec4 col=texture(tex,texCoord);\n    col.a=col.r;\n    col.r*=r;\n    col.g*=g;\n    col.b*=b;\n    col*=a;\n\n    if(col.a==0.0)discard;\n\n    #ifdef DO_MULTEX\n        col*=texture(texMul,texPos);\n    #endif\n\n    #ifdef DO_MULTEX_MASK\n        col*=texture(texMulMask,texPos).r;\n    #endif\n\n    outColor=col;\n}",textmesh_vert:"UNI sampler2D tex;\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\nUNI float scale;\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN mat4 instMat;\nIN vec2 attrTexOffsets;\nIN vec2 attrTexSize;\nIN vec2 attrTexPos;\nOUT vec2 texPos;\n\nOUT vec2 texCoord;\n\nvoid main()\n{\n    texCoord=(attrTexCoord*(attrTexSize)) + attrTexOffsets;\n    mat4 instMVMat=instMat;\n    instMVMat[3][0]*=scale;\n\n    texPos=attrTexPos;\n\n    vec4 vert=vec4( vPosition.x*(attrTexSize.x/attrTexSize.y)*scale,vPosition.y*scale,vPosition.z*scale, 1. );\n\n    mat4 mvMatrix=viewMatrix * modelMatrix * instMVMat;\n\n    gl_Position = projMatrix * mvMatrix * vert;\n}\n"};const n=t.inTrigger("Render"),b=t.inString("Text","cables"),i=t.inValueFloat("Scale",1),c=t.inString("Font","Arial"),T=t.inValueSelect("align",["left","center","right"],"center"),s=t.inValueSelect("vertical align",["Top","Middle","Bottom"],"Middle"),E=t.inValueFloat("Line Height",1),x=t.inValueFloat("Letter Spacing"),o=t.inSwitch("filter",["nearest","linear","mipmap"],"mipmap"),l=t.inSwitch("Anisotropic",[0,1,2,4,8,16],0),r=t.inTexture("Texture Color"),a=t.inTexture("Texture Mask"),U=t.outTrigger("Next"),v=t.outTexture("texture"),G=t.outNumber("Total Lines",0),B=t.outNumber("Width",0),V=t.outBoolNum("Font Available",0);const A=t.patch.cgl;t.toWorkPortsNeedToBeLinked(n);t.setPortGroup("Masking",[r,a]);const f=1024;let h=false;let u=true;T.onChange=b.onChange=E.onChange=D;function D(){u=true}let g=null;CABLES.OpTextureMeshCanvas={};let m=0;const k=null;let S=null;let C=true;let I=true;l.onChange=o.onChange=()=>{R().texture=null;I=true};a.onChange=r.onChange=function(){p.toggleDefine("DO_MULTEX",r.get());p.toggleDefine("DO_MULTEX_MASK",a.get())};v.set(null);c.onChange=function(){I=true;C=true;d()};t.patch.on("fontLoaded",e=>{if(e==c.get()){I=true;C=true}});function d(){const e=h;try{h=document.fonts.check('20px "'+c.get()+'"')}catch(e){t.logError(e)}if(!e&&h){V.set(true);I=true;C=true}if(!h)setTimeout(d,250)}s.onChange=function(){if(s.get()=="Middle")m=0;else if(s.get()=="Top")m=1;else if(s.get()=="Bottom")m=2};function R(){g=""+c.get();if(CABLES.OpTextureMeshCanvas.hasOwnProperty(g))return CABLES.OpTextureMeshCanvas[g];const e=document.createElement("canvas");e.dataset.font=c.get();e.id="texturetext_"+CABLES.generateUUID();e.style.display="none";const t=document.getElementsByTagName("body")[0];t.appendChild(e);const n=e.getContext("2d");CABLES.OpTextureMeshCanvas[g]={ctx:n,canvas:e,chars:{},characters:"",fontSize:320};return CABLES.OpTextureMeshCanvas[g]}t.onDelete=function(){if(g&&CABLES.OpTextureMeshCanvas[g])CABLES.OpTextureMeshCanvas[g].canvas.remove()};const p=new CGL.Shader(A,"TextMesh");p.setSource(e.textmesh_vert,e.textmesh_frag);const j=new CGL.Uniform(p,"t","tex",0);const X=new CGL.Uniform(p,"t","texMul",1);const H=new CGL.Uniform(p,"t","texMulMask",2);const z=new CGL.Uniform(p,"f","scale",i);const _=t.inValueSlider("r",1),L=t.inValueSlider("g",1),O=t.inValueSlider("b",1),M=t.inValueSlider("a",1),W=new CGL.Uniform(p,"f","r",_),Y=new CGL.Uniform(p,"f","g",L),q=new CGL.Uniform(p,"f","b",O),K=new CGL.Uniform(p,"f","a",M);_.setUiAttribs({colorPick:true});t.setPortGroup("Display",[i,c]);t.setPortGroup("Alignment",[T,s]);t.setPortGroup("Color",[_,L,O,M]);let y=0;const N=vec3.create();let P=-1;let F=false;n.onTriggered=function(){if(u){Q();u=false}const e=R();if(e.lastChange!=P){C=true;P=e.lastChange}if(I)Z();if(C)Q();if(S&&S.numInstances>0){A.pushBlendMode(CGL.BLEND_NORMAL,true);A.pushShader(p);A.setTexture(0,v.get().tex);const t=r.get();if(t)A.setTexture(1,t.tex);const n=a.get();if(n)A.setTexture(2,n.tex);if(m===2)vec3.set(N,0,y,0);else if(m===1)vec3.set(N,0,0,0);else if(m===0)vec3.set(N,0,y/2,0);N[1]-=E.get();A.pushModelMatrix();mat4.translate(A.mMatrix,A.mMatrix,N);if(!F)S.render(A.getShader());A.popModelMatrix();A.setTexture(0,null);A.popShader();A.popBlendMode()}U.trigger()};x.onChange=function(){C=true};function Q(){const e=String(b.get()+"");if(!v.get())return;const r=R();if(!r.geom){r.geom=new CGL.Geometry("textmesh");r.geom.vertices=[1,1,0,0,1,0,1,0,0,0,0,0];r.geom.texCoords=new Float32Array([1,1,0,1,1,0,0,0]);r.geom.verticesIndices=[0,1,2,2,1,3]}if(!S)S=new CGL.Mesh(A,r.geom);const a=e.split("\n");G.set(a.length);const o=[];const l=[];const h=[];const c=[];let f=0;I=false;const u=mat4.create();let g=0;for(let s=0;s<a.length;s++){const m=a[s];const d=m.length;let t=0;let n=0;let i=0;for(let e=0;e<d;e++){const p=m.substring(e,e+1);const _=r.chars[String(p)];if(_){i+=_.texCoordWidth/_.texCoordHeight;i+=x.get()}}i-=x.get();y=0;if(T.get()=="left")n=0;else if(T.get()=="right")n=i;else if(T.get()=="center")n=i/2;y=(s+1)*E.get();for(let e=0;e<d;e++){const p=m.substring(e,e+1);const _=r.chars[String(p)];if(!_){I=true;return}else{c.push(t/i*.99+.005,(1-s/(a.length-1))*.99+.005);l.push(_.texCoordX,1-_.texCoordY-_.texCoordHeight);h.push(_.texCoordWidth,_.texCoordHeight);mat4.identity(u);mat4.translate(u,u,[t-n,0-s*E.get(),0]);t+=_.texCoordWidth/_.texCoordHeight+x.get();g=Math.max(g,t-n);o.push(Array.prototype.slice.call(u));f++}}}const t=[].concat.apply([],o);F=false;if(t.length==0)F=true;S.numInstances=t.length/16;if(S.numInstances==0){F=true;return}B.set(g*i.get());S.setAttribute("instMat",new Float32Array(t),16,{instanced:true});S.setAttribute("attrTexOffsets",new Float32Array(l),2,{instanced:true});S.setAttribute("attrTexSize",new Float32Array(h),2,{instanced:true});S.setAttribute("attrTexPos",new Float32Array(c),2,{instanced:true});C=false;if(I)Z()}function w(t,n){const i=R();if(!n)i.chars={};const s=i.ctx;s.font=t+"px "+c.get();s.textAlign="left";let r=0;let a=0;const o=t*1.4;const e={fits:true};for(let e=0;e<i.characters.length;e++){const l=String(i.characters.substring(e,e+1));const h=s.measureText(l).width;if(a+h>=f){r+=o+2;a=0}if(!n){i.chars[l]={str:l,texCoordX:a/f,texCoordY:r/f,texCoordWidth:h/f,texCoordHeight:o/f};s.fillText(l,a,r+t)}a+=h+12}if(r>f-o){e.fits=false}e.spaceLeft=f-r;return e}function Z(){let e=CGL.Texture.FILTER_LINEAR;if(o.get()=="nearest")e=CGL.Texture.FILTER_NEAREST;if(o.get()=="mipmap")e=CGL.Texture.FILTER_MIPMAP;const t=R();let n=String(b.get());if(n==null||n==undefined)n="";for(let e=0;e<n.length;e++){const a=n.substring(e,e+1);if(t.characters.indexOf(a)==-1){t.characters+=a;I=true}}const i=t.ctx;t.canvas.width=t.canvas.height=f;if(!t.texture)t.texture=CGL.Texture.createFromImage(A,t.canvas,{filter:e,anisotropic:parseFloat(l.get())});t.texture.setSize(f,f);i.fillStyle="transparent";i.clearRect(0,0,f,f);i.fillStyle="rgba(255,255,255,255)";let s=t.fontSize+40;let r=w(s,true);while(!r.fits){s-=5;r=w(s,true)}w(s,false);i.restore();t.texture.initTexture(t.canvas,e);t.texture.unpackAlpha=true;v.set(t.texture);t.lastChange=CABLES.now();C=true;I=false}};Ops.Gl.Meshes.TextMesh_v2.prototype=new CABLES.Op;CABLES.OPS["2390f6b3-2122-412e-8c8d-5c2f574e8bd1"]={f:Ops.Gl.Meshes.TextMesh_v2,objName:"Ops.Gl.Meshes.TextMesh_v2"};Ops.Gl.Textures.CombineTextures=function(){CABLES.Op.apply(this,arguments);const e=this;const w={rgbe2fp_frag:"UNI sampler2D texR;\nUNI sampler2D texG;\nUNI sampler2D texB;\nUNI sampler2D texA;\nIN vec2 texCoord;\n\nUNI float defaultR;\nUNI float defaultG;\nUNI float defaultB;\nUNI float defaultA;\n\nvoid main()\n{\n    float r=defaultR, g=defaultG, b=defaultB, a=defaultA;\n\n    #ifdef HAS_R\n        #ifdef R_SRC_R\n            r=texture(texR,texCoord).r;\n        #endif\n        #ifdef R_SRC_G\n            r=texture(texR,texCoord).g;\n        #endif\n        #ifdef R_SRC_B\n            r=texture(texR,texCoord).b;\n        #endif\n        #ifdef R_SRC_A\n            r=texture(texR,texCoord).a;\n        #endif\n    #endif\n\n    #ifdef HAS_G\n        #ifdef G_SRC_R\n            g=texture(texG,texCoord).r;\n        #endif\n        #ifdef G_SRC_G\n            g=texture(texG,texCoord).g;\n        #endif\n        #ifdef G_SRC_B\n            g=texture(texG,texCoord).b;\n        #endif\n        #ifdef G_SRC_A\n            g=texture(texG,texCoord).a;\n        #endif\n    #endif\n\n    #ifdef HAS_B\n        #ifdef B_SRC_R\n            b=texture(texB,texCoord).r;\n        #endif\n        #ifdef B_SRC_G\n            b=texture(texB,texCoord).g;\n        #endif\n        #ifdef B_SRC_B\n            b=texture(texB,texCoord).b;\n        #endif\n        #ifdef B_SRC_A\n            b=texture(texB,texCoord).a;\n        #endif\n    #endif\n\n    #ifdef HAS_A\n        #ifdef A_SRC_R\n            a=texture(texA,texCoord).r;\n        #endif\n        #ifdef A_SRC_G\n            a=texture(texA,texCoord).g;\n        #endif\n        #ifdef A_SRC_B\n            a=texture(texA,texCoord).b;\n        #endif\n        #ifdef A_SRC_A\n            a=texture(texA,texCoord).a;\n        #endif\n    #endif\n\n    #ifdef INV_R\n        r=1.0-r;\n    #endif\n    #ifdef INV_G\n        g=1.0-g;\n    #endif\n    #ifdef INV_B\n        b=1.0-b;\n    #endif\n    #ifdef INV_A\n        a=1.0-a;\n    #endif\n\n\n    outColor = vec4(r,g,b,a);\n}\n\n\n"};const U=e.inTrigger("Execute"),n=e.inSwitch("Filter",["nearest","linear","mipmap"],"linear"),i=e.inValueSelect("Wrap",["clamp to edge","repeat","mirrored repeat"],"repeat"),s=e.inDropDown("Pixel Format",CGL.Texture.PIXELFORMATS,CGL.Texture.PFORMATSTR_RGBA8UB),t=e.inSwitch("Size",["Biggest","Smallest","R","G","B","A"],"Biggest"),r=e.inTexture("R"),a=e.inSwitch("R Source",["R","G","B","A"],"R"),o=e.inSwitch("R Value",["Source","Invert"],"Source"),l=e.inFloatSlider("R Default",1),h=e.inTexture("G"),c=e.inSwitch("G Source",["R","G","B","A"],"G"),f=e.inSwitch("G Value",["Source","Invert"],"Source"),u=e.inFloatSlider("G Default",1),g=e.inTexture("B"),m=e.inSwitch("B Source",["R","G","B","A"],"B"),d=e.inSwitch("B Value",["Source","Invert"],"Source"),p=e.inFloatSlider("B Default",1),_=e.inTexture("A"),b=e.inSwitch("A Source",["R","G","B","A"],"R"),T=e.inSwitch("A Value",["Source","Invert"],"Source"),E=e.inFloatSlider("A Default",1),G=e.outTrigger("Next"),B=e.outTexture("Texture");e.setPortGroup("Red",[l,r,a,o]);e.setPortGroup("Green",[u,h,c,f]);e.setPortGroup("Blue",[p,g,m,d]);e.setPortGroup("Alpha",[E,_,b,T]);const x=e.patch.cgl;let v=[2,2];let A=true;let S=null;let C,I,R,L,O,M,y,N;l.onChange=u.onChange=p.onChange=E.onChange=r.onChange=h.onChange=g.onChange=s.onChange=_.onChange=()=>{v=P();A=true};r.onLinkChanged=h.onLinkChanged=g.onLinkChanged=_.onLinkChanged=a.onChange=c.onChange=m.onChange=b.onChange=o.onChange=f.onChange=d.onChange=T.onChange=F;t.onChange=n.onChange=i.onChange=()=>{S=null};function P(){let n=4;let i=4;let s=[];if(t.get()=="Biggest"||t.get()=="Smallest"){if(r.get())s.push([r.get().width,r.get().height,r.get().width*r.get().height]);if(h.get())s.push([h.get().width,h.get().height,h.get().width*h.get().height]);if(g.get())s.push([g.get().width,g.get().height,g.get().width*g.get().height]);if(_.get())s.push([_.get().width,_.get().height,_.get().width*_.get().height])}if(t.get()=="Biggest"){let t=0;for(let e=0;e<s.length;e++){if(s[e][2]>t){n=s[e][0];i=s[e][1];t=s[e][2]}}}else if(t.get()=="Smallest"){let t=e.patch.cgl.gl.MAX_TEXTURE_SIZE+1;for(let e=0;e<s.length;e++){if(s[e][2]<t){n=s[e][0];i=s[e][1];t=s[e][2]}}}else if(t.get()=="R"&&r.get()){n=r.get().width;i=r.get().height}else if(t.get()=="G"&&h.get()){n=h.get().width;i=h.get().height}else if(t.get()=="B"&&g.get()){n=g.get().width;i=g.get().height}else if(t.get()=="A"&&_.get()){n=_.get().width;i=_.get().height}return[n,i]}function V(){let e=CGL.Texture.WRAP_REPEAT;if(i.get()=="mirrored repeat")e=CGL.Texture.WRAP_MIRRORED_REPEAT;if(i.get()=="clamp to edge")e=CGL.Texture.WRAP_CLAMP_TO_EDGE;let t=CGL.Texture.FILTER_NEAREST;if(n.get()=="linear")t=CGL.Texture.FILTER_LINEAR;if(n.get()=="mipmap")t=CGL.Texture.FILTER_MIPMAP;if(S)S.dispose();v=P();S=new CGL.CopyTexture(x,"combinetextures",{shader:w.rgbe2fp_frag,isFloatingPointTexture:s.get()==CGL.Texture.PFORMATSTR_RGBA32F,filter:t,wrap:e,width:v[0],height:v[1]});C=new CGL.Uniform(S.bgShader,"t","texR",0);I=new CGL.Uniform(S.bgShader,"t","texG",1);R=new CGL.Uniform(S.bgShader,"t","texB",2);L=new CGL.Uniform(S.bgShader,"t","texA",3);O=new CGL.Uniform(S.bgShader,"f","defaultR",l);M=new CGL.Uniform(S.bgShader,"f","defaultG",u);y=new CGL.Uniform(S.bgShader,"f","defaultB",p);N=new CGL.Uniform(S.bgShader,"f","defaultA",E);F();A=true}function F(){if(!S)return;a.setUiAttribs({greyout:!r.isLinked()});c.setUiAttribs({greyout:!h.isLinked()});m.setUiAttribs({greyout:!g.isLinked()});b.setUiAttribs({greyout:!_.isLinked()});o.setUiAttribs({greyout:!r.isLinked()});f.setUiAttribs({greyout:!h.isLinked()});d.setUiAttribs({greyout:!g.isLinked()});T.setUiAttribs({greyout:!_.isLinked()});l.setUiAttribs({greyout:r.isLinked()});u.setUiAttribs({greyout:h.isLinked()});p.setUiAttribs({greyout:g.isLinked()});E.setUiAttribs({greyout:_.isLinked()});S.bgShader.toggleDefine("R_SRC_R",a.get()=="R");S.bgShader.toggleDefine("R_SRC_G",a.get()=="G");S.bgShader.toggleDefine("R_SRC_B",a.get()=="B");S.bgShader.toggleDefine("R_SRC_A",a.get()=="A");S.bgShader.toggleDefine("G_SRC_R",c.get()=="R");S.bgShader.toggleDefine("G_SRC_G",c.get()=="G");S.bgShader.toggleDefine("G_SRC_B",c.get()=="B");S.bgShader.toggleDefine("G_SRC_A",c.get()=="A");S.bgShader.toggleDefine("B_SRC_R",m.get()=="R");S.bgShader.toggleDefine("B_SRC_G",m.get()=="G");S.bgShader.toggleDefine("B_SRC_B",m.get()=="B");S.bgShader.toggleDefine("B_SRC_A",m.get()=="A");S.bgShader.toggleDefine("A_SRC_R",b.get()=="R");S.bgShader.toggleDefine("A_SRC_G",b.get()=="G");S.bgShader.toggleDefine("A_SRC_B",b.get()=="B");S.bgShader.toggleDefine("A_SRC_A",b.get()=="A");S.bgShader.toggleDefine("INV_R",o.get()=="Invert");S.bgShader.toggleDefine("INV_G",f.get()=="Invert");S.bgShader.toggleDefine("INV_B",d.get()=="Invert");S.bgShader.toggleDefine("INV_A",T.get()=="Invert");S.bgShader.toggleDefine("HAS_R",r.isLinked());S.bgShader.toggleDefine("HAS_G",h.isLinked());S.bgShader.toggleDefine("HAS_B",g.isLinked());S.bgShader.toggleDefine("HAS_A",_.isLinked());A=true}U.onTriggered=()=>{if(!S||A&&!e.patch.cgl.frameStore.shadowPass){if(!S)V();S.bgShader.popTextures();if(r.get())S.bgShader.pushTexture(C,r.get().tex);else S.bgShader.pushTexture(C,CGL.Texture.getEmptyTexture(x).tex);if(h.get())S.bgShader.pushTexture(I,h.get().tex);else S.bgShader.pushTexture(I,CGL.Texture.getEmptyTexture(x).tex);if(g.get())S.bgShader.pushTexture(R,g.get().tex);else S.bgShader.pushTexture(R,CGL.Texture.getEmptyTexture(x).tex);if(_.get())S.bgShader.pushTexture(L,_.get().tex);else S.bgShader.pushTexture(L,CGL.Texture.getEmptyTexture(x).tex);O.setValue(l.get());M.setValue(u.get());y.setValue(p.get());N.setValue(E.get());S.setSize(v[0],v[1]);B.setRef(S.copy(r.get()||h.get()||g.get()||_.get()||CGL.Texture.getEmptyTexture(x)));A=false}G.trigger()}};Ops.Gl.Textures.CombineTextures.prototype=new CABLES.Op;CABLES.OPS["5f33dd4a-a553-4f0f-b3b1-66a80cd240a7"]={f:Ops.Gl.Textures.CombineTextures,objName:"Ops.Gl.Textures.CombineTextures"};Ops.Gl.GLTF.GltfTexture=function(){CABLES.Op.apply(this,arguments);const o=this;const e={};const t=o.inTrigger("Render"),l=o.inString("Name",""),h=o.inSwitch("Filter",["nearest","linear","mipmap"],"mipmap"),n=o.inValueSelect("Wrap",["repeat","mirrored repeat","clamp to edge"],"clamp to edge"),c=o.inSwitch("Anisotropic",[0,1,2,4,8,16],0),f=o.inValueBool("Flip",false),u=o.inValueBool("Pre Multiplied Alpha",false),g=o.outTexture("Texture"),m=o.outNumber("Width"),d=o.outNumber("Height"),p=o.outString("Type"),_=o.outBool("Found");const b=o.patch.cgl;let T=null;let E=0;let x=0;let v=0;c.onChange=h.onChange=s;n.onChange=r;l.onChange=f.onChange=u.onChange=function(){i()};function i(){T=null}t.onTriggered=function(){if(T)return;if(!b.frameStore.currentScene||!b.frameStore.currentScene.json||!b.frameStore.currentScene.chunks)return;if(b.frameStore.currentScene.chunks.length<2){return}if(!b.frameStore.currentScene.json.images)return;let t=null;for(let e=0;e<b.frameStore.currentScene.json.images.length;e++){if(b.frameStore.currentScene.json.images[e].name==l.get()||b.frameStore.currentScene.json.images[e].bufferView==parseFloat(l.get())){t=b.frameStore.currentScene.json.images[e]}}if(!t){T=CGL.Texture.getEmptyTexture(b);_.set(false);g.set(T);m.set(T.width);d.set(T.height);return}const n=b.frameStore.currentScene.json.bufferViews[t.bufferView];let i=b.frameStore.currentScene.chunks[1].dataView;if(!n)return;const s=new Uint8Array(n.byteLength);for(let e=0;e<n.byteLength;e++)s[e]=i.getUint8(n.byteOffset+e);const e=new Blob([s.buffer],{type:t.mimeType});const r=URL.createObjectURL(e);if(h.get()=="nearest")E=CGL.Texture.FILTER_NEAREST;else if(h.get()=="linear")E=CGL.Texture.FILTER_LINEAR;else if(h.get()=="mipmap")E=CGL.Texture.FILTER_MIPMAP;v=parseFloat(c.get());const a=b.patch.loading.start("gltfTextureOp",CABLES.uuid(),o);T=CGL.Texture.load(b,r,function(e){if(e){console.error("img load error",e)}else{m.set(T.width);d.set(T.height);p.set(t.mimeType);g.setRef(T);_.set(true)}b.patch.loading.finished(a)},{anisotropic:v,wrap:x,flip:f.get(),unpackAlpha:u.get(),filter:E});g.setRef(T)};function s(){i()}function r(){if(n.get()=="repeat")x=CGL.Texture.WRAP_REPEAT;if(n.get()=="mirrored repeat")x=CGL.Texture.WRAP_MIRRORED_REPEAT;if(n.get()=="clamp to edge")x=CGL.Texture.WRAP_CLAMP_TO_EDGE;i()}};Ops.Gl.GLTF.GltfTexture.prototype=new CABLES.Op;CABLES.OPS["6479a948-7a48-42a3-b40a-794f4364715f"]={f:Ops.Gl.GLTF.GltfTexture,objName:"Ops.Gl.GLTF.GltfTexture"};Ops.Gl.Pbr.PbrMaterial=function(){CABLES.Op.apply(this,arguments);const s=this;const o={BasicPBR_frag:'precision highp float;\nprecision highp int;\n{{MODULES_HEAD}}\n\n#ifndef PI\n#define PI 3.14159265358\n#endif\n\n// set by cables\nUNI vec3 camPos;\n// utility maps\n#ifdef USE_ENVIRONMENT_LIGHTING\n    UNI sampler2D IBL_BRDF_LUT;\n#endif\n// mesh maps\n#ifdef USE_ALBEDO_TEX\n    UNI sampler2D _AlbedoMap;\n#else\n    UNI vec4 _Albedo;\n#endif\n#ifdef USE_NORMAL_TEX\n    UNI sampler2D _NormalMap;\n#endif\n#ifdef USE_EMISSION\n    UNI sampler2D _EmissionMap;\n#endif\n#ifdef USE_HEIGHT_TEX\n    UNI sampler2D _HeightMap;\n#endif\n#ifdef USE_THIN_FILM_MAP\n    UNI sampler2D _ThinFilmMap;\n    UNI float _TFThicknessTexMin;\n    UNI float _TFThicknessTexMax;\n#endif\n#ifdef USE_AORM_TEX\n    UNI sampler2D _AORMMap;\n#else\n    UNI float _Roughness;\n    UNI float _Metalness;\n#endif\n#ifdef USE_LIGHTMAP\n    #ifndef VERTEX_COLORS\n        UNI sampler2D _Lightmap;\n    #else\n        #ifndef VCOL_LIGHTMAP\n            UNI sampler2D _Lightmap;\n        #endif\n    #endif\n#endif\n#ifdef USE_CLEAR_COAT\n    UNI float _ClearCoatIntensity;\n    UNI float _ClearCoatRoughness;\n    #ifdef USE_CC_NORMAL_MAP\n        #ifndef USE_NORMAL_MAP_FOR_CC\n            UNI sampler2D _CCNormalMap;\n        #endif\n    #endif\n#endif\n#ifdef USE_THIN_FILM\n    UNI float _ThinFilmIntensity;\n    UNI float _ThinFilmIOR;\n    UNI float _ThinFilmThickness;\n#endif\n// IBL inputs\n#ifdef USE_ENVIRONMENT_LIGHTING\n    UNI samplerCube _irradiance;\n    UNI samplerCube _prefilteredEnvironmentColour;\n    UNI float MAX_REFLECTION_LOD;\n    UNI float diffuseIntensity;\n    UNI float specularIntensity;\n    UNI float envIntensity;\n#endif\n#ifdef USE_LIGHTMAP\n    UNI float lightmapIntensity;\n#endif\nUNI float tonemappingExposure;\n#ifdef USE_HEIGHT_TEX\n    UNI float _HeightDepth;\n    #ifndef USE_OPTIMIZED_HEIGHT\n        UNI mat4 modelMatrix;\n    #endif\n#endif\n#ifdef USE_PARALLAX_CORRECTION\n    UNI vec3 _PCOrigin;\n    UNI vec3 _PCboxMin;\n    UNI vec3 _PCboxMax;\n#endif\n#ifdef USE_EMISSION\n    UNI float _EmissionIntensity;\n#endif\nIN vec2 texCoord;\n#ifdef USE_LIGHTMAP\n    #ifndef ATTRIB_texCoord1\n    #ifndef VERTEX_COLORS\n        IN vec2 texCoord1;\n    #else\n        #ifndef VCOL_LIGHTMAP\n            IN vec2 texCoord1;\n        #endif\n    #endif\n    #endif\n#endif\nIN vec4 FragPos;\nIN mat3 TBN;\nIN vec3 norm;\nIN vec3 normM;\n#ifdef VERTEX_COLORS\n    IN vec4 vertCol;\n#endif\n#ifdef USE_HEIGHT_TEX\n    #ifdef USE_OPTIMIZED_HEIGHT\n        IN vec3 fragTangentViewDir;\n    #else\n        IN mat3 invTBN;\n    #endif\n#endif\n\n\n// structs\nstruct Light {\n    vec3 color;\n    vec3 position;\n    vec3 specular;\n\n    #define INTENSITY x\n    #define ATTENUATION y\n    #define FALLOFF z\n    #define RADIUS w\n    vec4 lightProperties;\n\n    int castLight;\n\n    vec3 conePointAt;\n    #define COSCONEANGLE x\n    #define COSCONEANGLEINNER y\n    #define SPOTEXPONENT z\n    vec3 spotProperties;\n};\n\n\n#ifdef WEBGL1\n    #ifdef GL_EXT_shader_texture_lod\n        #define textureLod textureCubeLodEXT\n    #endif\n#endif\n#define SAMPLETEX textureLod\n\n// https://community.khronos.org/t/addition-of-two-hdr-rgbe-values/55669\nhighp vec4 EncodeRGBE8(highp vec3 rgb)\n{\n    highp vec4 vEncoded;\n    float maxComponent = max(max(rgb.r, rgb.g), rgb.b);\n    float fExp = ceil(log2(maxComponent));\n    vEncoded.rgb = rgb / exp2(fExp);\n    vEncoded.a = (fExp + 128.0) / 255.0;\n    return vEncoded;\n}\n// https://enkimute.github.io/hdrpng.js/\nhighp vec3 DecodeRGBE8(highp vec4 rgbe)\n{\n    highp vec3 vDecoded = rgbe.rgb * pow(2.0, rgbe.a * 255.0-128.0);\n    return vDecoded;\n}\n\n// from https://github.com/BabylonJS/Babylon.js/blob/master/src/Shaders/ShadersInclude/pbrIBLFunctions.fx\nfloat environmentRadianceOcclusion(float ambientOcclusion, float NdotVUnclamped) {\n    // Best balanced (implementation time vs result vs perf) analytical environment specular occlusion found.\n    // http://research.tri-ace.com/Data/cedec2011_RealtimePBR_Implementation_e.pptx\n    float temp = NdotVUnclamped + ambientOcclusion;\n    return clamp(temp * temp - 1.0 + ambientOcclusion, 0.0, 1.0);\n}\nfloat environmentHorizonOcclusion(vec3 view, vec3 normal, vec3 geometricNormal) {\n    // http://marmosetco.tumblr.com/post/81245981087\n    vec3 reflection = reflect(view, normal);\n    float temp = clamp(1.0 + 1.1 * dot(reflection, geometricNormal), 0.0, 1.0);\n    return temp * temp;\n}\n#ifdef ALPHA_DITHERED\n// from https://github.com/google/filament/blob/main/shaders/src/dithering.fs\n// modified to use this to discard based on factor instead of dithering\nfloat interleavedGradientNoise(highp vec2 n) {\n    return fract(52.982919 * fract(dot(vec2(0.06711, 0.00584), n)));\n}\nfloat Dither_InterleavedGradientNoise(float a) {\n    // Jimenez 2014, "Next Generation Post-Processing in Call of Duty"\n    highp vec2 uv = gl_FragCoord.xy;\n\n    // The noise variable must be highp to workaround Adreno bug #1096.\n    highp float noise = interleavedGradientNoise(uv);\n\n    return step(noise, a);\n}\n#endif\n\n#ifdef USE_HEIGHT_TEX\n#ifndef WEBGL1\n// based on Jasper Flicks great tutorials (:\nfloat getSurfaceHeight(sampler2D surfaceHeightMap, vec2 UV)\n{\n\treturn texture(surfaceHeightMap, UV).r;\n}\n\nvec2 RaymarchedParallax(vec2 UV, sampler2D surfaceHeightMap, float strength, vec3 viewDir)\n{\n    #ifndef USE_OPTIMIZED_HEIGHT\n\t#define PARALLAX_RAYMARCHING_STEPS 50\n    #else\n    #define PARALLAX_RAYMARCHING_STEPS 20\n    #endif\n\tvec2 uvOffset = vec2(0.0);\n\tfloat stepSize = 1.0 / float(PARALLAX_RAYMARCHING_STEPS);\n\tvec2 uvDelta = vec2(viewDir * (stepSize * strength));\n\tfloat stepHeight = 1.0;\n\tfloat surfaceHeight = getSurfaceHeight(surfaceHeightMap, UV);\n\n\tvec2 prevUVOffset = uvOffset;\n\tfloat prevStepHeight = stepHeight;\n\tfloat prevSurfaceHeight = surfaceHeight;\n\n    // doesnt work with webgl 1.0 as the && condition is not fixed length for loop\n\tfor (int i = 1; i < PARALLAX_RAYMARCHING_STEPS && stepHeight > surfaceHeight; ++i)\n\t{\n\t\tprevUVOffset = uvOffset;\n\t\tprevStepHeight = stepHeight;\n\t\tprevSurfaceHeight = surfaceHeight;\n\n\t\tuvOffset -= uvDelta;\n\t\tstepHeight -= stepSize;\n\t\tsurfaceHeight = getSurfaceHeight(surfaceHeightMap, UV + uvOffset);\n\t}\n\n\tfloat prevDifference = prevStepHeight - prevSurfaceHeight;\n\tfloat difference = surfaceHeight - stepHeight;\n\tfloat t = prevDifference / (prevDifference + difference);\n\tuvOffset = mix(prevUVOffset, uvOffset, t);\n\treturn uvOffset;\n}\n#endif // TODO: use non raymarched parallax mapping here if webgl 1.0?\n#endif\n\n#ifdef USE_PARALLAX_CORRECTION\nvec3 BoxProjection(vec3 direction, vec3 position, vec3 cubemapPosition, vec3 boxMin, vec3 boxMax)\n{\n\tboxMin -= position;\n\tboxMax -= position;\n\tfloat x = (direction.x > 0.0 ? boxMax.x : boxMin.x) / direction.x;\n\tfloat y = (direction.y > 0.0 ? boxMax.y : boxMin.y) / direction.y;\n\tfloat z = (direction.z > 0.0 ? boxMax.z : boxMin.z) / direction.z;\n\tfloat scalar = min(min(x, y), z);\n\n\treturn direction * scalar + (position - cubemapPosition);\n}\n#endif\n\n#ifdef USE_THIN_FILM\n// section from https://github.com/BabylonJS/Babylon.js/blob/8a5077e0efb4ba471d16f7cd010fe6124ea8d005/packages/dev/core/src/Shaders/ShadersInclude/pbrBRDFFunctions.fx\n// helper functions from https://github.com/BabylonJS/Babylon.js/blob/8a5077e0efb4ba471d16f7cd010fe6124ea8d005/packages/dev/core/src/Shaders/ShadersInclude/helperFunctions.fx\nfloat square(float value)\n{\n    return value * value;\n}\nvec3 square(vec3 value)\n{\n    return value * value;\n}\nfloat pow5(float value) {\n    float sq = value * value;\n    return sq * sq * value;\n}\nconst mat3 XYZ_TO_REC709 = mat3(\n     3.2404542, -0.9692660,  0.0556434,\n    -1.5371385,  1.8760108, -0.2040259,\n    -0.4985314,  0.0415560,  1.0572252\n);\n// Assume air interface for top\n// Note: We don\'t handle the case fresnel0 == 1\nvec3 getIORTfromAirToSurfaceR0(vec3 f0) {\n    vec3 sqrtF0 = sqrt(f0);\n    return (1. + sqrtF0) / (1. - sqrtF0);\n}\n\n// Conversion FO/IOR\nvec3 getR0fromIORs(vec3 iorT, float iorI) {\n    return square((iorT - vec3(iorI)) / (iorT + vec3(iorI)));\n}\n\nfloat getR0fromIORs(float iorT, float iorI) {\n    return square((iorT - iorI) / (iorT + iorI));\n}\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/publication/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nvec3 evalSensitivity(float opd, vec3 shift) {\n    float phase = 2.0 * PI * opd * 1.0e-9;\n\n    const vec3 val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n    const vec3 pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n    const vec3 var = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n\n    vec3 xyz = val * sqrt(2.0 * PI * var) * cos(pos * phase + shift) * exp(-square(phase) * var);\n    xyz.x += 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * square(phase));\n    xyz /= 1.0685e-7;\n\n    vec3 srgb = XYZ_TO_REC709 * xyz;\n    return srgb;\n}\n// from https://github.com/BabylonJS/Babylon.js/blob/8a5077e0efb4ba471d16f7cd010fe6124ea8d005/packages/dev/core/src/Shaders/ShadersInclude/pbrBRDFFunctions.fx\nvec3 fresnelSchlickGGX(float VdotH, vec3 reflectance0, vec3 reflectance90)\n{\n    return reflectance0 + (reflectance90 - reflectance0) * pow5(1.0 - VdotH);\n}\nfloat fresnelSchlickGGX(float VdotH, float reflectance0, float reflectance90)\n{\n    return reflectance0 + (reflectance90 - reflectance0) * pow5(1.0 - VdotH);\n}\nvec3 evalIridescence(float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0) {\n    vec3 I = vec3(1.0);\n\n    // Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n    float iridescenceIOR = mix(outsideIOR, eta2, smoothstep(0.0, 0.03, thinFilmThickness));\n    // Evaluate the cosTheta on the base layer (Snell law)\n    float sinTheta2Sq = square(outsideIOR / iridescenceIOR) * (1.0 - square(cosTheta1));\n\n    // Handle TIR:\n    float cosTheta2Sq = 1.0 - sinTheta2Sq;\n    if (cosTheta2Sq < 0.0) {\n        return I;\n    }\n\n    float cosTheta2 = sqrt(cosTheta2Sq);\n\n    // First interface\n    float R0 = getR0fromIORs(iridescenceIOR, outsideIOR);\n    float R12 = fresnelSchlickGGX(cosTheta1, R0, 1.);\n    float R21 = R12;\n    float T121 = 1.0 - R12;\n    float phi12 = 0.0;\n    if (iridescenceIOR < outsideIOR) phi12 = PI;\n    float phi21 = PI - phi12;\n\n    // Second interface\n    vec3 baseIOR = getIORTfromAirToSurfaceR0(clamp(baseF0, 0.0, 0.9999)); // guard against 1.0\n    vec3 R1 = getR0fromIORs(baseIOR, iridescenceIOR);\n    vec3 R23 = fresnelSchlickGGX(cosTheta2, R1, vec3(1.));\n    vec3 phi23 = vec3(0.0);\n    if (baseIOR[0] < iridescenceIOR) phi23[0] = PI;\n    if (baseIOR[1] < iridescenceIOR) phi23[1] = PI;\n    if (baseIOR[2] < iridescenceIOR) phi23[2] = PI;\n\n    // Phase shift\n    float opd = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n    vec3 phi = vec3(phi21) + phi23;\n\n    // Compound terms\n    vec3 R123 = clamp(R12 * R23, 1e-5, 0.9999);\n    vec3 r123 = sqrt(R123);\n    vec3 Rs = square(T121) * R23 / (vec3(1.0) - R123);\n\n    // Reflectance term for m = 0 (DC term amplitude)\n    vec3 C0 = R12 + Rs;\n    I = C0;\n\n    // Reflectance term for m > 0 (pairs of diracs)\n    vec3 Cm = Rs - T121;\n    for (int m = 1; m <= 2; ++m)\n    {\n        Cm *= r123;\n        vec3 Sm = 2.0 * evalSensitivity(float(m) * opd, float(m) * phi);\n        I += Cm * Sm;\n    }\n\n    // Since out of gamut colors might be produced, negative color values are clamped to 0.\n    return max(I, vec3(0.0));\n}\n#endif\n\n{{PBR_FRAGMENT_HEAD}}\nvoid main()\n{\n    vec4 col;\n\n    // set up interpolated vertex data\n    vec2 UV0             = texCoord;\n    #ifdef USE_LIGHTMAP\n        #ifndef VERTEX_COLORS\n            vec2 UV1             = texCoord1;\n        #else\n            #ifndef VCOL_LIGHTMAP\n                vec2 UV1             = texCoord1;\n            #endif\n        #endif\n    #endif\n    vec3 V               = normalize(camPos - FragPos.xyz);\n\n    #ifdef USE_HEIGHT_TEX\n        #ifndef USE_OPTIMIZED_HEIGHT\n            vec3 fragTangentViewDir = normalize(invTBN * (camPos - FragPos.xyz));\n        #endif\n        #ifndef WEBGL1\n            UV0 += RaymarchedParallax(UV0, _HeightMap, _HeightDepth * 0.1, fragTangentViewDir);\n        #endif\n    #endif\n\n    // load relevant mesh maps\n    #ifdef USE_ALBEDO_TEX\n        vec4 AlbedoMap   = texture(_AlbedoMap, UV0);\n    #else\n        vec4 AlbedoMap   = _Albedo;\n    #endif\n    #ifdef ALPHA_MASKED\n\tif ( AlbedoMap.a <= 0.5 )\n\t    discard;\n\t#endif\n\n\t#ifdef ALPHA_DITHERED\n\tif ( Dither_InterleavedGradientNoise(AlbedoMap.a) <= 0.5 )\n\t    discard;\n\t#endif\n\n    #ifdef USE_AORM_TEX\n        vec4 AORM        = texture(_AORMMap, UV0);\n    #else\n        vec4 AORM        = vec4(1.0, _Roughness, _Metalness, 1.0);\n    #endif\n    #ifdef USE_NORMAL_TEX\n        vec3 internalNormals = texture(_NormalMap, UV0).rgb;\n        internalNormals      = internalNormals * 2.0 - 1.0;\n        internalNormals      = normalize(TBN * internalNormals);\n    #else\n        vec3 internalNormals = normM;\n    #endif\n\t#ifdef USE_LIGHTMAP\n    \t#ifndef VERTEX_COLORS\n\t        #ifndef LIGHTMAP_IS_RGBE\n                vec3 Lightmap = texture(_Lightmap, UV1).rgb;\n            #else\n                vec3 Lightmap = DecodeRGBE8(texture(_Lightmap, UV1));\n            #endif\n        #else\n            #ifdef VCOL_LIGHTMAP\n                vec3 Lightmap = pow(vertCol.rgb, vec3(2.2));\n            #else\n  \t            #ifndef LIGHTMAP_IS_RGBE\n                    vec3 Lightmap = texture(_Lightmap, UV1).rgb;\n                #else\n                    vec3 Lightmap = DecodeRGBE8(texture(_Lightmap, UV1));\n                #endif\n            #endif\n        #endif\n    #endif\n    // initialize texture values\n    float AO             = AORM.r;\n    float specK          = AORM.g;\n    float metalness      = AORM.b;\n    vec3  N              = normalize(internalNormals);\n    vec3  albedo         = pow(AlbedoMap.rgb, vec3(2.2));\n\n    #ifdef VERTEX_COLORS\n        #ifdef VCOL_COLOUR\n            albedo.rgb *= pow(vertCol.rgb, vec3(2.2));\n            AlbedoMap.rgb *= pow(vertCol.rgb, vec3(2.2));\n        #endif\n        #ifdef VCOL_AORM\n            AO = vertCol.r;\n            specK = vertCol.g;\n            metalness = vertCol.b;\n        #endif\n        #ifdef VCOL_AO\n            AO = vertCol.r;\n        #endif\n        #ifdef VCOL_R\n            specK = vertCol.g;\n        #endif\n        #ifdef VCOL_M\n            metalness = vertCol.b;\n        #endif\n    #endif\n\n    // set up values for later calculations\n    float NdotV          = abs(dot(N, V));\n    vec3  F0             = mix(vec3(0.04), AlbedoMap.rgb, metalness);\n\n    #ifdef USE_THIN_FILM\n        #ifndef USE_THIN_FILM_MAP\n            vec3 iridescenceFresnel = evalIridescence(1.0, _ThinFilmIOR, NdotV, _ThinFilmThickness, F0);\n            F0 = mix(F0, iridescenceFresnel, _ThinFilmIntensity);\n        #else\n            vec3 ThinFilmParameters = texture(_ThinFilmMap, UV0).rgb;\n            vec3 iridescenceFresnel = evalIridescence(1.0, 1.0 / ThinFilmParameters.b, NdotV, mix(_TFThicknessTexMin, _TFThicknessTexMax, ThinFilmParameters.g), F0);\n            F0 = mix(F0, iridescenceFresnel, ThinFilmParameters.r);\n        #endif\n    #endif\n\n    #ifndef WEBGL1\n        #ifndef DONT_USE_GR\n            // from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/pbrHelperFunctions.fx\n            // modified to fit variable names\n            #ifndef DONT_USE_NMGR\n                vec3 nDfdx = dFdx(normM.xyz);\n                vec3 nDfdy = dFdy(normM.xyz);\n            #else\n                vec3 nDfdx = dFdx(N.xyz) + dFdx(normM.xyz);\n                vec3 nDfdy = dFdy(N.xyz) + dFdy(normM.xyz);\n            #endif\n            float slopeSquare = max(dot(nDfdx, nDfdx), dot(nDfdy, nDfdy));\n\n            // Vive analytical lights roughness factor.\n            float geometricRoughnessFactor = pow(clamp(slopeSquare, 0.0, 1.0), 0.333);\n\n            specK = max(specK, geometricRoughnessFactor);\n            #endif\n        #endif\n\n    \t// IBL\n    \t// from https://github.com/google/filament/blob/df6a100fcba66d9c99328a49d41fe3adecc0165d/shaders/src/light_indirect.fs\n    \t// and https://github.com/google/filament/blob/df6a100fcba66d9c99328a49d41fe3adecc0165d/shaders/src/shading_lit.fs\n    \t// modified to fit structure/variable names\n    \t#ifdef USE_ENVIRONMENT_LIGHTING\n        \tvec2 envBRDF = texture(IBL_BRDF_LUT, vec2(NdotV, specK)).xy;\n        \tvec3 E = mix(envBRDF.xxx, envBRDF.yyy, F0);\n        #endif\n\n        float specOcclusion    = environmentRadianceOcclusion(AO, NdotV);\n        float horizonOcclusion = environmentHorizonOcclusion(-V, N, normM);\n\n        #ifdef USE_ENVIRONMENT_LIGHTING\n            float envSampleSpecK = specK * MAX_REFLECTION_LOD;\n            vec3  R = reflect(-V, N);\n\n            #ifdef USE_PARALLAX_CORRECTION\n                R = BoxProjection(R, FragPos.xyz, _PCOrigin, _PCboxMin, _PCboxMax);\n            #endif\n\n    \t    vec3 prefilteredEnvColour = DecodeRGBE8(SAMPLETEX(_prefilteredEnvironmentColour, R, envSampleSpecK)) * specularIntensity*envIntensity;\n\n        \tvec3 Fr = E * prefilteredEnvColour;\n        \tFr *= specOcclusion * horizonOcclusion * (1.0 + F0 * (1.0 / envBRDF.y - 1.0));\n        \tFr *= 1.0 + F0; // TODO: this might be wrong, figure this out\n\n        \t#ifdef USE_LIGHTMAP\n                vec3 IBLIrradiance = Lightmap * lightmapIntensity;\n            #else\n                vec3 IBLIrradiance = DecodeRGBE8(SAMPLETEX(_irradiance, N, 0.0)) * diffuseIntensity*envIntensity;\n        #endif\n\n\t    vec3 Fd = (1.0 - metalness) * albedo * IBLIrradiance * (1.0 - E) * AO;\n    #endif\n    vec3 directLighting = vec3(0.0);\n\n    {{PBR_FRAGMENT_BODY}}\n\n    // combine IBL\n    col.rgb = directLighting;\n    #ifdef USE_ENVIRONMENT_LIGHTING\n\n        col.rgb += Fr + Fd;\n\n        #ifdef USE_CLEAR_COAT\n            float CCEnvSampleSpecK = _ClearCoatRoughness * MAX_REFLECTION_LOD;\n            #ifndef USE_NORMAL_MAP_FOR_CC\n                #ifndef USE_CC_NORMAL_MAP\n                    vec3 CCR = reflect(-V, normM);\n                #else\n                    vec3 CCN = texture(_CCNormalMap, UV0).rgb;\n                    CCN      = CCN * 2.0 - 1.0;\n                    CCN      = normalize(TBN * CCN);\n                    vec3 CCR = reflect(-V, CCN);\n                #endif\n                #ifdef USE_PARALLAX_CORRECTION\n                    CCR = BoxProjection(CCR, FragPos.xyz, _PCOrigin, _PCboxMin, _PCboxMax);\n                #endif\n            #endif\n            #ifndef USE_NORMAL_MAP_FOR_CC\n        \t    vec3 CCPrefilteredEnvColour = DecodeRGBE8(SAMPLETEX(_prefilteredEnvironmentColour, CCR, CCEnvSampleSpecK));\n        \t#else\n        \t    vec3 CCPrefilteredEnvColour = DecodeRGBE8(SAMPLETEX(_prefilteredEnvironmentColour, R, CCEnvSampleSpecK));\n        \t#endif\n        \tvec3 CCFr = E * CCPrefilteredEnvColour;\n        \tCCFr *= specOcclusion * horizonOcclusion * (0.96 + (0.04 / envBRDF.y));\n        \tCCFr *= 1.04;\n        \tcol.rgb += CCFr * _ClearCoatIntensity;\n        #endif\n    #else\n        #ifdef USE_LIGHTMAP\n            col.rgb += (1.0 - metalness) * albedo * Lightmap * lightmapIntensity;\n        #endif\n    #endif\n    #ifdef USE_EMISSION\n    col.rgb += texture(_EmissionMap, UV0).rgb * _EmissionIntensity;\n    #endif\n    col.a   = 1.0;\n\n    #ifdef ALPHA_BLEND\n        col.a = AlbedoMap.a;\n    #endif\n\n    // from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/tonemap.fragment.fx\n    // modified to fit variable names\n    #ifdef TONEMAP_HejiDawson\n        col.rgb *= tonemappingExposure;\n\n        vec3 X = max(vec3(0.0, 0.0, 0.0), col.rgb - 0.004);\n        vec3 retColor = (X * (6.2 * X + 0.5)) / (X * (6.2 * X + 1.7) + 0.06);\n\n        col.rgb = retColor * retColor;\n    #elif defined(TONEMAP_Photographic)\n        col.rgb =  vec3(1.0, 1.0, 1.0) - exp2(-tonemappingExposure * col.rgb);\n    #else\n        col.rgb *= tonemappingExposure;\n        //col.rgb = clamp(col.rgb, vec3(0.0), vec3(1.0));\n    #endif\n\n    col.rgb = pow(col.rgb, vec3(1.0/2.2));\n    {{MODULE_COLOR}}\n\n    outColor = col;\n}\n',BasicPBR_vert:"precision highp float;\nprecision highp int;\n\nUNI vec3 camPos;\n\nIN vec3  vPosition;\nIN vec2  attrTexCoord;\n#ifdef USE_LIGHTMAP\n    #ifndef ATTRIB_attrTexCoord1\n        IN vec2 attrTexCoord1;\n        OUT vec2 texCoord1;\n        #define ATTRIB_attrTexCoord1\n        #define ATTRIB_texCoord1\n    #endif\n#endif\nIN vec3  attrVertNormal;\nIN vec3  attrTangent;\nIN vec3  attrBiTangent;\nIN float attrVertIndex;\n#ifdef VERTEX_COLORS\nIN vec4 attrVertColor;\n#endif\n\n{{MODULES_HEAD}}\n\nOUT vec2 texCoord;\n\nOUT vec4 FragPos;\nOUT mat3 TBN;\nOUT vec3 norm;\nOUT vec3 normM;\n#ifdef VERTEX_COLORS\nOUT vec4 vertCol;\n#endif\n#ifdef USE_HEIGHT_TEX\n#ifdef USE_OPTIMIZED_HEIGHT\nOUT vec3 fragTangentViewDir;\n#else\nOUT mat3 invTBN;\n#endif\n#endif\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\nvoid main()\n{\n    mat4 mMatrix = modelMatrix; // needed to make vertex effects work\n    #ifdef USE_LIGHTMAP\n        texCoord1 = attrTexCoord1;\n    #endif\n    texCoord = attrTexCoord;\n    texCoord.y = 1.0 - texCoord.y;\n    vec4 pos = vec4(vPosition,  1.0);\n    norm = attrVertNormal;\n    vec3 tangent = attrTangent;\n    vec3 bitangent = attrBiTangent;\n\n    {{MODULE_VERTEX_POSITION}}\n\n\n    mat4 theMMat=mMatrix;\n    #ifdef INSTANCING\n        #ifdef TEXINSTMAT\n            theMMat = texInstMat;\n        #endif\n        #ifndef TEXINSTMAT\n            theMMat = instMat;\n        #endif\n    #endif\n\n    FragPos = theMMat * pos;\n\n    tangent = normalize(vec3(theMMat * vec4(tangent,    0.0)));\n    vec3 N = normalize(vec3(theMMat * vec4(norm, 0.0)));\n    bitangent = normalize(vec3(theMMat * vec4(bitangent,  0.0)));\n\n    #ifdef VERTEX_COLORS\n        vertCol = attrVertColor;\n    #endif\n\n    TBN = mat3(tangent, bitangent, N);\n\n    #ifdef USE_HEIGHT_TEX\n    #ifndef WEBGL1\n    #ifdef USE_OPTIMIZED_HEIGHT\n    fragTangentViewDir = normalize(transpose(TBN) * (camPos - FragPos.xyz));\n    #else\n    invTBN = transpose(TBN);\n    #endif\n    #endif\n    #endif\n\n    normM = N;\n    gl_Position = projMatrix * (viewMatrix*mMatrix) * pos;\n}\n",light_body_directional_frag:"\nvec3 L{{LIGHT_INDEX}} = normalize(lightOP{{LIGHT_INDEX}}.position);\n#ifdef USE_ENVIRONMENT_LIGHTING\ndirectLighting += evaluateLighting(lightOP{{LIGHT_INDEX}}, L{{LIGHT_INDEX}}, FragPos, V, N, albedo, specK, NdotV, F0, envBRDF.y, AO, false);\n#else\ndirectLighting += evaluateLighting(lightOP{{LIGHT_INDEX}}, L{{LIGHT_INDEX}}, FragPos, V, N, albedo, specK, NdotV, F0, AO, false);\n#endif\n",light_body_point_frag:"\nvec3 L{{LIGHT_INDEX}} = normalize(lightOP{{LIGHT_INDEX}}.position - FragPos.xyz);\n#ifdef USE_ENVIRONMENT_LIGHTING\ndirectLighting += evaluateLighting(lightOP{{LIGHT_INDEX}}, L{{LIGHT_INDEX}}, FragPos, V, N, albedo, specK, NdotV, F0, envBRDF.y, AO, true);\n#else\ndirectLighting += evaluateLighting(lightOP{{LIGHT_INDEX}}, L{{LIGHT_INDEX}}, FragPos, V, N, albedo, specK, NdotV, F0, AO, true);\n#endif\n",light_body_spot_frag:"\nvec3 L{{LIGHT_INDEX}} = normalize(lightOP{{LIGHT_INDEX}}.position - FragPos.xyz);\nfloat spotIntensity{{LIGHT_INDEX}} = CalculateSpotLightEffect(\n    lightOP{{LIGHT_INDEX}}.position, lightOP{{LIGHT_INDEX}}.conePointAt, lightOP{{LIGHT_INDEX}}.spotProperties.COSCONEANGLE,\n    lightOP{{LIGHT_INDEX}}.spotProperties.COSCONEANGLEINNER, lightOP{{LIGHT_INDEX}}.spotProperties.SPOTEXPONENT,\n    L{{LIGHT_INDEX}}\n);\n#ifdef USE_ENVIRONMENT_LIGHTING\ndirectLighting += evaluateLighting(lightOP{{LIGHT_INDEX}}, L{{LIGHT_INDEX}}, FragPos, V, N, albedo, specK, NdotV, F0, envBRDF.y, AO * spotIntensity{{LIGHT_INDEX}}, true);\n#else\ndirectLighting += evaluateLighting(lightOP{{LIGHT_INDEX}}, L{{LIGHT_INDEX}}, FragPos, V, N, albedo, specK, NdotV, F0, AO * spotIntensity{{LIGHT_INDEX}}, true);\n#endif\n",light_head_frag:"UNI Light lightOP{{LIGHT_INDEX}};\n",light_includes_frag:'#ifndef PI\n#define PI 3.14159265359\n#endif\n\n// from https://github.com/google/filament/blob/036bfa9b20d730bb8e5852ed449b024570167648/shaders/src/brdf.fs\n// modified to fit variable names / structure\nfloat F_Schlick(float f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow(1.0 - VoH, 5.0);\n}\nvec3 F_Schlick(const vec3 f0, float VoH)\n{\n    float f = pow(1.0 - VoH, 5.0);\n    return f + f0 * (1.0 - f);\n}\nfloat Fd_Burley(float roughness, float NoV, float NoL, float LoH)\n{\n    // Burley 2012, "Physically-Based Shading at Disney"\n    float f90 = 0.5 + 2.0 * roughness * LoH * LoH;\n    float lightScatter = F_Schlick(1.0, f90, NoL);\n    float viewScatter  = F_Schlick(1.0, f90, NoV);\n    return lightScatter * viewScatter * (1.0 / PI);\n}\nfloat D_GGX(float roughness, float NoH, const vec3 h)\n{\n    float oneMinusNoHSquared = 1.0 - NoH * NoH;\n\n    float a = NoH * roughness;\n    float k = roughness / (oneMinusNoHSquared + a * a);\n    float d = k * k * (1.0 / PI);\n    return clamp(d, 0.0, 1.0);\n}\nfloat V_SmithGGXCorrelated(float roughness, float NoV, float NoL)\n{\n    // Heitz 2014, "Understanding the Masking-Shadowing Function in Microfacet-Based BRDFs"\n    float a2 = roughness * roughness;\n    // TODO: lambdaV can be pre-computed for all the lights, it should be moved out of this function\n    float lambdaV = NoL * sqrt((NoV - a2 * NoV) * NoV + a2);\n    float lambdaL = NoV * sqrt((NoL - a2 * NoL) * NoL + a2);\n    float v = 0.5 / (lambdaV + lambdaL);\n    // a2=0 => v = 1 / 4*NoL*NoV   => min=1/4, max=+inf\n    // a2=1 => v = 1 / 2*(NoL+NoV) => min=1/4, max=+inf\n    // clamp to the maximum value representable in mediump\n    return clamp(v, 0.0, 1.0);\n}\n// from https://github.com/google/filament/blob/73e339b05d67749e3b1d1d243650441162c10f8a/shaders/src/light_punctual.fs\n// modified to fit variable names\nfloat getSquareFalloffAttenuation(float distanceSquare, float falloff)\n{\n    float factor = distanceSquare * falloff;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    // We would normally divide by the square distance here\n    // but we do it at the call site\n    return smoothFactor * smoothFactor;\n}\n\nfloat getDistanceAttenuation(vec3 posToLight, float falloff, vec3 V, float volume)\n{\n    float distanceSquare = dot(posToLight, posToLight);\n    float attenuation = getSquareFalloffAttenuation(distanceSquare, falloff);\n    // light far attenuation\n    float d = dot(V, V);\n    float f = 100.0; // CONFIG_Z_LIGHT_FAR, ttps://github.com/google/filament/blob/df6a100fcba66d9c99328a49d41fe3adecc0165d/filament/src/details/Engine.h\n    vec2 lightFarAttenuationParams = 0.5 * vec2(10.0, 10.0 / (f * f));\n    attenuation *= clamp(lightFarAttenuationParams.x - d * lightFarAttenuationParams.y, 0.0, 1.0);\n    // Assume a punctual light occupies a min volume of 1cm to avoid a division by 0\n    return attenuation / max(distanceSquare, max(1e-4, volume));\n}\n\n#ifdef USE_CLEAR_COAT\n// from https://github.com/google/filament/blob/73e339b05d67749e3b1d1d243650441162c10f8a/shaders/src/shading_model_standard.fs\n// modified to fit variable names / structure\nfloat clearCoatLobe(vec3 shading_clearCoatNormal, vec3 h, float LoH, float CCSpecK)\n{\n    float clearCoatNoH = clamp(dot(shading_clearCoatNormal, h), 0.0, 1.0);\n\n    // clear coat specular lobe\n    float D = D_GGX(CCSpecK, clearCoatNoH, h);\n    // from https://github.com/google/filament/blob/036bfa9b20d730bb8e5852ed449b024570167648/shaders/src/brdf.fs\n    float V = clamp(0.25 / (LoH * LoH), 0.0, 1.0);\n    float F = F_Schlick(0.04, 1.0, LoH); // fix IOR to 1.5\n\n    return D * V * F;\n}\n#endif\n\n#ifdef USE_ENVIRONMENT_LIGHTING\nvec3 evaluateLighting(Light light, vec3 L, vec4 FragPos, vec3 V, vec3 N, vec3 albedo, float specK, float NdotV, vec3 F0, float envBRDFY, float AO, bool hasFalloff)\n#else\nvec3 evaluateLighting(Light light, vec3 L, vec4 FragPos, vec3 V, vec3 N, vec3 albedo, float specK, float NdotV, vec3 F0, float AO, bool hasFalloff)\n#endif\n{\n    vec3 directLightingResult = vec3(0.0);\n    if (light.castLight == 1)\n    {\n        specK = max(0.08, specK);\n        // from https://github.com/google/filament/blob/73e339b05d67749e3b1d1d243650441162c10f8a/shaders/src/shading_model_standard.fs\n        // modified to fit variable names / structure\n        vec3 H = normalize(V + L);\n\n        float NdotL = clamp(dot(N, L), 0.0, 1.0);\n        float NdotH = clamp(dot(N, H), 0.0, 1.0);\n        float LdotH = clamp(dot(L, H), 0.0, 1.0);\n\n        vec3 Fd = albedo * Fd_Burley(specK, NdotV, NdotL, LdotH);\n\n        float D  = D_GGX(specK, NdotH, H);\n        float V2 = V_SmithGGXCorrelated(specK, NdotV, NdotL);\n        vec3  F  = F_Schlick(F0, LdotH);\n\n        // TODO: modify this with the radius\n        vec3 Fr = (D * V2) * F;\n\n        #ifdef USE_ENVIRONMENT_LIGHTING\n        vec3 directLighting = Fd + Fr * (1.0 + F0 * (1.0 / envBRDFY - 1.0));\n        #else\n        vec3 directLighting = Fd + Fr;\n        #endif\n\n        float attenuation = getDistanceAttenuation(L, hasFalloff ? light.lightProperties.FALLOFF : 0.0, V, light.lightProperties.RADIUS);\n\n        directLightingResult = (directLighting * light.color) *\n                          (light.lightProperties.INTENSITY * attenuation * NdotL * AO);\n\n        #ifdef USE_CLEAR_COAT\n        directLightingResult += clearCoatLobe(normM, H, LdotH, _ClearCoatRoughness);\n        #endif\n    }\n    return directLightingResult;\n}\n\n// from phong OP to make sure the light parameters change lighting similar to what people are used to\nfloat CalculateSpotLightEffect(vec3 lightPosition, vec3 conePointAt, float cosConeAngle, float cosConeAngleInner, float spotExponent, vec3 lightDirection) {\n    vec3 spotLightDirection = normalize(lightPosition-conePointAt);\n    float spotAngle = dot(-lightDirection, spotLightDirection);\n    float epsilon = cosConeAngle - cosConeAngleInner;\n\n    float spotIntensity = clamp((spotAngle - cosConeAngle)/epsilon, 0.0, 1.0);\n    spotIntensity = pow(spotIntensity, max(0.01, spotExponent));\n\n    return max(0., spotIntensity);\n}\n'};const r=s.patch.cgl;const U=s.inTrigger("render");const e=s.inFloat("R",Math.random());const t=s.inFloat("G",Math.random());const n=s.inFloat("B",Math.random());const i=s.inFloatSlider("A",1);const G=[e,t,n,i];s.setPortGroup("Diffuse Color",G);const a=s.inFloatSlider("Roughness",.5);const l=s.inFloatSlider("Metalness",0);const h=s.inSwitch("Alpha Mode",["Opaque","Masked","Dithered","Blend"],"Blend");const c=s.inValueBool("Use Clear Coat",false);const B=s.inFloatSlider("Clear Coat Intensity",1);const V=s.inFloatSlider("Clear Coat Roughness",.5);const f=s.inValueBool("Use Normal map for Clear Coat",false);const u=s.inTexture("Clear Coat Normal map");const g=s.inValueBool("Use Thin Film",false);const D=s.inFloatSlider("Thin Film Intensity",1);const k=s.inFloat("Thin Film IOR",1.3);const j=s.inFloat("Thin Film Thickness (nm)",600);const X=s.inFloat("Thickness Tex Min",300);const H=s.inFloat("Thickness Tex Max",600);const m=s.inSwitch("Tonemapping",["sRGB","HejiDawson","Photographic"],"sRGB");const z=s.inFloat("Exposure",1);const W=s.inFloat("Emission Intensity",1);const d=s.inBool("Disable geometric roughness",false);const p=s.inBool("Use roughness from normal map",false);const _=s.inValueBool("Use Vertex Colours",false);const b=s.inSwitch("Vertex Colour Mode",["colour","AORM","AO","R","M","lightmap"],"colour");const Y=s.inFloat("Height Intensity",1);const T=s.inValueBool("Faster heightmapping",false);const E=s.inTexture("IBL LUT");const x=s.inTexture("Diffuse Irradiance");const v=s.inTexture("Pre-filtered envmap");const A=s.inInt("Num mip levels");const S=s.inTexture("Albedo");const C=s.inTexture("AORM");const I=s.inTexture("Normal map");const R=s.inTexture("Emission");const L=s.inTexture("Height");const O=s.inTexture("Lightmap");const M=s.inTexture("Thin Film");const q=s.inFloat("Diffuse Intensity",1);const K=s.inFloat("Specular Intensity",1);const y=s.inBool("Lightmap is RGBE",false);const Q=s.inFloat("Lightmap Intensity",1);U.onTriggered=ze;const Z=s.outTrigger("Next");const J=s.outObject("Shader");J.ignoreValueSerialize=true;s.toWorkPortsNeedToBeLinked(U);s.toWorkShouldNotBeChild("Ops.Gl.TextureEffects.ImageCompose",CABLES.OP_PORT_TYPE_FUNCTION);e.setUiAttribs({colorPick:true});s.setPortGroup("Shader Parameters",[a,l,h]);s.setPortGroup("Advanced Shader Parameters",[W,d,p,_,b,Y,T]);s.setPortGroup("Textures",[S,C,I,R,L,O,M]);s.setPortGroup("Lighting",[q,K,Q,y,E,x,v,A]);s.setPortGroup("Tonemapping",[m,z]);s.setPortGroup("Clear Coat",[c,B,V,f,u]);s.setPortGroup("Thin Film Iridescence",[g,D,k,j,X,H]);const N=new CGL.Shader(r,"PBRShader");N.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);let P=[];const F=[];const $=new RegExp("{{LIGHT_INDEX}}","g");const ee=new RegExp("{{PBR_FRAGMENT_HEAD}}","g");const te=new RegExp("{{PBR_FRAGMENT_BODY}}","g");const ne=o.light_head_frag;const ie={point:o.light_body_point_frag,directional:o.light_body_directional_frag,spot:o.light_body_spot_frag};const se=e=>{return ne.replace("{{LIGHT_INDEX}}",e)};const re=(e,t)=>{return(ie[t]||"").replace($,e)};let ae=-1;const oe=[{type:"point",position:[5,5,5],color:[1,1,1],specular:[1,1,1],intensity:120,attenuation:0,falloff:.5,radius:60,castLight:1}];if(r.glVersion==1){if(!r.gl.getExtension("EXT_shader_texture_lod")){s.log("no EXT_shader_texture_lod texture extension");throw"no EXT_shader_texture_lod texture extension"}else{N.enableExtension("GL_EXT_shader_texture_lod");r.gl.getExtension("OES_texture_float");r.gl.getExtension("OES_texture_float_linear");r.gl.getExtension("OES_texture_half_float");r.gl.getExtension("OES_texture_half_float_linear");N.enableExtension("GL_OES_standard_derivatives");N.enableExtension("GL_OES_texture_float");N.enableExtension("GL_OES_texture_float_linear");N.enableExtension("GL_OES_texture_half_float");N.enableExtension("GL_OES_texture_half_float_linear")}}Xe();const le=new CGL.Uniform(N,"t","_AlbedoMap",0);const he=new CGL.Uniform(N,"t","_AORMMap",0);const ce=new CGL.Uniform(N,"t","_NormalMap",0);const fe=new CGL.Uniform(N,"t","_EmissionMap",0);const ue=new CGL.Uniform(N,"t","_CCNormalMap",0);const ge=new CGL.Uniform(N,"t","IBL_BRDF_LUT",0);const me=new CGL.Uniform(N,"tc","_irradiance",1);const de=new CGL.Uniform(N,"tc","_prefilteredEnvironmentColour",1);const pe=new CGL.Uniform(N,"f","MAX_REFLECTION_LOD",0);const _e=new CGL.Uniform(N,"f","tonemappingExposure",z);const be=new CGL.Uniform(N,"f","diffuseIntensity",q);const Te=new CGL.Uniform(N,"f","specularIntensity",K);const Ee=new CGL.Uniform(N,"f","envIntensity",1);const xe=new CGL.Uniform(N,"t","_HeightMap",0);const ve=new CGL.Uniform(N,"t","_Lightmap",0);const Ae=new CGL.Uniform(N,"f","lightmapIntensity",Q);const Se=new CGL.Uniform(N,"t","_ThinFilmMap",0);const Ce=new CGL.Uniform(N,"4f","_Albedo",e,t,n,i);const Ie=new CGL.Uniform(N,"f","_Roughness",a);const Re=new CGL.Uniform(N,"f","_Metalness",l);const Le=new CGL.Uniform(N,"f","_HeightDepth",Y);const Oe=new CGL.Uniform(N,"f","_ClearCoatIntensity",B);const Me=new CGL.Uniform(N,"f","_ClearCoatRoughness",V);const ye=new CGL.Uniform(N,"f","_EmissionIntensity",W);const Ne=new CGL.Uniform(N,"f","_ThinFilmIntensity",D);const Pe=new CGL.Uniform(N,"f","_ThinFilmIOR",k);const Fe=new CGL.Uniform(N,"f","_ThinFilmThickness",j);const we=new CGL.Uniform(N,"f","_TFThicknessTexMin",X);const Ue=new CGL.Uniform(N,"f","_TFThicknessTexMax",H);const Ge=new CGL.Uniform(N,"3f","_PCOrigin",[0,0,0]);const Be=new CGL.Uniform(N,"3f","_PCboxMin",[-1,-1,-1]);const Ve=new CGL.Uniform(N,"3f","_PCboxMax",[1,1,1]);N.uniformColorDiffuse=Ce;N.uniformPbrMetalness=Re;N.uniformPbrRoughness=Ie;v.onChange=ke;C.onChange=y.onChange=f.onChange=c.onChange=u.onChange=S.onChange=I.onChange=R.onChange=L.onChange=h.onChange=p.onChange=m.onChange=O.onChange=M.onChange=T.onChange=_.onChange=d.onChange=g.onChange=b.onChange=De;function De(){N.toggleDefine("USE_OPTIMIZED_HEIGHT",T.get());N.toggleDefine("USE_CLEAR_COAT",c.get());N.toggleDefine("USE_NORMAL_MAP_FOR_CC",f.get());N.toggleDefine("USE_CC_NORMAL_MAP",u.isLinked());N.toggleDefine("LIGHTMAP_IS_RGBE",y.get());N.toggleDefine("USE_LIGHTMAP",O.isLinked()||b.get()==="lightmap");N.toggleDefine("USE_NORMAL_TEX",I.isLinked());N.toggleDefine("USE_HEIGHT_TEX",L.isLinked());N.toggleDefine("DONT_USE_NMGR",p.get());N.toggleDefine("DONT_USE_GR",d.get());N.toggleDefine("USE_THIN_FILM",g.get());N.toggleDefine("USE_EMISSION",R.get());N.toggleDefine("USE_THIN_FILM_MAP",M.get());N.toggleDefine("VCOL_COLOUR",b.get()==="colour");N.toggleDefine("VCOL_AORM",b.get()==="AORM");N.toggleDefine("VCOL_AO",b.get()==="AO");N.toggleDefine("VCOL_R",b.get()==="R");N.toggleDefine("VCOL_M",b.get()==="M");N.toggleDefine("VCOL_LIGHTMAP",b.get()==="lightmap");N.toggleDefine("USE_ALBEDO_TEX",S.get());e.setUiAttribs({greyout:S.isLinked()});t.setUiAttribs({greyout:S.isLinked()});n.setUiAttribs({greyout:S.isLinked()});i.setUiAttribs({greyout:S.isLinked()});N.toggleDefine("USE_AORM_TEX",C.get());a.setUiAttribs({greyout:C.isLinked()});l.setUiAttribs({greyout:C.isLinked()});N.toggleDefine("VERTEX_COLORS",_.get());if(!_.get()){N.toggleDefine("USE_LIGHTMAP",O.get())}else{if(b.get()==="lightmap"){N.define("USE_LIGHTMAP")}}N.toggleDefine("ALPHA_MASKED",h.get()==="Masked");N.toggleDefine("ALPHA_DITHERED",h.get()==="Dithered");N.toggleDefine("ALPHA_BLEND",h.get()==="Blend");N.toggleDefine("TONEMAP_sRGB",m.get()==="sRGB");N.toggleDefine("TONEMAP_HejiDawson",m.get()==="HejiDawson");N.toggleDefine("TONEMAP_Photographic",m.get()==="Photographic")}De();function w(e){N.toggleDefine("USE_ENVIRONMENT_LIGHTING",e)}s.preRender=function(){};function ke(){A.setUiAttribs({greyout:!v.get()})}function je(){for(let e=0;e<P.length;e+=1){const t=P[e];t.isUsed=true;F[e].position.setValue(t.position);F[e].color.setValue(t.color);F[e].specular.setValue(t.specular);F[e].lightProperties.setValue([t.intensity,t.attenuation,t.falloff,t.radius]);F[e].conePointAt.setValue(t.conePointAt);F[e].spotProperties.setValue([t.cosConeAngle,t.cosConeAngleInner,t.spotExponent]);F[e].castLight.setValue(t.castLight)}}function Xe(){const e=o.BasicPBR_vert;const t=o.light_includes_frag;let n=o.BasicPBR_frag;let i="";let s="";if(P.length>0){i=i.concat(t)}for(let e=0;e<P.length;e+=1){const r=P[e];const a=r.type;i=i.concat(se(e)||"");s=s.concat(re(e,r.type)||"")}n=n.replace(ee,i||"");n=n.replace(te,s||"");N.setSource(e,n);J.set(N);for(let e=0;e<P.length;e+=1){F[e]=null;if(!F[e]){F[e]={color:new CGL.Uniform(N,"3f","lightOP"+e+".color",[1,1,1]),position:new CGL.Uniform(N,"3f","lightOP"+e+".position",[0,11,0]),specular:new CGL.Uniform(N,"3f","lightOP"+e+".specular",[1,1,1]),lightProperties:new CGL.Uniform(N,"4f","lightOP"+e+".lightProperties",[1,1,1,1]),conePointAt:new CGL.Uniform(N,"3f","lightOP"+e+".conePointAt",vec3.create()),spotProperties:new CGL.Uniform(N,"3f","lightOP"+e+".spotProperties",[0,0,0,0]),castLight:new CGL.Uniform(N,"i","lightOP"+e+".castLight",1)}}}}function He(){if(r.frameStore.lightStack){let t=ae!==r.frameStore.lightStack.length;if(!t){for(let e=0;e<r.frameStore.lightStack.length;e++){if(P[e]!=r.frameStore.lightStack[e]){t=true;break}}}if(t){P.length=0;for(let e=0;e<r.frameStore.lightStack.length;e++)P[e]=r.frameStore.lightStack[e];Xe();ae=r.frameStore.lightStack.length}}}function ze(){r.pushShader(N);let e=false;N.popTextures();let t=0;if(r.frameStore.lightStack)t=r.frameStore.lightStack.length;if((!r.frameStore.pbrEnvStack||r.frameStore.pbrEnvStack.length==0)&&!O.isLinked()&&t==0){e=true;s.setUiError("deflight","Default light is enabled. Please add lights or PBREnvironmentLights to your patch to make this warning disappear.",1)}else s.setUiError("deflight",null);if(r.frameStore.pbrEnvStack&&r.frameStore.pbrEnvStack.length>0&&r.frameStore.pbrEnvStack[r.frameStore.pbrEnvStack.length-1].texIBLLUT.tex&&r.frameStore.pbrEnvStack[r.frameStore.pbrEnvStack.length-1].texDiffIrr.tex&&r.frameStore.pbrEnvStack[r.frameStore.pbrEnvStack.length-1].texPreFiltered.tex){const n=r.frameStore.pbrEnvStack[r.frameStore.pbrEnvStack.length-1];Ee.setValue(n.intensity);N.pushTexture(ge,n.texIBLLUT.tex);N.pushTexture(me,n.texDiffIrr.tex,r.gl.TEXTURE_CUBE_MAP);N.pushTexture(de,n.texPreFiltered.tex,r.gl.TEXTURE_CUBE_MAP);pe.setValue(n.texPreFilteredMipLevels||7);N.toggleDefine("USE_PARALLAX_CORRECTION",n.UseParallaxCorrection);if(n.UseParallaxCorrection){Ge.setValue(n.PCOrigin);Be.setValue(n.PCboxMin);Ve.setValue(n.PCboxMax)}w(true)}else{w(false)}if(e){const i=mat4.create();mat4.invert(i,r.vMatrix);oe[0].position=[i[12],i[13],i[14]];r.frameStore.lightStack=oe}if(E.get()){w(true);N.pushTexture(ge,E.get().tex);pe.setValue(A.get());if(x.get())N.pushTexture(me,x.get().cubemap,r.gl.TEXTURE_CUBE_MAP);if(v.get())N.pushTexture(de,v.get().cubemap,r.gl.TEXTURE_CUBE_MAP)}if(S.get())N.pushTexture(le,S.get().tex);if(C.get())N.pushTexture(he,C.get().tex);if(I.get())N.pushTexture(ce,I.get().tex);if(R.get())N.pushTexture(fe,R.get().tex);if(L.get())N.pushTexture(xe,L.get().tex);if(O.get())N.pushTexture(ve,O.get().tex);if(u.get())N.pushTexture(ue,u.get().tex);if(M.get())N.pushTexture(Se,M.get().tex);He();je();Z.trigger();r.popShader();if(e)r.frameStore.lightStack=[]}};Ops.Gl.Pbr.PbrMaterial.prototype=new CABLES.Op;CABLES.OPS["a5234947-f65a-41e2-a691-b81382903a71"]={f:Ops.Gl.Pbr.PbrMaterial,objName:"Ops.Gl.Pbr.PbrMaterial"};Ops.Gl.Texture_v2=function(){CABLES.Op.apply(this,arguments);const s=this;const e={};const r=s.inUrl("File",[".jpg",".png",".webp",".jpeg",".avif"]),t=s.inSwitch("Filter",["nearest","linear","mipmap"]),n=s.inValueSelect("Wrap",["repeat","mirrored repeat","clamp to edge"],"clamp to edge"),i=s.inSwitch("Anisotropic",["0","1","2","4","8","16"],"0"),a=s.inSwitch("Data Format",["R","RG","RGB","RGBA"],"RGBA"),o=s.inValueBool("Flip",false),l=s.inValueBool("Pre Multiplied Alpha",false),h=s.inValueBool("Active",true),c=s.inBool("Save Memory",true),f=s.outTexture("Texture"),u=s.outNumber("Width"),g=s.outNumber("Height"),m=s.outNumber("Aspect Ratio"),d=s.outNumber("Loaded",false),p=s.outNumber("Loading",false);const _=s.patch.cgl;s.toWorkPortsNeedToBeLinked(f);s.setPortGroup("Size",[u,g]);let b=null;let T=null;let E=null;let x=CGL.Texture.FILTER_MIPMAP;let v=CGL.Texture.WRAP_REPEAT;let A=0;let S=0;l.setUiAttribs({hidePort:true});l.onChange=r.onChange=a.onChange=o.onChange=I;i.onChange=t.onChange=O;n.onChange=M;t.set("mipmap");n.set("repeat");f.set(CGL.Texture.getEmptyTexture(_));h.onChange=function(){if(h.get()){if(b!=r.get()||!E)I();else f.set(E)}else{f.set(CGL.Texture.getEmptyTexture(_));u.set(CGL.Texture.getEmptyTexture(_).width);g.set(CGL.Texture.getEmptyTexture(_).height);if(E)E.delete();s.setUiAttrib({extendTitle:""});E=null}};const C=function(){const e=CGL.Texture.getTempTexture(_);f.set(e)};function I(e){clearTimeout(S);S=setTimeout(function(){L(e)},30)}function R(){if(a.get()=="R")return CGL.Texture.PFORMATSTR_R8UB;if(a.get()=="RG")return CGL.Texture.PFORMATSTR_RG8UB;if(a.get()=="RGB")return CGL.Texture.PFORMATSTR_RGB8UB;return CGL.Texture.PFORMATSTR_RGBA8UB}function L(e){if(!h.get())return;if(T)T=_.patch.loading.finished(T);T=_.patch.loading.start("textureOp",r.get(),s);let t=s.patch.getFilePath(String(r.get()));if(e)t+="?rnd="+CABLES.uuid();if(String(r.get()).indexOf("data:")==0)t=r.get();let n=false;if(b!=r.get())n=true;b=r.get();if(r.get()&&r.get().length>1){d.set(false);p.set(true);const i=r.get();s.setUiAttrib({extendTitle:CABLES.basename(t)});if(n)s.refreshParams();_.patch.loading.addAssetLoadingTask(()=>{s.setUiError("urlerror",null);CGL.Texture.load(_,t,function(e,t){_.checkFrameStarted("texture inittexture");if(r.get()!=i){_.patch.loading.finished(T);T=null;return}if(E)E.delete();if(e){const n=CGL.Texture.getErrorTexture(_);f.setRef(n);s.setUiError("urlerror",'could not load texture: "'+r.get()+'"',2);_.patch.loading.finished(T);T=null;return}u.set(t.width);g.set(t.height);m.set(t.width/t.height);E=t;f.setRef(E);p.set(false);d.set(true);if(c.get())E.image=null;if(T){_.patch.loading.finished(T);T=null}},{anisotropic:A,wrap:v,flip:o.get(),unpackAlpha:l.get(),pixelFormat:R(),filter:x})})}else{_.patch.loading.finished(T);T=null;C()}}function O(){if(t.get()=="nearest")x=CGL.Texture.FILTER_NEAREST;else if(t.get()=="linear")x=CGL.Texture.FILTER_LINEAR;else if(t.get()=="mipmap")x=CGL.Texture.FILTER_MIPMAP;else if(t.get()=="Anisotropic")x=CGL.Texture.FILTER_ANISOTROPIC;i.setUiAttribs({greyout:x!=CGL.Texture.FILTER_MIPMAP});A=parseFloat(i.get());I()}function M(){if(n.get()=="repeat")v=CGL.Texture.WRAP_REPEAT;if(n.get()=="mirrored repeat")v=CGL.Texture.WRAP_MIRRORED_REPEAT;if(n.get()=="clamp to edge")v=CGL.Texture.WRAP_CLAMP_TO_EDGE;I()}s.onFileChanged=function(e){if(r.get()&&r.get().indexOf(e)>-1){f.set(CGL.Texture.getEmptyTexture(s.patch.cgl));f.set(CGL.Texture.getTempTexture(_));L(true)}}};Ops.Gl.Texture_v2.prototype=new CABLES.Op;CABLES.OPS["790f3702-9833-464e-8e37-6f0f813f7e16"]={f:Ops.Gl.Texture_v2,objName:"Ops.Gl.Texture_v2"};Ops.Gl.Pbr.PbrEnvironmentLight=function(){CABLES.Op.apply(this,arguments);const e=this;const t={IBLLUT_frag:"precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\n#ifndef WEBGL1\n#define NUM_SAMPLES 1024u\n#else\n#define NUM_SAMPLES 1024\n#endif\n#define PI 3.14159265358\n\nIN vec3 P;\n{{MODULES_HEAD}}\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/hdrFilteringFunctions.fx\n// modified to use different syntax for a number of variables\n#if NUM_SAMPLES > 0\n    #ifndef WEBGL1\n        // https://learnopengl.com/PBR/IBL/Specular-IBL\n        // Hammersley\n        float radicalInverse_VdC(uint bits)\n        {\n            bits = (bits << 16u) | (bits >> 16u);\n            bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\n            bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\n            bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\n            bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\n            return float(bits) * 2.3283064365386963e-10; // / 0x100000000\n        }\n\n        vec2 hammersley(uint i, uint N)\n        {\n            return vec2(float(i)/float(N), radicalInverse_VdC(i));\n        }\n    #else\n        float vanDerCorpus(int n, int base)\n        {\n            float invBase = 1.0 / float(base);\n            float denom   = 1.0;\n            float result  = 0.0;\n\n            for(int i = 0; i < 32; ++i)\n            {\n                if(n > 0)\n                {\n                    denom   = mod(float(n), 2.0);\n                    result += denom * invBase;\n                    invBase = invBase / 2.0;\n                    n       = int(float(n) / 2.0);\n                }\n            }\n\n            return result;\n        }\n\n        vec2 hammersley(int i, int N)\n        {\n            return vec2(float(i)/float(N), vanDerCorpus(i, 2));\n        }\n    #endif\n\n\t// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/importanceSampling.fx\n\tvec3 hemisphereImportanceSampleDggx(vec2 u, float a) {\n\t\t// pdf = D(a) * cosTheta\n\t\tfloat phi = 2. * PI * u.x;\n\n\t\t// NOTE: (aa-1) == (a-1)(a+1) produces better fp accuracy\n\t\tfloat cosTheta2 = (1. - u.y) / (1. + (a + 1.) * ((a - 1.) * u.y));\n\t\tfloat cosTheta = sqrt(cosTheta2);\n\t\tfloat sinTheta = sqrt(1. - cosTheta2);\n\n\t\treturn vec3(sinTheta * cos(phi), sinTheta * sin(phi), cosTheta);\n\t}\n\n\t// from https://google.github.io/filament/Filament.md.html#toc9.5\n\t// modified to use different syntax for a number of variables\n    const float NUM_SAMPLES_FLOAT = float(NUM_SAMPLES);\n    const float NUM_SAMPLES_FLOAT_INVERSED = 1. / NUM_SAMPLES_FLOAT;\n    const float NUM_SAMPLES_FLOAT_INVERSED4 = 4. / NUM_SAMPLES_FLOAT;\n\n    float Visibility(float NdotV, float NdotL, float alphaG)\n    {\n        // from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/pbrBRDFFunctions.fx\n        #ifdef WEBGL1\n            // Appply simplification as all squared root terms are below 1 and squared\n            float GGXV = NdotL * (NdotV * (1.0 - alphaG) + alphaG);\n            float GGXL = NdotV * (NdotL * (1.0 - alphaG) + alphaG);\n            return 0.5 / (GGXV + GGXL);\n        #else\n            float a2 = alphaG * alphaG;\n            float GGXV = NdotL * sqrt(NdotV * (NdotV - a2 * NdotV) + a2);\n            float GGXL = NdotV * sqrt(NdotL * (NdotL - a2 * NdotL) + a2);\n            return 0.5 / (GGXV + GGXL);\n        #endif\n    }\n\n\tvoid main()\n\t{\n\t    // actual implementation (not documentation) here: https://github.com/google/filament/blob/94ff2ea6b1e39d909e9066459f2ce8c2942eb876/libs/ibl/src/CubemapIBL.cpp\n\t\t{{MODULE_BEGIN_FRAG}}\n\t\tfloat NoV = P.x;\n\t\tfloat a   = P.y;\n\n\t\tvec3 V;\n\t\tV.x = sqrt(1.0 - NoV*NoV);\n\t\tV.y = 0.0;\n\t\tV.z = NoV;\n\n\t\tvec2 r = vec2(0.0);\n\n        #ifndef WEBGL1\n        for(uint i = 0u; i < NUM_SAMPLES; i++)\n        #else\n        for(int i = 0; i < NUM_SAMPLES; i++)\n        #endif\n        {\n\t\t\tvec2 Xi = hammersley(i, NUM_SAMPLES);\n\t\t\tvec3 H  = hemisphereImportanceSampleDggx(Xi, a);\n\t\t\tvec3 L  = 2.0 * dot(V, H) * H - V;\n\n\t\t\tfloat VoH = clamp(dot(V, H), 0.0, 1.0);\n\t\t\tfloat NoL = clamp(L.z, 0.0, 1.0);\n\t\t\tfloat NoH = clamp(H.z, 0.0, 1.0);\n\n\t\t\tif (NoL > 0.0) {\n\t\t\t\tfloat Gv = Visibility(NoV, NoL, a) * NoL * (VoH / NoH);\n\t\t\t\tfloat Fc = pow(1.0 - VoH, 5.0);\n\n\t\t\t\t// modified for multiscattering https://google.github.io/filament/Filament.md.html#toc5.3.4.7\n\t\t\t    r.x += Gv * Fc;\n\t\t\t\tr.y += Gv;\n\t\t\t}\n\t\t}\n\t\tr *= NUM_SAMPLES_FLOAT_INVERSED4;\n\n\t\t{{MODULE_COLOR}}\n\t\toutColor = vec4(r.x, r.y, 0.0, 1.0);\n\t}\n#endif\n",IBLLUT_vert:"precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\n{{MODULES_HEAD}}\nIN vec3 vPosition;\nOUT vec3 P;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\nvoid main()\n{\n   vec4 pos     = vec4(vPosition,  1.0);\n   mat4 mMatrix = modelMatrix;\n\n   {{MODULE_VERTEX_POSITION}}\n\n   gl_Position  = pos;\n\n   P            = (vPosition + 1.0) * 0.5;\n}\n",irradiance_frag:'precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/hdrFilteringFunctions.fx\n// modified to use different syntax for a number of variables, equirectangular projection and rgbe encoding\n{{MODULES_HEAD}}\n#ifndef WEBGL1\n#define NUM_SAMPLES 2048u\n#else\n#define NUM_SAMPLES 2048\n#endif\n#define PI 3.14159265358\n#define PI_TWO 2.*PI\n#define RECIPROCAL_PI 1./PI\n#define RECIPROCAL_PI2 RECIPROCAL_PI/2.\n\n\n#ifdef WEBGL1\n    #ifdef GL_EXT_shader_texture_lod\n        #define textureLod texture2DLodEXT\n    #endif\n#endif\n#define SAMPLETEX textureLod\n\n// set by cables\nUNI vec3 camPos;\n\nIN  vec3 FragPos;\nUNI float rotation;\nUNI vec2 filteringInfo;\nUNI sampler2D EquiCubemap;\n\nvec2 SampleSphericalMap(vec3 direction, float rotation)\n{\n    #ifndef WEBGL1\n        vec3 newDirection = normalize(direction);\n\t\tvec2 sampleUV;\n\t\tsampleUV.x = -1. * (atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5);\n\t\tsampleUV.y = asin( clamp(direction.y, -1., 1.) ) * RECIPROCAL_PI + 0.5;\n    #endif\n\n    #ifdef WEBGL1\n        vec3 newDirection = normalize(direction);\n\t\tvec2 sampleUV = vec2(atan(newDirection.z, newDirection.x), asin(newDirection.y+1e-6));\n        sampleUV *= vec2(-0.1591, 0.3183);\n        sampleUV += 0.5;\n    #endif\n    sampleUV.x += rotation;\n    return sampleUV * vec2(-1.,1.);\n}\n\n// https://community.khronos.org/t/addition-of-two-hdr-rgbe-values/55669\nvec4 EncodeRGBE8(vec3 rgb)\n{\n    vec4 vEncoded;\n    float maxComponent = max(max(rgb.r, rgb.g), rgb.b);\n    float fExp = ceil(log2(maxComponent));\n    vEncoded.rgb = rgb / exp2(fExp);\n    vEncoded.a = (fExp + 128.0) / 255.0;\n    return vEncoded;\n}\n// https://enkimute.github.io/hdrpng.js/\nvec3 DecodeRGBE8(vec4 rgbe)\n{\n    vec3 vDecoded = rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n    return vDecoded;\n}\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/importanceSampling.fx\nvec3 hemisphereCosSample(vec2 u) {\n    // pdf = cosTheta / M_PI;\n    float phi = 2. * PI * u.x;\n\n    float cosTheta2 = 1. - u.y;\n    float cosTheta = sqrt(cosTheta2);\n    float sinTheta = sqrt(1. - cosTheta2);\n\n    return vec3(sinTheta * cos(phi), sinTheta * sin(phi), cosTheta);\n}\n\n#ifndef WEBGL1\n    // https://learnopengl.com/PBR/IBL/Specular-IBL\n    // Hammersley\n    float radicalInverse_VdC(uint bits)\n    {\n        bits = (bits << 16u) | (bits >> 16u);\n        bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\n        bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\n        bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\n        bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\n        return float(bits) * 2.3283064365386963e-10; // / 0x100000000\n    }\n\n    vec2 hammersley(uint i, uint N)\n    {\n        return vec2(float(i)/float(N), radicalInverse_VdC(i));\n    }\n#else\n    float vanDerCorpus(int n, int base)\n    {\n        float invBase = 1.0 / float(base);\n        float denom   = 1.0;\n        float result  = 0.0;\n\n        for(int i = 0; i < 32; ++i)\n        {\n            if(n > 0)\n            {\n                denom   = mod(float(n), 2.0);\n                result += denom * invBase;\n                invBase = invBase / 2.0;\n                n       = int(float(n) / 2.0);\n            }\n        }\n\n        return result;\n    }\n\n    vec2 hammersley(int i, int N)\n    {\n        return vec2(float(i)/float(N), vanDerCorpus(i, 2));\n    }\n#endif\n\n// from https://github.com/google/filament/blob/main/shaders/src/light_indirect.fs\nfloat prefilteredImportanceSampling(float ipdf, float omegaP)\n{\n    // See: "Real-time Shading with Filtered Importance Sampling", Jaroslav Krivanek\n    // Prefiltering doesn\'t work with anisotropy\n    const float numSamples = float(NUM_SAMPLES);\n    const float invNumSamples = 1.0 / float(numSamples);\n    const float K = 4.0;\n    float omegaS = invNumSamples * ipdf;\n    float mipLevel = log2(K * omegaS / omegaP) * 0.5;    // log4\n    return mipLevel;\n}\n\nconst float NUM_SAMPLES_FLOAT = float(NUM_SAMPLES);\nconst float NUM_SAMPLES_FLOAT_INVERSED = 1. / NUM_SAMPLES_FLOAT;\n\nconst float K = 4.;\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n    vec4 col = vec4(0.0, 0.0, 0.0, 0.0);\n\n    vec3 n = normalize(FragPos);\n    vec3 tangent = normalize(cross(vec3(0.0, 0.0, 1.0), n));\n    vec3 bitangent = cross(n, tangent);\n    mat3 tbn = mat3(tangent, bitangent, n);\n\n    float maxLevel = filteringInfo.y;\n    float dim0 = filteringInfo.x;\n    float omegaP = (4. * PI) / (6. * dim0 * dim0);\n\n    #ifndef WEBGL1\n    for(uint i = 0u; i < NUM_SAMPLES; ++i)\n    #else\n    for(int i = 0; i < NUM_SAMPLES; ++i)\n    #endif\n    {\n        vec2 Xi = hammersley(i, NUM_SAMPLES);\n        vec3 Ls = hemisphereCosSample(Xi);\n\n        Ls = normalize(Ls);\n\n        vec3 Ns = vec3(0., 0., 1.);\n\n        float NoL = dot(Ns, Ls);\n\n        if (NoL > 0.) {\n            float pdf_inversed = PI / NoL;\n\n            float omegaS = NUM_SAMPLES_FLOAT_INVERSED * pdf_inversed;\n            // from https://github.com/google/filament/blob/main/shaders/src/light_indirect.fs\n            float l = log2(K * omegaS / omegaP) * 0.5;\n            float mipLevel = clamp(l + 1.0, 0.0, maxLevel);\n\n            #ifndef DONT_USE_RGBE_CUBEMAPS\n            vec3 c = DecodeRGBE8(SAMPLETEX(EquiCubemap, SampleSphericalMap(tbn * Ls, rotation), mipLevel)).rgb;\n            #else\n            vec3 c = SAMPLETEX(EquiCubemap, SampleSphericalMap(tbn * Ls, rotation), mipLevel).rgb;\n            #endif\n            col.rgb += c;\n        }\n    }\n\n    col = EncodeRGBE8(col.rgb * PI * NUM_SAMPLES_FLOAT_INVERSED);\n\n    {{MODULE_COLOR}}\n    outColor = col;\n}\n',irradiance_vert:"precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\n\n{{MODULES_HEAD}}\nIN vec3 vPosition;\nIN float attrVertIndex;\n\nOUT vec3 FragPos;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\n\nvoid main()\n{\n    FragPos     = vPosition;\n\n    {{MODULE_VERTEX_POSITION}}\n    gl_Position = projMatrix * viewMatrix * modelMatrix * vec4(vPosition, 1.0);\n    gl_Position = gl_Position.xyww;\n}\n",prefiltering_frag:"precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/hdrFilteringFunctions.fx\n// modified to use different syntax for a number of variables, equirectangular projection and rgbe encoding\n{{MODULES_HEAD}}\n#ifndef WEBGL1\n#define NUM_SAMPLES 2048u\n#else\n#define NUM_SAMPLES 2048\n#endif\n#define PI 3.14159265358\n#define PI_TWO 2.*PI\n#define RECIPROCAL_PI 1./PI\n#define RECIPROCAL_PI2 RECIPROCAL_PI/2.\n#define MINIMUMVARIANCE 0.0005\n\n\n#ifdef WEBGL1\n    #ifdef GL_EXT_shader_texture_lod\n        #define textureLod texture2DLodEXT\n    #endif\n#endif\n#define SAMPLETEX textureLod\n\nIN  vec3 FragPos;\nUNI float roughness;\nUNI float rotation;\nUNI vec2 filteringInfo;\nUNI sampler2D EquiCubemap;\n\nvec2 SampleSphericalMap(vec3 direction, float rotation)\n{\n    #ifndef WEBGL1\n        vec3 newDirection = normalize(direction);\n\t\tvec2 sampleUV;\n\t\tsampleUV.x = -1. * (atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5);\n\t\tsampleUV.y = asin( clamp(direction.y, -1., 1.) ) * RECIPROCAL_PI + 0.5;\n    #endif\n\n    #ifdef WEBGL1\n        vec3 newDirection = normalize(direction);\n\t\tvec2 sampleUV = vec2(atan(newDirection.z, newDirection.x), asin(newDirection.y+1e-6));\n        sampleUV *= vec2(-0.1591, 0.3183);\n        sampleUV += 0.5;\n    #endif\n    sampleUV.x += rotation;\n    return sampleUV * vec2(-1.,1.);\n}\n\n// https://community.khronos.org/t/addition-of-two-hdr-rgbe-values/55669\nvec4 EncodeRGBE8(vec3 rgb)\n{\n    vec4 vEncoded;\n    float maxComponent = max(max(rgb.r, rgb.g), rgb.b);\n    float fExp = ceil(log2(maxComponent));\n    vEncoded.rgb = rgb / exp2(fExp);\n    vEncoded.a = (fExp + 128.0) / 255.0;\n    return vEncoded;\n}\n// https://enkimute.github.io/hdrpng.js/\nvec3 DecodeRGBE8(vec4 rgbe)\n{\n    vec3 vDecoded = rgbe.rgb * pow(2.0, rgbe.a * 255.0-128.0);\n    return vDecoded;\n}\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/importanceSampling.fx\nvec3 hemisphereImportanceSampleDggx(vec2 u, float a) {\n    // pdf = D(a) * cosTheta\n    float phi = 2. * PI * u.x;\n\n    // NOTE: (aa-1) == (a-1)(a+1) produces better fp accuracy\n    float cosTheta2 = (1. - u.y) / (1. + (a + 1.) * ((a - 1.) * u.y));\n    float cosTheta = sqrt(cosTheta2);\n    float sinTheta = sqrt(1. - cosTheta2);\n\n    return vec3(sinTheta * cos(phi), sinTheta * sin(phi), cosTheta);\n}\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/pbrBRDFFunctions.fx\nfloat normalDistributionFunction_TrowbridgeReitzGGX(float NdotH, float alphaG)\n{\n    // Note: alphaG is average slope (gradient) of the normals in slope-space.\n    // It is also the (trigonometric) tangent of the median distribution value, i.e. 50% of normals have\n    // a tangent (gradient) closer to the macrosurface than this slope.\n    float a2 = alphaG * alphaG;\n    float d = NdotH * NdotH * (a2 - 1.0) + 1.0;\n    return a2 / (PI * d * d);\n}\n\n// from https://github.com/BabylonJS/Babylon.js/blob/5e6321d887637877d8b28b417410abbbeb651c6e/src/Shaders/ShadersInclude/pbrHelperFunctions.fx\nfloat convertRoughnessToAverageSlope(float roughness)\n{\n    // Calculate AlphaG as square of roughness (add epsilon to avoid numerical issues)\n    return (roughness * roughness) + MINIMUMVARIANCE;\n}\n\n\n#ifndef WEBGL1\n    // https://learnopengl.com/PBR/IBL/Specular-IBL\n    // Hammersley\n    float radicalInverse_VdC(uint bits)\n    {\n        bits = (bits << 16u) | (bits >> 16u);\n        bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\n        bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\n        bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\n        bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\n        return float(bits) * 2.3283064365386963e-10; // / 0x100000000\n    }\n\n    vec2 hammersley(uint i, uint N)\n    {\n        return vec2(float(i)/float(N), radicalInverse_VdC(i));\n    }\n#else\n    float vanDerCorpus(int n, int base)\n    {\n        float invBase = 1.0 / float(base);\n        float denom   = 1.0;\n        float result  = 0.0;\n\n        for(int i = 0; i < 32; ++i)\n        {\n            if(n > 0)\n            {\n                denom   = mod(float(n), 2.0);\n                result += denom * invBase;\n                invBase = invBase / 2.0;\n                n       = int(float(n) / 2.0);\n            }\n        }\n\n        return result;\n    }\n\n    vec2 hammersley(int i, int N)\n    {\n        return vec2(float(i)/float(N), vanDerCorpus(i, 2));\n    }\n#endif\n\nfloat log4(float x)\n{\n    return log2(x) / 2.;\n}\n\nconst float NUM_SAMPLES_FLOAT = float(NUM_SAMPLES);\nconst float NUM_SAMPLES_FLOAT_INVERSED = 1. / NUM_SAMPLES_FLOAT;\n\nconst float K = 4.;\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n    vec3 n = normalize(FragPos);\n    float alphaG = convertRoughnessToAverageSlope(roughness);\n    vec4 result = vec4(0.);\n\n    if (alphaG == 0.)\n    {\n        result = SAMPLETEX(EquiCubemap, SampleSphericalMap(n, rotation), 0.0);\n    }\n    else\n    {\n        vec3 tangent = abs(n.z) < 0.999 ? vec3(0., 0., 1.) : vec3(1., 0., 0.);\n        tangent = normalize(cross(tangent, n));\n        vec3 bitangent = cross(n, tangent);\n        mat3 tbn = mat3(tangent, bitangent, n);\n\n        float maxLevel = filteringInfo.y;\n        float dim0 = filteringInfo.x;\n        float omegaP = (4. * PI) / (6. * dim0 * dim0);\n\n        float weight = 0.;\n        #if defined(WEBGL2)\n        for(uint i = 0u; i < NUM_SAMPLES; ++i)\n        #else\n        for(int i = 0; i < NUM_SAMPLES; ++i)\n        #endif\n        {\n            vec2 Xi = hammersley(i, NUM_SAMPLES);\n            vec3 H = hemisphereImportanceSampleDggx(Xi, alphaG);\n\n            float NoV = 1.;\n            float NoH = H.z;\n            float NoH2 = H.z * H.z;\n            float NoL = 2. * NoH2 - 1.;\n            vec3 L = vec3(2. * NoH * H.x, 2. * NoH * H.y, NoL);\n            L = normalize(L);\n\n            if (NoL > 0.)\n            {\n                float pdf_inversed = 4. / normalDistributionFunction_TrowbridgeReitzGGX(NoH, alphaG);\n\n                float omegaS = NUM_SAMPLES_FLOAT_INVERSED * pdf_inversed;\n                float l = log4(omegaS) - log4(omegaP) + log4(K);\n                float mipLevel = clamp(l, 0.0, maxLevel);\n\n                weight += NoL;\n\n                #ifndef DONT_USE_RGBE_CUBEMAPS\n                vec3 c = DecodeRGBE8(SAMPLETEX(EquiCubemap, SampleSphericalMap(tbn * L, rotation), mipLevel)).rgb;\n                #else\n                vec3 c = SAMPLETEX(EquiCubemap, SampleSphericalMap(tbn * L, rotation), mipLevel).rgb;\n                #endif\n                result.rgb += c * NoL;\n            }\n        }\n\n        result = result / weight;\n        result = EncodeRGBE8(result.rgb);\n    }\n\n    {{MODULE_COLOR}}\n    outColor = result;\n}\n",prefiltering_vert:"precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\n{{MODULES_HEAD}}\nIN vec3 vPosition;\nIN float attrVertIndex;\n\nOUT vec3 FragPos;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\n\nvoid main()\n{\n    FragPos     = vPosition;\n\n    {{MODULE_VERTEX_POSITION}}\n    gl_Position = projMatrix * viewMatrix * modelMatrix * vec4(vPosition, 1.0);\n    gl_Position = gl_Position.xyww;\n}\n"};const r=e.patch.cgl;const U=r.glVersion==1;const G=new CABLES.CG.BoundingBox;const n=new CGL.Geometry("unit cube");n.vertices=new Float32Array([-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,1,-1,1,1,1,1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,1,-1,1]);const a=new CGL.Mesh(r,n);const B=CGL.MESHES.getSimpleRect(r,"fullscreenRectangle");const V=e.inTrigger("render");const D=e.inFloatSlider("Intensity",1);const o=e.inTexture("RGBE Environment map");const i=e.inDropDown("Size Irradiance map",[16,32,64],64);const s=e.inDropDown("Size pre-filtered environment",[64,128],128);const l=e.inDropDown("Size IBL LUT",[128,256,512,1024],256);const h=e.inBool("Force 8bit IBL",true);const c=e.inBool("Environment map does not contain RGBE data",false);const f=e.inFloat("Rotation",0);const u=e.inValueBool("Use parallax correction",false);const g=e.inFloat("center X",0);const m=e.inFloat("center Y",1.8);const d=e.inFloat("center Z",0);const p=e.inFloat("Box min X",-1);const _=e.inFloat("Box min Y",-1);const b=e.inFloat("Box min Z",-1);const T=e.inFloat("Box max X",1);const E=e.inFloat("Box max Y",1);const x=e.inFloat("Box max Z",1);e.setPortGroup("Parallax Correction",[u,g,m,d,p,_,b,T,E,x]);let v=true;let A=true;let S=true;i.onChange=()=>{v=true};s.onChange=()=>{A=true};l.onChange=h.onChange=()=>{S=true};const C=e.outTrigger("next");const k=e.outTexture("IBL LUT");const j=e.outTexture("cubemap (diffuse irradiance)");const X=e.outTexture("cubemap (pre-filtered environment map)");const H=e.outNumber("Number of Pre-filtered mip levels");e.toWorkPortsNeedToBeLinked(o);let I=null;let z=null;let R=null;let L=null;let O=null;const M={};const y=new CGL.Shader(r,"IrradianceShader");const N=new CGL.Shader(r,"PrefilteringShader");y.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);N.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);if(r.glVersion==1){if(!r.gl.getExtension("EXT_shader_texture_lod")){e.log("no EXT_shader_texture_lod texture extension");throw"no EXT_shader_texture_lod texture extension"}else{y.enableExtension("GL_EXT_shader_texture_lod");N.enableExtension("GL_EXT_shader_texture_lod");r.gl.getExtension("OES_texture_float");r.gl.getExtension("OES_texture_float_linear");r.gl.getExtension("OES_texture_half_float");r.gl.getExtension("OES_texture_half_float_linear");r.gl.getExtension("WEBGL_color_buffer_float");y.enableExtension("GL_OES_standard_derivatives");y.enableExtension("GL_OES_texture_float");y.enableExtension("GL_OES_texture_float_linear");y.enableExtension("GL_OES_texture_half_float");y.enableExtension("GL_OES_texture_half_float_linear");N.enableExtension("GL_OES_standard_derivatives");N.enableExtension("GL_OES_texture_float");N.enableExtension("GL_OES_texture_float_linear");N.enableExtension("GL_OES_texture_half_float");N.enableExtension("GL_OES_texture_half_float_linear")}}let P=[0,0];y.offScreenPass=true;const W=new CGL.Uniform(y,"t","EquiCubemap",0);const Y=new CGL.Uniform(y,"2f","filteringInfo",P);const q=new CGL.Uniform(y,"f","rotation",0);y.setSource(t.irradiance_vert,t.irradiance_frag);let F=[0,0];N.offScreenPass=true;const K=new CGL.Uniform(N,"t","EquiCubemap",0);const Q=new CGL.Uniform(N,"f","roughness",0);const Z=new CGL.Uniform(N,"f","rotation",0);const J=new CGL.Uniform(N,"2f","filteringInfo",F);N.setSource(t.prefiltering_vert,t.prefiltering_frag);const w=new CGL.Shader(r,"IBLLUTShader");w.offScreenPass=true;w.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);w.setSource(t.IBLLUT_vert,t.IBLLUT_frag);c.onChange=()=>{y.toggleDefine("DONT_USE_RGBE_CUBEMAPS",c);N.toggleDefine("DONT_USE_RGBE_CUBEMAPS",c);v=true;A=true};f.onChange=()=>{A=v=true};function $(e){if(I)I.dispose();I=new CGL.CubemapFramebuffer(r,Number(e),Number(e),{clear:false,filter:CGL.Texture.FILTER_NEAREST,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE});P[0]=e;P[1]=1+Math.floor(Math.log(e)*1.4426950408889634);y.popTextures();y.pushTexture(W,o.get().tex);q.setValue(f.get()/360);I.renderStart(r);for(let e=0;e<6;e+=1){I.renderStartCubemapFace(e);a.render(y);I.renderEndCubemapFace()}I.renderEnd();j.set(I.getTextureColor())}function ee(e){e=Number(e);let n=new CGL.CubemapFramebuffer(r,e,e,{isFloatingPointTexture:false,clear:false,filter:CGL.Texture.FILTER_LINEAR,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE});if(R)R.dispose();R=new CGL.CubemapFramebuffer(r,e,e,{clear:false,filter:CGL.Texture.FILTER_MIPMAP,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE});r.gl.bindTexture(r.gl.TEXTURE_CUBE_MAP,R.getTextureColor().tex);r.gl.texParameteri(r.gl.TEXTURE_CUBE_MAP,r.gl.TEXTURE_WRAP_S,r.gl.CLAMP_TO_EDGE);r.gl.texParameteri(r.gl.TEXTURE_CUBE_MAP,r.gl.TEXTURE_WRAP_T,r.gl.CLAMP_TO_EDGE);if(r.glVersion==2)r.gl.texParameteri(r.gl.TEXTURE_CUBE_MAP,r.gl.TEXTURE_WRAP_R,r.gl.CLAMP_TO_EDGE);r.gl.texParameteri(r.gl.TEXTURE_CUBE_MAP,r.gl.TEXTURE_MIN_FILTER,r.gl.LINEAR_MIPMAP_LINEAR);r.gl.texParameteri(r.gl.TEXTURE_CUBE_MAP,r.gl.TEXTURE_MAG_FILTER,r.gl.LINEAR);r.gl.generateMipmap(r.gl.TEXTURE_CUBE_MAP);O=1+Math.floor(Math.log(e)*1.4426950408889634);H.set(O);F[0]=e;F[1]=O;N.popTextures();N.pushTexture(K,o.get().tex);Z.setValue(f.get()/360);let t=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&navigator.userAgent.match(/iPhone/i);if(t){O=0}for(let t=0;t<=O;++t){const i=e*.5**t;const s=t/(O-1);Q.setValue(s);n.setSize(i,i);n.renderStart(r);for(let e=0;e<6;e++){n.renderStartCubemapFace(e);a.render(N);r.gl.bindTexture(r.gl.TEXTURE_CUBE_MAP,R.getTextureColor().tex);r.gl.copyTexImage2D(r.gl.TEXTURE_CUBE_MAP_POSITIVE_X+e,t,r.gl.RGBA8,0,0,i,i,0);n.renderEndCubemapFace()}n.renderEnd()}if(t){r.gl.bindTexture(r.gl.TEXTURE_CUBE_MAP,R.getTextureColor().tex);r.gl.generateMipmap(r.gl.TEXTURE_CUBE_MAP)}n.delete();r.setTexture(0,null);X.setRef(R.getTextureColor())}function te(t){t=Number(t);if(L)L.dispose();if(U){L=new CGL.Framebuffer(r,t,t,{isFloatingPointTexture:true,filter:CGL.Texture.FILTER_LINEAR,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE})}else{let e=!h.get()&&!r.glUseHalfFloatTex;if(e){L=new CGL.Framebuffer2(r,t,t,{pixelFormat:CGL.Texture.PFORMATSTR_RG16F,filter:CGL.Texture.FILTER_LINEAR,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE})}else{L=new CGL.Framebuffer2(r,t,t,{filter:CGL.Texture.FILTER_LINEAR,pixelFormat:CGL.Texture.PFORMATSTR_RGBA8UB,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE})}}r.frameStore.renderOffscreen=true;L.renderStart(r);B.render(w);L.renderEnd();r.frameStore.renderOffscreen=false;k.set(L.getTextureColor())}o.onChange=()=>{if(o.get())e.setUiError("nocubemapinput",null);A=v=true};function ne(){gui.setTransformGizmo({posX:g,posY:m,posZ:d});gui.setTransformGizmo({posX:p,posY:_,posZ:b},1);gui.setTransformGizmo({posX:T,posY:E,posZ:x},2);if(CABLES.UI.renderHelper){r.pushShader(CABLES.GL_MARKER.getDefaultShader(r))}else{r.pushShader(CABLES.GL_MARKER.getSelectedShader(r))}r.pushModelMatrix();mat4.translate(r.mMatrix,r.mMatrix,[(p.get()+T.get())/2,(_.get()+E.get())/2,(b.get()+x.get())/2]);mat4.scale(r.mMatrix,r.mMatrix,[(T.get()-p.get())/2,(E.get()-_.get())/2,(x.get()-b.get())/2]);G.render(r);r.popShader();r.popModelMatrix()}u.onChange=()=>{const e=u.get();g.setUiAttribs({greyout:!e});m.setUiAttribs({greyout:!e});d.setUiAttribs({greyout:!e});p.setUiAttribs({greyout:!e});_.setUiAttribs({greyout:!e});b.setUiAttribs({greyout:!e});T.setUiAttribs({greyout:!e});E.setUiAttribs({greyout:!e});x.setUiAttribs({greyout:!e})};V.onTriggered=function(){if(!o.get()){C.trigger();e.setUiError("nocubemapinput","No Environment Texture connected");return}Y.setValue(P);J.setValue(F);if(!r.frameStore.shadowPass){if(S){te(Number(l.get()));S=false}if(A){ee(Number(s.get()));A=false}if(v){$(Number(i.get()));v=false}}M.texIBLLUT=L.getTextureColor();M.texDiffIrr=I.getTextureColor();M.texPreFiltered=R.getTextureColor();M.texPreFilteredMipLevels=H.get();M.intensity=D.get();M.UseParallaxCorrection=u.get();M.PCOrigin=[g.get(),m.get(),d.get()];M.PCboxMin=[p.get(),_.get(),b.get()];M.PCboxMax=[T.get(),E.get(),x.get()];r.frameStore.pbrEnvStack=r.frameStore.pbrEnvStack||[];r.frameStore.pbrEnvStack.push(M);if(r.shouldDrawHelpers(e)&&M.UseParallaxCorrection&&!r.frameStore.shadowPass)ne();C.trigger();r.frameStore.pbrEnvStack.pop()}};Ops.Gl.Pbr.PbrEnvironmentLight.prototype=new CABLES.Op;CABLES.OPS["7110f169-adfd-4649-a77a-c825751eaa9b"]={f:Ops.Gl.Pbr.PbrEnvironmentLight,objName:"Ops.Gl.Pbr.PbrEnvironmentLight"};Ops.Gl.GLTF.GltfScene_v4=function(){CABLES.Op.apply(this,arguments);const x=this;const l={inc_camera_js:"const gltfCamera = class\n{\n    constructor(gltf, node)\n    {\n        this.node = node;\n        this.name = node.name;\n        // console.log(gltf);\n        this.config = gltf.json.cameras[node.camera];\n\n        this.pos = vec3.create();\n        this.quat = quat.create();\n        this.vCenter = vec3.create();\n        this.vUp = vec3.create();\n        this.vMat = mat4.create();\n    }\n\n    updateAnim(time)\n    {\n        if (this.node && this.node._animTrans)\n        {\n            vec3.set(this.pos,\n                this.node._animTrans[0].getValue(time),\n                this.node._animTrans[1].getValue(time),\n                this.node._animTrans[2].getValue(time));\n\n            quat.set(this.quat,\n                this.node._animRot[0].getValue(time),\n                this.node._animRot[1].getValue(time),\n                this.node._animRot[2].getValue(time),\n                this.node._animRot[3].getValue(time));\n        }\n    }\n\n    start(time)\n    {\n        if (cgl.frameStore.shadowPass) return;\n\n        this.updateAnim(time);\n        const asp = cgl.getViewPort()[2] / cgl.getViewPort()[3];\n\n        cgl.pushPMatrix();\n        // mat4.perspective(\n        //     cgl.pMatrix,\n        //     this.config.perspective.yfov*0.5,\n        //     asp,\n        //     this.config.perspective.znear,\n        //     this.config.perspective.zfar);\n\n        cgl.pushViewMatrix();\n        // mat4.identity(cgl.vMatrix);\n\n        // if(this.node && this.node.parent)\n        // {\n        //     console.log(this.node.parent)\n        // vec3.add(this.pos,this.pos,this.node.parent._node.translation);\n        // vec3.sub(this.vCenter,this.vCenter,this.node.parent._node.translation);\n        // mat4.translate(cgl.vMatrix,cgl.vMatrix,\n        // [\n        //     -this.node.parent._node.translation[0],\n        //     -this.node.parent._node.translation[1],\n        //     -this.node.parent._node.translation[2]\n        // ])\n        // }\n\n        // vec3.set(this.vUp, 0, 1, 0);\n        // vec3.set(this.vCenter, 0, -1, 0);\n        // // vec3.set(this.vCenter, 0, 1, 0);\n        // vec3.transformQuat(this.vCenter, this.vCenter, this.quat);\n        // vec3.normalize(this.vCenter, this.vCenter);\n        // vec3.add(this.vCenter, this.vCenter, this.pos);\n\n        // mat4.lookAt(cgl.vMatrix, this.pos, this.vCenter, this.vUp);\n\n        let mv = mat4.create();\n        mat4.invert(mv, this.node.modelMatAbs());\n\n        // console.log(this.node.modelMatAbs());\n\n        this.vMat = mv;\n\n        mat4.identity(cgl.vMatrix);\n        // console.log(mv);\n        mat4.mul(cgl.vMatrix, cgl.vMatrix, mv);\n    }\n\n    end()\n    {\n        if (cgl.frameStore.shadowPass) return;\n        cgl.popPMatrix();\n        cgl.popViewMatrix();\n    }\n};\n",inc_gltf_js:'const le = true; // little endian\n\nconst Gltf = class\n{\n    constructor()\n    {\n        this.json = {};\n        this.accBuffers = [];\n        this.meshes = [];\n        this.nodes = [];\n        this.shaders = [];\n        this.timing = [];\n        this.cams = [];\n        this.startTime = performance.now();\n        this.bounds = new CABLES.CG.BoundingBox();\n        this.loaded = Date.now();\n        this.accBuffersDelete = [];\n    }\n\n    getNode(n)\n    {\n        for (let i = 0; i < this.nodes.length; i++)\n        {\n            if (this.nodes[i].name == n) return this.nodes[i];\n        }\n    }\n\n    unHideAll()\n    {\n        for (let i = 0; i < this.nodes.length; i++)\n        {\n            this.nodes[i].unHide();\n        }\n    }\n};\n\nfunction Utf8ArrayToStr(array)\n{\n    if (window.TextDecoder) return new TextDecoder("utf-8").decode(array);\n\n    let out, i, len, c;\n    let char2, char3;\n\n    out = "";\n    len = array.length;\n    i = 0;\n    while (i < len)\n    {\n        c = array[i++];\n        switch (c >> 4)\n        {\n        case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n            // 0xxxxxxx\n            out += String.fromCharCode(c);\n            break;\n        case 12: case 13:\n            // 110x xxxx   10xx xxxx\n            char2 = array[i++];\n            out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n            break;\n        case 14:\n            // 1110 xxxx  10xx xxxx  10xx xxxx\n            char2 = array[i++];\n            char3 = array[i++];\n            out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n            break;\n        }\n    }\n\n    return out;\n}\n\nfunction readChunk(dv, bArr, arrayBuffer, offset)\n{\n    const chunk = {};\n\n    if (offset >= dv.byteLength)\n    {\n        op.log("could not read chunk...");\n        return;\n    }\n    chunk.size = dv.getUint32(offset + 0, le);\n\n    // chunk.type = new TextDecoder("utf-8").decode(bArr.subarray(offset+4, offset+4+4));\n    chunk.type = Utf8ArrayToStr(bArr.subarray(offset + 4, offset + 4 + 4));\n\n    if (chunk.type == "BIN\\0")\n    {\n        // console.log(chunk.size,arrayBuffer.length,offset);\n        // try\n        // {\n        chunk.dataView = new DataView(arrayBuffer, offset + 8, chunk.size);\n        // }\n        // catch(e)\n        // {\n        //     chunk.dataView = null;\n        //     console.log(e);\n        // }\n    }\n    else\n    if (chunk.type == "JSON")\n    {\n        const json = Utf8ArrayToStr(bArr.subarray(offset + 8, offset + 8 + chunk.size));\n\n        try\n        {\n            const obj = JSON.parse(json);\n            chunk.data = obj;\n            outGenerator.set(obj.asset.generator);\n        }\n        catch (e)\n        {\n        }\n    }\n    else\n    {\n        op.warn("unknown type", chunk.type);\n    }\n\n    return chunk;\n}\n\nfunction loadAnims(gltf)\n{\n    const uniqueAnimNames = {};\n\n    for (let i = 0; i < gltf.json.animations.length; i++)\n    {\n        const an = gltf.json.animations[i];\n\n        an.name = an.name || "unknown";\n\n        for (let ia = 0; ia < an.channels.length; ia++)\n        {\n            const chan = an.channels[ia];\n\n            const node = gltf.nodes[chan.target.node];\n            const sampler = an.samplers[chan.sampler];\n\n            const acc = gltf.json.accessors[sampler.input];\n            const bufferIn = gltf.accBuffers[sampler.input];\n\n            const accOut = gltf.json.accessors[sampler.output];\n            const bufferOut = gltf.accBuffers[sampler.output];\n\n            gltf.accBuffersDelete.push(sampler.output, sampler.input);\n\n            if (bufferIn && bufferOut)\n            {\n                let numComps = 1;\n                if (accOut.type === "VEC2")numComps = 2;\n                else if (accOut.type === "VEC3")numComps = 3;\n                else if (accOut.type === "VEC4")numComps = 4;\n                else if (accOut.type === "SCALAR")\n                {\n                    numComps = bufferOut.length / bufferIn.length; // is this really the way to find out ? cant find any other way,except number of morph targets, but not really connected...\n                }\n                else op.log("[] UNKNOWN accOut.type", accOut.type);\n\n                const anims = [];\n\n                uniqueAnimNames[an.name] = true;\n\n                for (let k = 0; k < numComps; k++)\n                {\n                    const newAnim = new CABLES.Anim();\n                    // newAnim.name=an.name;\n                    anims.push(newAnim);\n                }\n\n                if (sampler.interpolation === "LINEAR") {}\n                else if (sampler.interpolation === "STEP") for (let k = 0; k < numComps; k++) anims[k].defaultEasing = CABLES.EASING_ABSOLUTE;\n                else if (sampler.interpolation === "CUBICSPLINE") for (let k = 0; k < numComps; k++) anims[k].defaultEasing = CABLES.EASING_CUBICSPLINE;\n                else op.warn("unknown interpolation", sampler.interpolation);\n\n                // console.log(bufferOut)\n\n                // if there is no keyframe for time 0 copy value of first keyframe at time 0\n                if (bufferIn[0] !== 0.0)\n                    for (let k = 0; k < numComps; k++)\n                        anims[k].setValue(0, bufferOut[0 * numComps + k]);\n\n                for (let j = 0; j < bufferIn.length; j++)\n                {\n                    maxTime = Math.max(bufferIn[j], maxTime);\n\n                    for (let k = 0; k < numComps; k++)\n                    {\n                        if (anims[k].defaultEasing === CABLES.EASING_CUBICSPLINE)\n                        {\n                            const idx = ((j * numComps) * 3 + k);\n\n                            const key = anims[k].setValue(bufferIn[j], bufferOut[idx + numComps]);\n                            key.bezTangIn = bufferOut[idx];\n                            key.bezTangOut = bufferOut[idx + (numComps * 2)];\n\n                            // console.log(an.name,k,bufferOut[idx+1]);\n                        }\n                        else\n                        {\n                            // console.log(an.name,k,bufferOut[j * numComps + k]);\n                            anims[k].setValue(bufferIn[j], bufferOut[j * numComps + k]);\n                        }\n                    }\n                }\n\n                node.setAnim(chan.target.path, an.name, anims);\n            }\n            else\n            {\n                op.warn("loadAmins bufferIn undefined ", bufferIn === undefined);\n                op.warn("loadAmins bufferOut undefined ", bufferOut === undefined);\n                op.warn("loadAmins ", sampler, accOut);\n                op.warn("loadAmins num accBuffers", gltf.accBuffers.length);\n                op.warn("loadAmins num accessors", gltf.json.accessors.length);\n            }\n        }\n    }\n\n    gltf.uniqueAnimNames = uniqueAnimNames;\n\n    outAnims.setRef(Object.keys(uniqueAnimNames));\n}\n\nfunction loadCams(gltf)\n{\n    if (!gltf || !gltf.json.cameras) return;\n\n    gltf.cameras = gltf.cameras || [];\n\n    for (let i = 0; i < gltf.nodes.length; i++)\n    {\n        if (gltf.nodes[i].hasOwnProperty("camera"))\n        {\n            const cam = new gltfCamera(gltf, gltf.nodes[i]);\n            gltf.cameras.push(cam);\n        }\n    }\n}\n\nfunction loadAfterDraco()\n{\n    if (!window.DracoDecoder)\n    {\n        setTimeout(() =>\n        {\n            loadAfterDraco();\n        }, 100);\n    }\n\n    reloadSoon();\n}\n\nfunction parseGltf(arrayBuffer)\n{\n    const CHUNK_HEADER_SIZE = 8;\n\n    let j = 0, i = 0;\n\n    const gltf = new Gltf();\n    gltf.timing.push(["Start parsing", Math.round((performance.now() - gltf.startTime))]);\n\n    if (!arrayBuffer) return;\n    const byteArray = new Uint8Array(arrayBuffer);\n    let pos = 0;\n\n    // var string = new TextDecoder("utf-8").decode(byteArray.subarray(pos, 4));\n    const string = Utf8ArrayToStr(byteArray.subarray(pos, 4));\n    pos += 4;\n    if (string != "glTF") return;\n\n    gltf.timing.push(["dataview", Math.round((performance.now() - gltf.startTime))]);\n\n    const dv = new DataView(arrayBuffer);\n    const version = dv.getUint32(pos, le);\n    pos += 4;\n    const size = dv.getUint32(pos, le);\n    pos += 4;\n\n    outVersion.set(version);\n\n    const chunks = [];\n    gltf.chunks = chunks;\n\n    chunks.push(readChunk(dv, byteArray, arrayBuffer, pos));\n    pos += chunks[0].size + CHUNK_HEADER_SIZE;\n    gltf.json = chunks[0].data;\n\n    gltf.cables = {\n        "fileUrl": inFile.get(),\n        "shortFileName": CABLES.basename(inFile.get())\n    };\n\n    outJson.setRef(gltf.json);\n    outExtensions.setRef(gltf.json.extensionsUsed || []);\n\n    let ch = readChunk(dv, byteArray, arrayBuffer, pos);\n    while (ch)\n    {\n        chunks.push(ch);\n        pos += ch.size + CHUNK_HEADER_SIZE;\n        ch = readChunk(dv, byteArray, arrayBuffer, pos);\n    }\n\n    gltf.chunks = chunks;\n\n    const views = chunks[0].data.bufferViews;\n    const accessors = chunks[0].data.accessors;\n\n    gltf.timing.push(["Parse buffers", Math.round((performance.now() - gltf.startTime))]);\n\n    if (gltf.json.extensionsUsed && gltf.json.extensionsUsed.indexOf("KHR_draco_mesh_compression") > -1)\n    {\n        if (!window.DracoDecoder)\n        {\n            op.setUiError("gltfdraco", "GLTF draco compression lib not found / add draco op to your patch!");\n\n            loadAfterDraco();\n            return gltf;\n        }\n        else\n        {\n            gltf.useDraco = true;\n        }\n    }\n\n    op.setUiError("gltfdraco", null);\n    // let accPos = (view.byteOffset || 0) + (acc.byteOffset || 0);\n\n    if (views)\n    {\n        for (i = 0; i < accessors.length; i++)\n        {\n            const acc = accessors[i];\n            const view = views[acc.bufferView];\n\n            let numComps = 0;\n            if (acc.type == "SCALAR")numComps = 1;\n            else if (acc.type == "VEC2")numComps = 2;\n            else if (acc.type == "VEC3")numComps = 3;\n            else if (acc.type == "VEC4")numComps = 4;\n            else if (acc.type == "MAT4")numComps = 16;\n            else console.error("unknown accessor type", acc.type);\n\n            //   const decoder = new decoderModule.Decoder();\n            //   const decodedGeometry = decodeDracoData(data, decoder);\n            //   // Encode mesh\n            //   encodeMeshToFile(decodedGeometry, decoder);\n\n            //   decoderModule.destroy(decoder);\n            //   decoderModule.destroy(decodedGeometry);\n\n            // 5120 (BYTE)\t1\n            // 5121 (UNSIGNED_BYTE)\t1\n            // 5122 (SHORT)\t2\n\n            if (chunks[1].dataView)\n            {\n                if (view)\n                {\n                    const num = acc.count * numComps;\n                    let accPos = (view.byteOffset || 0) + (acc.byteOffset || 0);\n                    let stride = view.byteStride || 0;\n                    let dataBuff = null;\n\n                    if (acc.componentType == 5126 || acc.componentType == 5125) // 4byte FLOAT or INT\n                    {\n                        stride = stride || 4;\n\n                        const isInt = acc.componentType == 5125;\n                        if (isInt)dataBuff = new Uint32Array(num);\n                        else dataBuff = new Float32Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            if (isInt) dataBuff[j] = chunks[1].dataView.getUint32(accPos, le);\n                            else dataBuff[j] = chunks[1].dataView.getFloat32(accPos, le);\n\n                            if (stride != 4 && (j + 1) % numComps === 0)accPos += stride - (numComps * 4);\n                            accPos += 4;\n                        }\n                    }\n                    else if (acc.componentType == 5123) // UNSIGNED_SHORT\n                    {\n                        stride = stride || 2;\n\n                        dataBuff = new Uint16Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            dataBuff[j] = chunks[1].dataView.getUint16(accPos, le);\n\n                            if (stride != 2 && (j + 1) % numComps === 0) accPos += stride - (numComps * 2);\n\n                            accPos += 2;\n                        }\n                    }\n                    else if (acc.componentType == 5121) // UNSIGNED_BYTE\n                    {\n                        stride = stride || 1;\n\n                        dataBuff = new Uint8Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            dataBuff[j] = chunks[1].dataView.getUint8(accPos, le);\n\n                            if (stride != 1 && (j + 1) % numComps === 0) accPos += stride - (numComps * 1);\n\n                            accPos += 1;\n                        }\n                    }\n\n                    else\n                    {\n                        console.error("unknown component type", acc.componentType);\n                    }\n\n                    gltf.accBuffers.push(dataBuff);\n                }\n                else\n                {\n                    // console.log("has no dataview");\n                }\n            }\n        }\n    }\n\n    gltf.timing.push(["Parse mesh groups", Math.round((performance.now() - gltf.startTime))]);\n\n    gltf.json.meshes = gltf.json.meshes || [];\n\n    if (gltf.json.meshes)\n    {\n        for (i = 0; i < gltf.json.meshes.length; i++)\n        {\n            const mesh = new gltfMeshGroup(gltf, gltf.json.meshes[i]);\n            gltf.meshes.push(mesh);\n        }\n    }\n\n    gltf.timing.push(["Parse nodes", Math.round((performance.now() - gltf.startTime))]);\n\n    for (i = 0; i < gltf.json.nodes.length; i++)\n    {\n        if (gltf.json.nodes[i].children)\n            for (j = 0; j < gltf.json.nodes[i].children.length; j++)\n            {\n                gltf.json.nodes[gltf.json.nodes[i].children[j]].isChild = true;\n            }\n    }\n\n    for (i = 0; i < gltf.json.nodes.length; i++)\n    {\n        const node = new gltfNode(gltf.json.nodes[i], gltf);\n        gltf.nodes.push(node);\n    }\n\n    for (i = 0; i < gltf.nodes.length; i++)\n    {\n        const node = gltf.nodes[i];\n\n        if (!node.children) continue;\n        for (let j = 0; j < node.children.length; j++)\n        {\n            gltf.nodes[node.children[j]].parent = node;\n        }\n    }\n\n    for (i = 0; i < gltf.nodes.length; i++)\n    {\n        gltf.nodes[i].initSkin();\n    }\n\n    needsMatUpdate = true;\n\n    gltf.timing.push(["load anims", Math.round((performance.now() - gltf.startTime))]);\n\n    if (gltf.json.animations) loadAnims(gltf);\n\n    gltf.timing.push(["load cameras", Math.round((performance.now() - gltf.startTime))]);\n\n    if (gltf.json.cameras) loadCams(gltf);\n\n    gltf.timing.push(["finished", Math.round((performance.now() - gltf.startTime))]);\n    return gltf;\n}\n',inc_mesh_js:'let gltfMesh = class\n{\n    constructor(name, prim, gltf, finished)\n    {\n        this.POINTS = 0;\n        this.LINES = 1;\n        this.LINE_LOOP = 2;\n        this.LINE_STRIP = 3;\n        this.TRIANGLES = 4;\n        this.TRIANGLE_STRIP = 5;\n        this.TRIANGLE_FAN = 6;\n\n        this.test = 0;\n        this.name = name;\n        this.submeshIndex = 0;\n        this.material = prim.material;\n        // console.log(prim);\n        this.mesh = null;\n        this.geom = new CGL.Geometry("gltf_" + this.name);\n        this.geom.verticesIndices = [];\n        this.bounds = null;\n        this.primitive = 4;\n        this.morphTargetsRenderMod = null;\n        this.weights = prim.weights;\n\n        if (prim.hasOwnProperty("mode")) this.primitive = prim.mode;\n\n        if (prim.hasOwnProperty("indices")) this.geom.verticesIndices = gltf.accBuffers[prim.indices];\n\n        gltf.loadingMeshes = gltf.loadingMeshes || 0;\n        gltf.loadingMeshes++;\n\n        this.materialJson =\n            this._matPbrMetalness =\n            this._matPbrRoughness =\n            this._matDiffuseColor = null;\n\n        if (gltf.json.materials)\n        {\n            if (this.material != -1) this.materialJson = gltf.json.materials[this.material];\n\n            if (this.materialJson && this.materialJson.pbrMetallicRoughness)\n            {\n                if (!this.materialJson.pbrMetallicRoughness.hasOwnProperty("baseColorFactor"))\n                {\n                    this._matDiffuseColor = [1, 1, 1, 1];\n                }\n                else\n                {\n                    this._matDiffuseColor = this.materialJson.pbrMetallicRoughness.baseColorFactor;\n                }\n\n                this._matDiffuseColor = this.materialJson.pbrMetallicRoughness.baseColorFactor;\n\n                if (!this.materialJson.pbrMetallicRoughness.hasOwnProperty("metallicFactor"))\n                {\n                    this._matPbrMetalness = 1.0;\n                }\n                else\n                {\n                    this._matPbrMetalness = this.materialJson.pbrMetallicRoughness.metallicFactor || null;\n                }\n\n                if (!this.materialJson.pbrMetallicRoughness.hasOwnProperty("roughnessFactor"))\n                {\n                    this._matPbrRoughness = 1.0;\n                }\n                else\n                {\n                    this._matPbrRoughness = this.materialJson.pbrMetallicRoughness.roughnessFactor || null;\n                }\n            }\n        }\n\n        if (gltf.useDraco && prim.extensions.KHR_draco_mesh_compression)\n        {\n            const view = gltf.chunks[0].data.bufferViews[prim.extensions.KHR_draco_mesh_compression.bufferView];\n            const num = view.byteLength;\n            const dataBuff = new Int8Array(num);\n            let accPos = (view.byteOffset || 0);// + (acc.byteOffset || 0);\n            for (let j = 0; j < num; j++)\n            {\n                dataBuff[j] = gltf.chunks[1].dataView.getInt8(accPos, le);\n                accPos++;\n            }\n\n            const dracoDecoder = window.DracoDecoder;\n            dracoDecoder.decodeGeometry(dataBuff.buffer, (geometry) =>\n            {\n                const geom = new CGL.Geometry("draco mesh " + name);\n\n                for (let i = 0; i < geometry.attributes.length; i++)\n                {\n                    const attr = geometry.attributes[i];\n\n                    if (attr.name === "position") geom.vertices = attr.array;\n                    else if (attr.name === "normal") geom.vertexNormals = attr.array;\n                    else if (attr.name === "uv") geom.texCoords = attr.array;\n                    else if (attr.name === "color") geom.vertexColors = this.calcVertexColors(attr.array);\n                    else if (attr.name === "joints") geom.setAttribute("attrJoints", Array.from(attr.array), 4);\n                    else if (attr.name === "weights")\n                    {\n                        const arr4 = new Float32Array(attr.array.length / attr.itemSize * 4);\n\n                        for (let k = 0; k < attr.array.length / attr.itemSize; k++)\n                        {\n                            arr4[k * 4] = arr4[k * 4 + 1] = arr4[k * 4 + 2] = arr4[k * 4 + 3] = 0;\n                            for (let j = 0; j < attr.itemSize; j++)\n                                arr4[k * 4 + j] = attr.array[k * attr.itemSize + j];\n                        }\n                        geom.setAttribute("attrWeights", arr4, 4);\n                    }\n                    else op.logWarn("unknown draco attrib", attr);\n                }\n\n                geometry.attributes = null;\n                geom.verticesIndices = geometry.index.array;\n\n                this.setGeom(geom);\n\n                this.mesh = null;\n                gltf.loadingMeshes--;\n                gltf.timing.push(["draco decode", Math.round((performance.now() - gltf.startTime))]);\n\n                if (finished)finished(this);\n            }, (error) => { op.logError(error); });\n        }\n        else\n        {\n            gltf.loadingMeshes--;\n            this.fillGeomAttribs(gltf, this.geom, prim.attributes);\n\n            if (prim.targets)\n            {\n                for (let j = 0; j < prim.targets.length; j++)\n                {\n                    const tgeom = new CGL.Geometry("gltf_target_" + j);\n\n                    // if (prim.hasOwnProperty("indices")) tgeom.verticesIndices = gltf.accBuffers[prim.indices];\n\n                    this.fillGeomAttribs(gltf, tgeom, prim.targets[j], false);\n\n                    // { // calculate normals for final position of morphtarget for later...\n                    //     for (let i = 0; i < tgeom.vertices.length; i++) tgeom.vertices[i] += this.geom.vertices[i];\n                    //     tgeom.calculateNormals();\n                    //     for (let i = 0; i < tgeom.vertices.length; i++) tgeom.vertices[i] -= this.geom.vertices[i];\n                    // }\n\n                    this.geom.morphTargets.push(tgeom);\n                }\n            }\n            if (finished)finished(this);\n        }\n    }\n\n    _linearToSrgb(x)\n    {\n        if (x <= 0)\n            return 0;\n        else if (x >= 1)\n            return 1;\n        else if (x < 0.0031308)\n            return x * 12.92;\n        else\n            return x ** (1 / 2.2) * 1.055 - 0.055;\n    }\n\n    calcVertexColors(arr)\n    {\n        let vertexColors = null;\n        if (arr instanceof Float32Array)\n        {\n            let div = false;\n            for (let i = 0; i < arr.length; i++)\n            {\n                if (arr[i] > 1)\n                {\n                    div = true;\n                    continue;\n                }\n            }\n\n            if (div)\n                for (let i = 0; i < arr.length; i++) arr[i] /= 65535;\n\n            vertexColors = arr;\n        }\n\n        else if (arr instanceof Uint16Array)\n        {\n            const fb = new Float32Array(arr.length);\n            for (let i = 0; i < arr.length; i++) fb[i] = arr[i] / 65535;\n\n            vertexColors = fb;\n        }\n        else vertexColors = arr;\n\n        for (let i = 0; i < vertexColors.length; i++)\n        {\n            vertexColors[i] = this._linearToSrgb(vertexColors[i]);\n        }\n\n        return vertexColors;\n    }\n\n    fillGeomAttribs(gltf, tgeom, attribs, setGeom)\n    {\n        if (attribs.hasOwnProperty("POSITION")) tgeom.vertices = gltf.accBuffers[attribs.POSITION];\n        if (attribs.hasOwnProperty("NORMAL")) tgeom.vertexNormals = gltf.accBuffers[attribs.NORMAL];\n        if (attribs.hasOwnProperty("TANGENT")) tgeom.tangents = gltf.accBuffers[attribs.TANGENT];\n\n        if (attribs.hasOwnProperty("COLOR_0")) tgeom.vertexColors = this.calcVertexColors(gltf.accBuffers[attribs.COLOR_0]);\n        if (attribs.hasOwnProperty("COLOR_1")) tgeom.setAttribute("attrVertColor1", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_1]), 4);\n        if (attribs.hasOwnProperty("COLOR_2")) tgeom.setAttribute("attrVertColor2", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_2]), 4);\n        if (attribs.hasOwnProperty("COLOR_3")) tgeom.setAttribute("attrVertColor3", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_3]), 4);\n        if (attribs.hasOwnProperty("COLOR_4")) tgeom.setAttribute("attrVertColor4", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_4]), 4);\n\n        if (attribs.hasOwnProperty("TEXCOORD_0")) tgeom.texCoords = gltf.accBuffers[attribs.TEXCOORD_0];\n        if (attribs.hasOwnProperty("TEXCOORD_1")) tgeom.setAttribute("attrTexCoord1", gltf.accBuffers[attribs.TEXCOORD_1], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_2")) tgeom.setAttribute("attrTexCoord2", gltf.accBuffers[attribs.TEXCOORD_2], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_3")) tgeom.setAttribute("attrTexCoord3", gltf.accBuffers[attribs.TEXCOORD_3], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_4")) tgeom.setAttribute("attrTexCoord4", gltf.accBuffers[attribs.TEXCOORD_4], 2);\n\n        if (attribs.hasOwnProperty("WEIGHTS_0"))\n        {\n            tgeom.setAttribute("attrWeights", gltf.accBuffers[attribs.WEIGHTS_0], 4);\n        }\n        if (attribs.hasOwnProperty("JOINTS_0"))\n        {\n            if (!gltf.accBuffers[attribs.JOINTS_0])console.log("no !gltf.accBuffers[attribs.JOINTS_0]");\n            tgeom.setAttribute("attrJoints", gltf.accBuffers[attribs.JOINTS_0], 4);\n        }\n\n        if (attribs.hasOwnProperty("POSITION")) gltf.accBuffersDelete.push(attribs.POSITION);\n        if (attribs.hasOwnProperty("NORMAL")) gltf.accBuffersDelete.push(attribs.NORMAL);\n        if (attribs.hasOwnProperty("TEXCOORD_0")) gltf.accBuffersDelete.push(attribs.TEXCOORD_0);\n        if (attribs.hasOwnProperty("TANGENT")) gltf.accBuffersDelete.push(attribs.TANGENT);\n        if (attribs.hasOwnProperty("COLOR_0"))gltf.accBuffersDelete.push(attribs.COLOR_0);\n        if (attribs.hasOwnProperty("COLOR_0"))gltf.accBuffersDelete.push(attribs.COLOR_0);\n        if (attribs.hasOwnProperty("COLOR_1"))gltf.accBuffersDelete.push(attribs.COLOR_1);\n        if (attribs.hasOwnProperty("COLOR_2"))gltf.accBuffersDelete.push(attribs.COLOR_2);\n        if (attribs.hasOwnProperty("COLOR_3"))gltf.accBuffersDelete.push(attribs.COLOR_3);\n\n        if (attribs.hasOwnProperty("TEXCOORD_1")) gltf.accBuffersDelete.push(attribs.TEXCOORD_1);\n        if (attribs.hasOwnProperty("TEXCOORD_2")) gltf.accBuffersDelete.push(attribs.TEXCOORD_2);\n        if (attribs.hasOwnProperty("TEXCOORD_3")) gltf.accBuffersDelete.push(attribs.TEXCOORD_3);\n        if (attribs.hasOwnProperty("TEXCOORD_4")) gltf.accBuffersDelete.push(attribs.TEXCOORD_4);\n\n        if (setGeom !== false) if (tgeom && tgeom.verticesIndices) this.setGeom(tgeom);\n    }\n\n    setGeom(geom)\n    {\n        if (inNormFormat.get() == "X-ZY")\n        {\n            for (let i = 0; i < geom.vertexNormals.length; i += 3)\n            {\n                let t = geom.vertexNormals[i + 2];\n                geom.vertexNormals[i + 2] = geom.vertexNormals[i + 1];\n                geom.vertexNormals[i + 1] = -t;\n            }\n        }\n\n        if (inVertFormat.get() == "XZ-Y")\n        {\n            for (let i = 0; i < geom.vertices.length; i += 3)\n            {\n                let t = geom.vertices[i + 2];\n                geom.vertices[i + 2] = -geom.vertices[i + 1];\n                geom.vertices[i + 1] = t;\n            }\n        }\n\n        if (this.primitive == this.TRIANGLES)\n        {\n            if (inCalcNormals.get() == "Force Smooth") geom.calculateNormals();\n            else if (!geom.vertexNormals.length && inCalcNormals.get() == "Auto") geom.calculateNormals({ "smooth": false });\n\n            if ((!geom.biTangents || geom.biTangents.length == 0) && geom.tangents)\n            {\n                const bitan = vec3.create();\n                const tan = vec3.create();\n\n                const tangents = geom.tangents;\n                geom.tangents = new Float32Array(tangents.length / 4 * 3);\n                geom.biTangents = new Float32Array(tangents.length / 4 * 3);\n\n                for (let i = 0; i < tangents.length; i += 4)\n                {\n                    const idx = i / 4 * 3;\n\n                    vec3.cross(\n                        bitan,\n                        [geom.vertexNormals[idx], geom.vertexNormals[idx + 1], geom.vertexNormals[idx + 2]],\n                        [tangents[i], tangents[i + 1], tangents[i + 2]]\n                    );\n\n                    vec3.div(bitan, bitan, [tangents[i + 3], tangents[i + 3], tangents[i + 3]]);\n                    vec3.normalize(bitan, bitan);\n\n                    geom.biTangents[idx + 0] = bitan[0];\n                    geom.biTangents[idx + 1] = bitan[1];\n                    geom.biTangents[idx + 2] = bitan[2];\n\n                    geom.tangents[idx + 0] = tangents[i + 0];\n                    geom.tangents[idx + 1] = tangents[i + 1];\n                    geom.tangents[idx + 2] = tangents[i + 2];\n                }\n            }\n\n            if (geom.tangents.length === 0 || inCalcNormals.get() != "Never")\n            {\n                // console.log("[gltf ]no tangents... calculating tangents...");\n                geom.calcTangentsBitangents();\n            }\n        }\n\n        this.geom = geom;\n\n        this.bounds = geom.getBounds();\n    }\n\n    render(cgl, ignoreMaterial, skinRenderer)\n    {\n        if (!this.mesh && this.geom && this.geom.verticesIndices)\n        {\n            let g = this.geom;\n            if (this.geom.vertices.length / 3 > 64000)\n            {\n                g = this.geom.copy();\n                g.unIndex(false, true);\n            }\n\n            let glprim;\n            if (this.primitive == this.TRIANGLES)glprim = cgl.gl.TRIANGLES;\n            else if (this.primitive == this.LINES)glprim = cgl.gl.LINES;\n            else if (this.primitive == this.LINE_STRIP)glprim = cgl.gl.LINE_STRIP;\n            else if (this.primitive == this.POINTS)glprim = cgl.gl.POINTS;\n            else\n            {\n                op.logWarn("unknown primitive type", this);\n            }\n\n            this.mesh = op.patch.cg.createMesh(g, glprim);\n            // this.mesh = new CGL.Mesh(cgl, g, glprim);\n        }\n        else\n        {\n            // update morphTargets\n            if (this.geom && this.geom.morphTargets.length && !this.morphTargetsRenderMod)\n            {\n                this.mesh.addVertexNumbers = true;\n                this.morphTargetsRenderMod = new GltfTargetsRenderer(this);\n            }\n\n            let useMat = !ignoreMaterial && this.material != -1 && gltf.shaders[this.material];\n            if (skinRenderer)useMat = false;\n\n            if (useMat) cgl.pushShader(gltf.shaders[this.material]);\n\n            const currentShader = cgl.getShader() || {};\n            const uniDiff = currentShader.uniformColorDiffuse;\n\n            const uniPbrMetalness = currentShader.uniformPbrMetalness;\n            const uniPbrRoughness = currentShader.uniformPbrRoughness;\n\n            if (!gltf.shaders[this.material] && inUseMatProps.get())\n            {\n                if (uniDiff && this._matDiffuseColor)\n                {\n                    this._matDiffuseColorOrig = [uniDiff.getValue()[0], uniDiff.getValue()[1], uniDiff.getValue()[2], uniDiff.getValue()[3]];\n                    uniDiff.setValue(this._matDiffuseColor);\n                }\n\n                if (uniPbrMetalness)\n                    if (this._matPbrMetalness != null)\n                    {\n                        this._matPbrMetalnessOrig = uniPbrMetalness.getValue();\n                        uniPbrMetalness.setValue(this._matPbrMetalness);\n                    }\n                    else\n                        uniPbrMetalness.setValue(0);\n\n                if (uniPbrRoughness)\n                    if (this._matPbrRoughness != null)\n                    {\n                        this._matPbrRoughnessOrig = uniPbrRoughness.getValue();\n                        uniPbrRoughness.setValue(this._matPbrRoughness);\n                    }\n                    else\n                    {\n                        uniPbrRoughness.setValue(0);\n                    }\n            }\n\n            if (this.morphTargetsRenderMod) this.morphTargetsRenderMod.renderStart(cgl, 0);\n            if (this.mesh)\n            {\n                // console.log(this.mesh)\n                // this.mesh.lastMaterial=0;\n                this.mesh.render(cgl.getShader(), ignoreMaterial);\n            }\n            if (this.morphTargetsRenderMod) this.morphTargetsRenderMod.renderFinish(cgl);\n\n            if (inUseMatProps.get())\n            {\n                if (uniDiff && this._matDiffuseColor) uniDiff.setValue(this._matDiffuseColorOrig);\n                if (uniPbrMetalness && this._matPbrMetalnessOrig != undefined) uniPbrMetalness.setValue(this._matPbrMetalnessOrig);\n                if (uniPbrRoughness && this._matPbrRoughnessOrig != undefined) uniPbrRoughness.setValue(this._matPbrRoughnessOrig);\n            }\n\n            if (useMat) cgl.popShader();\n        }\n    }\n};\n',inc_meshGroup_js:"const gltfMeshGroup = class\n{\n    constructor(gltf, m)\n    {\n        this.bounds = new CABLES.CG.BoundingBox();\n        this.meshes = [];\n        this.name = m.name;\n        const prims = m.primitives;\n\n        for (let i = 0; i < prims.length; i++)\n        {\n            const mesh = new gltfMesh(this.name, prims[i], gltf,\n                (mesh) =>\n                {\n                    mesh.extras = m.extras;\n                    this.bounds.apply(mesh.bounds);\n                });\n\n            mesh.submeshIndex = i;\n            this.meshes.push(mesh);\n        }\n    }\n\n    render(cgl, ignoreMat, skinRenderer, _time, weights)\n    {\n        for (let i = 0; i < this.meshes.length; i++)\n        {\n            const useMat = gltf.shaders[this.meshes[i].material];\n\n            if (!ignoreMat && useMat) cgl.pushShader(gltf.shaders[this.meshes[i].material]);\n            // console.log(gltf.shaders[this.meshes[i].material],this.meshes[i].material)\n            if (skinRenderer)skinRenderer.renderStart(cgl, _time);\n            if (weights) this.meshes[i].weights = weights;\n            this.meshes[i].render(cgl, ignoreMat, skinRenderer, _time);\n            if (skinRenderer)skinRenderer.renderFinish(cgl);\n            if (!ignoreMat && useMat) cgl.popShader();\n        }\n    }\n};\n",inc_node_js:'const gltfNode = class\n{\n    constructor(node, gltf)\n    {\n        this.isChild = node.isChild || false;\n        this.name = node.name;\n        if (node.hasOwnProperty("camera")) this.camera = node.camera;\n        this.hidden = false;\n        this.mat = mat4.create();\n        this._animActions = {};\n        this.animWeights = [];\n        this._animMat = mat4.create();\n        this._tempMat = mat4.create();\n        this._tempQuat = quat.create();\n        this._tempRotmat = mat4.create();\n        this.mesh = null;\n        this.children = [];\n        this._node = node;\n        this._gltf = gltf;\n        this.absMat = mat4.create();\n        this.addTranslate = null;\n        this._tempAnimScale = null;\n        this.addMulMat = null;\n        this.updateMatrix();\n        this.skinRenderer = null;\n        this.copies = [];\n    }\n\n    get skin()\n    {\n        if (this._node.hasOwnProperty("skin")) return this._node.skin;\n        else return -1;\n    }\n\n    copy()\n    {\n        this.isCopy = true;\n        const n = new gltfNode(this._node, this._gltf);\n        n.copyOf = this;\n\n        n._animActions = this._animActions;\n        n.children = this.children;\n        if (this.skin) n.skinRenderer = new GltfSkin(this);\n\n        this.updateMatrix();\n        return n;\n    }\n\n    hasSkin()\n    {\n        if (this._node.hasOwnProperty("skin")) return this._gltf.json.skins[this._node.skin].name || "unknown";\n        return false;\n    }\n\n    initSkin()\n    {\n        if (this.skin > -1)\n        {\n            this.skinRenderer = new GltfSkin(this);\n        }\n    }\n\n    updateMatrix()\n    {\n        mat4.identity(this.mat);\n        if (this._node.translation) mat4.translate(this.mat, this.mat, this._node.translation);\n\n        if (this._node.rotation)\n        {\n            const rotmat = mat4.create();\n            this._rot = this._node.rotation;\n\n            mat4.fromQuat(rotmat, this._node.rotation);\n            mat4.mul(this.mat, this.mat, rotmat);\n        }\n\n        if (this._node.scale)\n        {\n            this._scale = this._node.scale;\n            mat4.scale(this.mat, this.mat, this._scale);\n        }\n\n        if (this._node.hasOwnProperty("mesh"))\n        {\n            this.mesh = this._gltf.meshes[this._node.mesh];\n            if (this.isCopy)\n            {\n                // console.log(this.mesh);\n            }\n        }\n\n        if (this._node.children)\n        {\n            for (let i = 0; i < this._node.children.length; i++)\n            {\n                this._gltf.json.nodes[i].isChild = true;\n                if (this._gltf.nodes[this._node.children[i]]) this._gltf.nodes[this._node.children[i]].isChild = true;\n                this.children.push(this._node.children[i]);\n            }\n        }\n    }\n\n    unHide()\n    {\n        this.hidden = false;\n        for (let i = 0; i < this.children.length; i++)\n            if (this.children[i].unHide) this.children[i].unHide();\n    }\n\n    calcBounds(gltf, mat, bounds)\n    {\n        const localMat = mat4.create();\n\n        if (mat) mat4.copy(localMat, mat);\n        if (this.mat) mat4.mul(localMat, localMat, this.mat);\n\n        if (this.mesh)\n        {\n            const bb = this.mesh.bounds.copy();\n            bb.mulMat4(localMat);\n            bounds.apply(bb);\n\n            if (bounds.changed)\n            {\n                boundingPoints.push(\n                    bb._min[0] || 0, bb._min[1] || 0, bb._min[2] || 0,\n                    bb._max[0] || 0, bb._max[1] || 0, bb._max[2] || 0);\n            }\n        }\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            if (gltf.nodes[this.children[i]] && gltf.nodes[this.children[i]].calcBounds)\n            {\n                const b = gltf.nodes[this.children[i]].calcBounds(gltf, localMat, bounds);\n\n                bounds.apply(b);\n            }\n        }\n\n        if (bounds.changed) return bounds;\n        else return null;\n    }\n\n    setAnimAction(name)\n    {\n        // console.log("setAnimAction:", name);\n        if (!name) return;\n\n        this._currentAnimaction = name;\n\n        if (name && !this._animActions[name])\n        {\n            // console.log("no action found:", name,this._animActions);\n            return null;\n        }\n\n        // else console.log("YES action found:", name);\n        // console.log(this._animActions);\n\n        for (let path in this._animActions[name])\n        {\n            if (path == "translation") this._animTrans = this._animActions[name][path];\n            else if (path == "rotation") this._animRot = this._animActions[name][path];\n            else if (path == "scale") this._animScale = this._animActions[name][path];\n            else if (path == "weights") this.animWeights = this._animActions[name][path];\n            else console.log("[gltfNode] unknown anim path", path, this._animActions[name][path]);\n        }\n    }\n\n    setAnim(path, name, anims)\n    {\n        if (!path || !name || !anims) return;\n\n        // console.log("setanim", this._node.name, path, name, anims);\n\n        this._animActions[name] = this._animActions[name] || {};\n\n        // console.log(this._animActions);\n        // debugger;\n\n        // for (let i = 0; i < this.copies.length; i++) this.copies[i]._animActions = this._animActions;\n\n        if (this._animActions[name][path]) op.log("[gltfNode] animation action path already exists", name, path, this._animActions[name][path]);\n\n        this._animActions[name][path] = anims;\n\n        if (path == "translation") this._animTrans = anims;\n        else if (path == "rotation") this._animRot = anims;\n        else if (path == "scale") this._animScale = anims;\n        else if (path == "weights")\n        {\n            // console.log("weights",name,path,anims)\n            this.animWeights = this._animActions[name][path];\n            // console.log(this.animWeights);\n        }\n        else console.warn("unknown anim path", path, anims);\n    }\n\n    modelMatLocal()\n    {\n        return this._animMat || this.mat;\n    }\n\n    modelMatAbs()\n    {\n        return this.absMat;\n    }\n\n    transform(cgl, _time)\n    {\n        if (!_time && _time != 0)_time = time;\n\n        this._lastTimeTrans = _time;\n\n        // console.log(this._rot)\n\n        gltfTransforms++;\n\n        if (!this._animTrans && !this._animRot && !this._animScale)\n        {\n            mat4.mul(cgl.mMatrix, cgl.mMatrix, this.mat);\n            this._animMat = null;\n        }\n        else\n        {\n            this._animMat = this._animMat || mat4.create();\n            mat4.identity(this._animMat);\n\n            const playAnims = true;\n\n            if (playAnims && this._animTrans)\n            {\n                mat4.translate(this._animMat, this._animMat, [\n                    this._animTrans[0].getValue(_time),\n                    this._animTrans[1].getValue(_time),\n                    this._animTrans[2].getValue(_time)]);\n            }\n            else\n            if (this._node.translation) mat4.translate(this._animMat, this._animMat, this._node.translation);\n\n            if (playAnims && this._animRot)\n            {\n                if (this._animRot[0].defaultEasing == CABLES.EASING_LINEAR) CABLES.Anim.slerpQuaternion(_time, this._tempQuat, this._animRot[0], this._animRot[1], this._animRot[2], this._animRot[3]);\n                else if (this._animRot[0].defaultEasing == CABLES.EASING_ABSOLUTE)\n                {\n                    this._tempQuat[0] = this._animRot[0].getValue(_time);\n                    this._tempQuat[1] = this._animRot[1].getValue(_time);\n                    this._tempQuat[2] = this._animRot[2].getValue(_time);\n                    this._tempQuat[3] = this._animRot[3].getValue(_time);\n                }\n                else if (this._animRot[0].defaultEasing == CABLES.EASING_CUBICSPLINE)\n                {\n                    CABLES.Anim.slerpQuaternion(_time, this._tempQuat, this._animRot[0], this._animRot[1], this._animRot[2], this._animRot[3]);\n                }\n\n                mat4.fromQuat(this._tempMat, this._tempQuat);\n                mat4.mul(this._animMat, this._animMat, this._tempMat);\n            }\n            else if (this._rot)\n            {\n                mat4.fromQuat(this._tempRotmat, this._rot);\n                mat4.mul(this._animMat, this._animMat, this._tempRotmat);\n            }\n\n            if (playAnims && this._animScale)\n            {\n                if (!this._tempAnimScale) this._tempAnimScale = [1, 1, 1];\n                this._tempAnimScale[0] = this._animScale[0].getValue(_time);\n                this._tempAnimScale[1] = this._animScale[1].getValue(_time);\n                this._tempAnimScale[2] = this._animScale[2].getValue(_time);\n                mat4.scale(this._animMat, this._animMat, this._tempAnimScale);\n            }\n            else if (this._scale) mat4.scale(this._animMat, this._animMat, this._scale);\n\n            mat4.mul(cgl.mMatrix, cgl.mMatrix, this._animMat);\n        }\n\n        if (this.animWeights)\n        {\n            this.weights = this.weights || [];\n\n            let str = "";\n            for (let i = 0; i < this.animWeights.length; i++)\n            {\n                this.weights[i] = this.animWeights[i].getValue(_time);\n                str += this.weights[i] + "/";\n            }\n\n            // console.log(str);\n            // this.mesh.weights=this.animWeights.get(_time);\n            // console.log(this.animWeights);\n        }\n\n        if (this.addTranslate) mat4.translate(cgl.mMatrix, cgl.mMatrix, this.addTranslate);\n\n        if (this.addMulMat) mat4.mul(cgl.mMatrix, cgl.mMatrix, this.addMulMat);\n\n        mat4.copy(this.absMat, cgl.mMatrix);\n    }\n\n    render(cgl, dontTransform, dontDrawMesh, ignoreMaterial, ignoreChilds, drawHidden, _time)\n    {\n        if (!dontTransform) cgl.pushModelMatrix();\n\n        if (_time === undefined) _time = gltf.time;\n\n        if (!dontTransform || this.skinRenderer) this.transform(cgl, _time);\n\n        if (this.hidden && !drawHidden)\n        {\n        }\n        else\n        {\n            if (this.skinRenderer)\n            {\n                this.skinRenderer.time = _time;\n                if (!dontDrawMesh)\n                    this.mesh.render(cgl, ignoreMaterial, this.skinRenderer, _time, this.weights);\n            }\n            else\n            {\n                if (this.mesh && !dontDrawMesh)\n                    this.mesh.render(cgl, ignoreMaterial, null, _time, this.weights);\n            }\n        }\n\n        if (!ignoreChilds && !this.hidden)\n            for (let i = 0; i < this.children.length; i++)\n                if (gltf.nodes[this.children[i]])\n                    gltf.nodes[this.children[i]].render(cgl, dontTransform, dontDrawMesh, ignoreMaterial, ignoreChilds, drawHidden, _time);\n\n        if (!dontTransform)cgl.popModelMatrix();\n    }\n};\n',inc_print_js:'let tab = null;\n\nfunction closeTab()\n{\n    if (tab)gui.mainTabs.closeTab(tab.id);\n    tab = null;\n}\n\nfunction formatVec(arr)\n{\n    const nums = [];\n    for (let i = 0; i < arr.length; i++)\n    {\n        nums.push(Math.round(arr[i] * 1000) / 1000);\n    }\n\n    return nums.join(",");\n}\n\nfunction printNode(html, node, level)\n{\n    if (!gltf) return;\n\n    html += "<tr class=\\"row\\">";\n\n    let ident = "";\n    let identSpace = "";\n\n    for (let i = 1; i < level; i++)\n    {\n        identSpace += "&nbsp;&nbsp;&nbsp;";\n        let identClass = "identBg";\n        if (i == 1)identClass = "identBgLevel0";\n        ident += "<td class=\\"ident " + identClass + "\\" ><div style=\\"\\"></div></td>";\n    }\n    let id = CABLES.uuid();\n    html += ident;\n    html += "<td colspan=\\"" + (21 - level) + "\\">";\n\n    if (node.mesh && node.mesh.meshes.length)html += "<span class=\\"icon icon-cube\\"></span>&nbsp;";\n    else html += "<span class=\\"icon icon-box-select\\"></span> &nbsp;";\n\n    html += node.name + "</td><td></td>";\n\n    if (node.mesh)\n    {\n        html += "<td>";\n        for (let i = 0; i < node.mesh.meshes.length; i++)\n        {\n            if (i > 0)html += ", ";\n            html += node.mesh.meshes[i].name;\n        }\n\n        html += "</td>";\n\n        html += "<td>";\n        html += node.hasSkin() || "-";\n        html += "</td>";\n\n        html += "<td>";\n        let countMats = 0;\n        for (let i = 0; i < node.mesh.meshes.length; i++)\n        {\n            if (countMats > 0)html += ", ";\n            if (gltf.json.materials && node.mesh.meshes[i].hasOwnProperty("material"))\n            {\n                if (gltf.json.materials[node.mesh.meshes[i].material])\n                {\n                    html += gltf.json.materials[node.mesh.meshes[i].material].name;\n                    countMats++;\n                }\n            }\n        }\n        if (countMats == 0)html += "none";\n        html += "</td>";\n    }\n    else\n    {\n        html += "<td>-</td><td>-</td><td>-</td>";\n    }\n\n    html += "<td>";\n\n    if (node._node.translation || node._node.rotation || node._node.scale)\n    {\n        let info = "";\n\n        if (node._node.translation)info += "Translate: `" + formatVec(node._node.translation) + "` || ";\n        if (node._node.rotation)info += "Rotation: `" + formatVec(node._node.rotation) + "` || ";\n        if (node._node.scale)info += "Scale: `" + formatVec(node._node.scale) + "` || ";\n\n        html += "<span class=\\"icon icon-gizmo info\\" data-info=\\"" + info + "\\"></span> &nbsp;";\n    }\n\n    if (node._animRot || node._animScale || node._animTrans)\n    {\n        let info = "Animated: ";\n        if (node._animRot) info += "Rot ";\n        if (node._animScale) info += "Scale ";\n        if (node._animTrans) info += "Trans ";\n\n        html += "<span class=\\"icon icon-clock info\\" data-info=\\"" + info + "\\"></span>&nbsp;";\n    }\n\n    if (!node._node.translation && !node._node.rotation && !node._node.scale && !node._animRot && !node._animScale && !node._animTrans) html += "-";\n\n    html += "</td>";\n\n    html += "<td>";\n    let hideclass = "";\n    if (node.hidden)hideclass = "node-hidden";\n\n    // html+=\'\';\n    html += "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',\'transform\')\\" class=\\"treebutton\\">Transform</a>";\n    html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',\'hierarchy\')\\" class=\\"treebutton\\">Hierarchy</a>";\n    html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\')\\" class=\\"treebutton\\">Node</a>";\n\n    if (node.hasSkin())\n        html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',false,{skin:true});\\" class=\\"treebutton\\">Skin</a>";\n\n    html += "</td><td>";\n    html += "&nbsp;<span class=\\"icon iconhover icon-eye " + hideclass + "\\" onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').toggleNodeVisibility(\'" + node.name + "\');this.classList.toggle(\'node-hidden\');\\"></span>";\n    html += "</td>";\n\n    html += "</tr>";\n\n    if (node.children)\n    {\n        for (let i = 0; i < node.children.length; i++)\n            html = printNode(html, gltf.nodes[node.children[i]], level + 1);\n    }\n\n    return html;\n}\n\nfunction printMaterial(mat, idx)\n{\n    let html = "<tr>";\n    html += " <td>" + idx + "</td>";\n    html += " <td>" + mat.name + "</td>";\n\n    html += " <td>";\n\n    const info = JSON.stringify(mat, null, 4).replaceAll("\\"", "").replaceAll("\\n", "<br/>");\n\n    html += "<span class=\\"icon icon-info\\" onclick=\\"new CABLES.UI.ModalDialog({ \'html\': \'<pre>" + info + "</pre>\', \'title\': \'" + mat.name + "\' });\\"></span>&nbsp;";\n\n    if (mat.pbrMetallicRoughness && mat.pbrMetallicRoughness.baseColorFactor)\n    {\n        let rgb = "";\n        rgb += "" + Math.round(mat.pbrMetallicRoughness.baseColorFactor[0] * 255);\n        rgb += "," + Math.round(mat.pbrMetallicRoughness.baseColorFactor[1] * 255);\n        rgb += "," + Math.round(mat.pbrMetallicRoughness.baseColorFactor[2] * 255);\n\n        html += "<div style=\\"width:15px;height:15px;background-color:rgb(" + rgb + ");display:inline-block\\">&nbsp;</a>";\n    }\n    html += " <td style=\\"\\">" + (gltf.shaders[idx] ? "-" : "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').assignMaterial(\'" + mat.name + "\')\\" class=\\"treebutton\\">Assign</a>") + "<td>";\n    html += "<td>";\n\n    html += "</tr>";\n    return html;\n}\n\nfunction printInfo()\n{\n    if (!gltf) return;\n\n    const startTime = performance.now();\n    const sizes = {};\n    let html = "<div style=\\"overflow:scroll;width:100%;height:100%\\">";\n\n    html += "File: <a href=\\"" + CABLES.sandbox.getCablesUrl() + "/asset/patches/?filename=" + inFile.get() + "\\" target=\\"_blank\\">" + CABLES.basename(inFile.get()) + "</a><br/>";\n\n    html += "Generator:" + gltf.json.asset.generator;\n\n    let numNodes = 0;\n    if (gltf.json.nodes)numNodes = gltf.json.nodes.length;\n    html += "<div id=\\"groupNodes\\">Nodes (" + numNodes + ")</div>";\n\n    html += "<table id=\\"sectionNodes\\" class=\\"table treetable\\">";\n\n    html += "<tr>";\n    html += " <th colspan=\\"21\\">Name</th>";\n    html += " <th>Mesh</th>";\n    html += " <th>Skin</th>";\n    html += " <th>Material</th>";\n    html += " <th>Transform</th>";\n    html += " <th>Expose</th>";\n    html += " <th></th>";\n    html += "</tr>";\n\n    for (let i = 0; i < gltf.nodes.length; i++)\n    {\n        if (!gltf.nodes[i].isChild)\n            html = printNode(html, gltf.nodes[i], 1);\n    }\n    html += "</table>";\n\n    // / //////////////////\n\n    let numMaterials = 0;\n    if (gltf.json.materials)numMaterials = gltf.json.materials.length;\n    html += "<div id=\\"groupMaterials\\">Materials (" + numMaterials + ")</div>";\n\n    if (!gltf.json.materials || gltf.json.materials.length == 0)\n    {\n    }\n    else\n    {\n        html += "<table id=\\"materialtable\\"  class=\\"table treetable\\">";\n        html += "<tr>";\n        html += " <th>Index</th>";\n        html += " <th>Name</th>";\n        html += " <th>Color</th>";\n        html += " <th>Function</th>";\n        html += " <th></th>";\n        html += "</tr>";\n        for (let i = 0; i < gltf.json.materials.length; i++)\n        {\n            html += printMaterial(gltf.json.materials[i], i);\n        }\n        html += "</table>";\n    }\n\n    // / ///////////////////////\n\n    html += "<div id=\\"groupMeshes\\">Meshes (" + gltf.json.meshes.length + ")</div>";\n\n    html += "<table id=\\"meshestable\\"  class=\\"table treetable\\">";\n    html += "<tr>";\n    html += " <th>Name</th>";\n    html += " <th>Node</th>";\n    html += " <th>Material</th>";\n    html += " <th>Vertices</th>";\n    html += " <th>Attributes</th>";\n    html += "</tr>";\n\n    let sizeBufferViews = [];\n    sizes.meshes = 0;\n    sizes.meshTargets = 0;\n\n    for (let i = 0; i < gltf.json.meshes.length; i++)\n    {\n        html += "<tr>";\n        html += "<td>" + gltf.json.meshes[i].name + "</td>";\n\n        html += "<td>";\n        let count = 0;\n        let nodename = "";\n        for (let j = 0; j < gltf.json.nodes.length; j++)\n        {\n            if (gltf.json.nodes[j].mesh == i)\n            {\n                count++;\n                if (count == 1)\n                {\n                    nodename = gltf.json.nodes[j].name;\n                }\n            }\n        }\n        if (count > 1) html += (count) + " nodes (" + nodename + " ...)";\n        else html += nodename;\n        html += "</td>";\n\n        // -------\n\n        html += "<td>";\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            if (gltf.json.meshes[i].primitives[j].hasOwnProperty("material"))\n            {\n                if (gltf.json.materials[gltf.json.meshes[i]])\n                {\n                    html += gltf.json.materials[gltf.json.meshes[i].primitives[j].material].name + " ";\n                }\n            }\n            else html += "None";\n        }\n        html += "</td>";\n\n        html += "<td>";\n        let numVerts = 0;\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            if (gltf.json.meshes[i].primitives[j].attributes.POSITION != undefined)\n            {\n                let v = parseInt(gltf.json.accessors[gltf.json.meshes[i].primitives[j].attributes.POSITION].count);\n                numVerts += v;\n                html += "" + v + "<br/>";\n            }\n            else html += "-<br/>";\n        }\n\n        if (gltf.json.meshes[i].primitives.length > 1)\n            html += "=" + numVerts;\n        html += "</td>";\n\n        html += "<td>";\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            html += Object.keys(gltf.json.meshes[i].primitives[j].attributes);\n            html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeGeom(\'" + gltf.json.meshes[i].name + "\'," + j + ")\\" class=\\"treebutton\\">Geometry</a>";\n            html += "<br/>";\n\n            if (gltf.json.meshes[i].primitives[j].targets)\n            {\n                html += gltf.json.meshes[i].primitives[j].targets.length + " targets<br/>";\n\n                if (gltf.json.meshes[i].extras && gltf.json.meshes[i].extras.targetNames)\n                    html += "Targetnames:<br/>" + gltf.json.meshes[i].extras.targetNames.join("<br/>");\n\n                html += "<br/>";\n            }\n        }\n\n        html += "</td>";\n        html += "</tr>";\n\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            const accessor = gltf.json.accessors[gltf.json.meshes[i].primitives[j].indices];\n            if (accessor)\n            {\n                let bufView = accessor.bufferView;\n\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    if (gltf.json.bufferViews[bufView])sizes.meshes += gltf.json.bufferViews[bufView].byteLength;\n                }\n            }\n\n            for (let k in gltf.json.meshes[i].primitives[j].attributes)\n            {\n                const attr = gltf.json.meshes[i].primitives[j].attributes[k];\n                const bufView2 = gltf.json.accessors[attr].bufferView;\n\n                if (sizeBufferViews.indexOf(bufView2) == -1)\n                {\n                    sizeBufferViews.push(bufView2);\n                    if (gltf.json.bufferViews[bufView2])sizes.meshes += gltf.json.bufferViews[bufView2].byteLength;\n                }\n            }\n\n            if (gltf.json.meshes[i].primitives[j].targets)\n                for (let k = 0; k < gltf.json.meshes[i].primitives[j].targets.length; k++)\n                {\n                    for (let l in gltf.json.meshes[i].primitives[j].targets[k])\n                    {\n                        const accessorIdx = gltf.json.meshes[i].primitives[j].targets[k][l];\n                        const accessor = gltf.json.accessors[accessorIdx];\n                        const bufView2 = accessor.bufferView;\n                        console.log("accessor", accessor);\n                        if (sizeBufferViews.indexOf(bufView2) == -1)\n                            if (gltf.json.bufferViews[bufView2])\n                            {\n                                sizeBufferViews.push(bufView2);\n                                sizes.meshTargets += gltf.json.bufferViews[bufView2].byteLength;\n                            }\n                    }\n                }\n        }\n    }\n    html += "</table>";\n\n    // / //////////////////////////////////\n\n    let numSamplers = 0;\n    let numAnims = 0;\n    let numKeyframes = 0;\n\n    if (gltf.json.animations)\n    {\n        numAnims = gltf.json.animations.length;\n        for (let i = 0; i < gltf.json.animations.length; i++)\n        {\n            numSamplers += gltf.json.animations[i].samplers.length;\n        }\n    }\n\n    html += "<div id=\\"groupAnims\\">Animations (" + numAnims + "/" + numSamplers + ")</div>";\n\n    if (gltf.json.animations)\n    {\n        html += "<table id=\\"sectionAnim\\" class=\\"table treetable\\">";\n        html += "<tr>";\n        html += "  <th>Name</th>";\n        html += "  <th>Target node</th>";\n        html += "  <th>Path</th>";\n        html += "  <th>Interpolation</th>";\n        html += "  <th>Keys</th>";\n        html += "</tr>";\n\n\n        sizes.animations = 0;\n\n        for (let i = 0; i < gltf.json.animations.length; i++)\n        {\n            for (let j = 0; j < gltf.json.animations[i].samplers.length; j++)\n            {\n                let bufView = gltf.json.accessors[gltf.json.animations[i].samplers[j].input].bufferView;\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    sizes.animations += gltf.json.bufferViews[bufView].byteLength;\n                }\n\n                bufView = gltf.json.accessors[gltf.json.animations[i].samplers[j].output].bufferView;\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    sizes.animations += gltf.json.bufferViews[bufView].byteLength;\n                }\n            }\n\n            for (let j = 0; j < gltf.json.animations[i].channels.length; j++)\n            {\n                html += "<tr>";\n                html += "  <td> Anim " + i + ": " + gltf.json.animations[i].name + "</td>";\n\n                html += "  <td>" + gltf.nodes[gltf.json.animations[i].channels[j].target.node].name + "</td>";\n                html += "  <td>";\n                html += gltf.json.animations[i].channels[j].target.path + " ";\n                html += "  </td>";\n\n                const smplidx = gltf.json.animations[i].channels[j].sampler;\n                const smplr = gltf.json.animations[i].samplers[smplidx];\n\n                html += "  <td>" + smplr.interpolation + "</td>";\n\n                html += "  <td>" + gltf.json.accessors[smplr.output].count;\n                numKeyframes += gltf.json.accessors[smplr.output].count;\n\n                // html += "&nbsp;&nbsp;<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').showAnim(\'" + i + "\',\'" + j + "\')\\" class=\\"icon icon-search\\"></a>";\n\n                html += "</td>";\n\n                html += "</tr>";\n            }\n        }\n\n        html += "<tr>";\n        html += "  <td></td>";\n        html += "  <td></td>";\n        html += "  <td></td>";\n        html += "  <td></td>";\n        html += "  <td>" + numKeyframes + " total</td>";\n        html += "</tr>";\n        html += "</table>";\n    }\n    else\n    {\n\n    }\n\n    // / ///////////////////\n\n    let numImages = 0;\n    if (gltf.json.images)numImages = gltf.json.images.length;\n    html += "<div id=\\"groupImages\\">Images (" + numImages + ")</div>";\n\n    if (gltf.json.images)\n    {\n        html += "<table id=\\"sectionImages\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th>type</th>";\n        html += "  <th>func</th>";\n        html += "</tr>";\n\n        sizes.images = 0;\n\n        for (let i = 0; i < gltf.json.images.length; i++)\n        {\n            if (gltf.json.images[i].hasOwnProperty("bufferView"))\n            {\n                // if (sizeBufferViews.indexOf(gltf.json.images[i].hasOwnProperty("bufferView")) == -1)console.log("image bufferview already there?!");\n                // else\n                sizes.images += gltf.json.bufferViews[gltf.json.images[i].bufferView].byteLength;\n            }\n            else console.log("image has no bufferview?!");\n\n            html += "<tr>";\n            html += "<td>" + gltf.json.images[i].name + "</td>";\n            html += "<td>" + gltf.json.images[i].mimeType + "</td>";\n            html += "<td>";\n\n            let name = gltf.json.images[i].name;\n            if (name === undefined)name = gltf.json.images[i].bufferView;\n\n            html += "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeTexture(\'" + name + "\')\\" class=\\"treebutton\\">Expose</a>";\n            html += "</td>";\n\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    // / ///////////////////////\n\n    let numCameras = 0;\n    if (gltf.json.cameras)numCameras = gltf.json.cameras.length;\n    html += "<div id=\\"groupCameras\\">Cameras (" + numCameras + ")</div>";\n\n    if (gltf.json.cameras)\n    {\n        html += "<table id=\\"sectionCameras\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th>type</th>";\n        html += "  <th>info</th>";\n        html += "</tr>";\n\n        for (let i = 0; i < gltf.json.cameras.length; i++)\n        {\n            html += "<tr>";\n            html += "<td>" + gltf.json.cameras[i].name + "</td>";\n            html += "<td>" + gltf.json.cameras[i].type + "</td>";\n            html += "<td>";\n\n            if (gltf.json.cameras[i].perspective)\n            {\n                html += "yfov: " + Math.round(gltf.json.cameras[i].perspective.yfov * 100) / 100;\n                html += ", ";\n                html += "zfar: " + Math.round(gltf.json.cameras[i].perspective.zfar * 100) / 100;\n                html += ", ";\n                html += "znear: " + Math.round(gltf.json.cameras[i].perspective.znear * 100) / 100;\n            }\n            html += "</td>";\n\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    // / ////////////////////////////////////\n\n    let numSkins = 0;\n    if (gltf.json.skins)numSkins = gltf.json.skins.length;\n    html += "<div id=\\"groupSkins\\">Skins (" + numSkins + ")</div>";\n\n    if (gltf.json.skins)\n    {\n        // html += "<h3>Skins (" + gltf.json.skins.length + ")</h3>";\n        html += "<table id=\\"sectionSkins\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th></th>";\n        html += "  <th>total joints</th>";\n        html += "</tr>";\n\n        for (let i = 0; i < gltf.json.skins.length; i++)\n        {\n            html += "<tr>";\n            html += "<td>" + gltf.json.skins[i].name + "</td>";\n            html += "<td>" + "</td>";\n            html += "<td>" + gltf.json.skins[i].joints.length + "</td>";\n            html += "<td>";\n            html += "</td>";\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    // / ////////////////////////////////////\n\n    if (gltf.timing)\n    {\n        html += "<div id=\\"groupTiming\\">Debug Loading Timing </div>";\n\n        html += "<table id=\\"sectionTiming\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>task</th>";\n        html += "  <th>time used</th>";\n        html += "</tr>";\n\n        let lt = 0;\n        for (let i = 0; i < gltf.timing.length - 1; i++)\n        {\n            html += "<tr>";\n            html += "  <td>" + gltf.timing[i][0] + "</td>";\n            html += "  <td>" + (gltf.timing[i + 1][1] - gltf.timing[i][1]) + " ms</td>";\n            html += "</tr>";\n            // lt = gltf.timing[i][1];\n        }\n        html += "</table>";\n    }\n\n    // / //////////////////////////\n\n    let sizeBin = 0;\n    if (gltf.json.buffers)\n        sizeBin = gltf.json.buffers[0].byteLength;\n\n    html += "<div id=\\"groupBinary\\">File Size Allocation (" + Math.round(sizeBin / 1024) + "k )</div>";\n\n    html += "<table id=\\"sectionBinary\\" class=\\"table treetable\\">";\n    html += "<tr>";\n    html += "  <th>name</th>";\n    html += "  <th>size</th>";\n    html += "  <th>%</th>";\n    html += "</tr>";\n    let sizeUnknown = sizeBin;\n    for (let i in sizes)\n    {\n        // html+=i+\':\'+Math.round(sizes[i]/1024);\n        html += "<tr>";\n        html += "<td>" + i + "</td>";\n        html += "<td>" + readableSize(sizes[i]) + " </td>";\n        html += "<td>" + Math.round(sizes[i] / sizeBin * 100) + "% </td>";\n        html += "<tr>";\n        sizeUnknown -= sizes[i];\n    }\n\n    if (sizeUnknown != 0)\n    {\n        html += "<tr>";\n        html += "<td>unknown</td>";\n        html += "<td>" + readableSize(sizeUnknown) + " </td>";\n        html += "<td>" + Math.round(sizeUnknown / sizeBin * 100) + "% </td>";\n        html += "<tr>";\n    }\n\n    html += "</table>";\n    html += "</div>";\n\n    tab = new CABLES.UI.Tab("GLTF " + CABLES.basename(inFile.get()), { "icon": "cube", "infotext": "tab_gltf", "padding": true, "singleton": true });\n    gui.mainTabs.addTab(tab, true);\n\n    tab.addEventListener("close", closeTab);\n    tab.html(html);\n\n    CABLES.UI.Collapsable.setup(ele.byId("groupNodes"), ele.byId("sectionNodes"), false);\n    CABLES.UI.Collapsable.setup(ele.byId("groupMaterials"), ele.byId("materialtable"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupAnims"), ele.byId("sectionAnim"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupMeshes"), ele.byId("meshestable"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupCameras"), ele.byId("sectionCameras"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupImages"), ele.byId("sectionImages"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupSkins"), ele.byId("sectionSkins"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupBinary"), ele.byId("sectionBinary"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupTiming"), ele.byId("sectionTiming"), true);\n\n    gui.maintabPanel.show(true);\n}\n\nfunction readableSize(n)\n{\n    if (n > 1024) return Math.round(n / 1024) + " kb";\n    if (n > 1024 * 500) return Math.round(n / 1024) + " mb";\n    else return n + " bytes";\n}\n',inc_skin_js:'const GltfSkin = class\n{\n    constructor(node)\n    {\n        this._mod = null;\n        this._node = node;\n        this._lastTime = 0;\n        this._matArr = [];\n        this._m = mat4.create();\n        this._invBindMatrix = mat4.create();\n        this.identity = true;\n    }\n\n    renderFinish(cgl)\n    {\n        cgl.popModelMatrix();\n        this._mod.unbind();\n    }\n\n    renderStart(cgl, time)\n    {\n        if (!this._mod)\n        {\n            this._mod = new CGL.ShaderModifier(cgl, op.name + this._node.name);\n\n            this._mod.addModule({\n                "priority": -2,\n                "name": "MODULE_VERTEX_POSITION",\n                "srcHeadVert": attachments.skin_head_vert || "",\n                "srcBodyVert": attachments.skin_vert || ""\n            });\n\n            this._mod.addUniformVert("m4[]", "MOD_boneMats", []);// bohnenmatze\n            const tr = vec3.create();\n        }\n\n        const skinIdx = this._node.skin;\n        const arrLength = gltf.json.skins[skinIdx].joints.length * 16;\n\n        // if (this._lastTime != time || !time)\n        {\n            // this._lastTime=inTime.get();\n            if (this._matArr.length != arrLength) this._matArr.length = arrLength;\n\n            for (let i = 0; i < gltf.json.skins[skinIdx].joints.length; i++)\n            {\n                const i16 = i * 16;\n                const jointIdx = gltf.json.skins[skinIdx].joints[i];\n                const nodeJoint = gltf.nodes[jointIdx];\n\n                for (let j = 0; j < 16; j++)\n                    this._invBindMatrix[j] = gltf.accBuffers[gltf.json.skins[skinIdx].inverseBindMatrices][i16 + j];\n\n                mat4.mul(this._m, nodeJoint.modelMatAbs(), this._invBindMatrix);\n\n                for (let j = 0; j < this._m.length; j++) this._matArr[i16 + j] = this._m[j];\n            }\n\n            this._mod.setUniformValue("MOD_boneMats", this._matArr);\n            this._lastTime = time;\n        }\n\n        this._mod.define("SKIN_NUM_BONES", gltf.json.skins[skinIdx].joints.length);\n        this._mod.bind();\n\n        // draw mesh...\n        cgl.pushModelMatrix();\n        if (this.identity)mat4.identity(cgl.mMatrix);\n    }\n};\n',inc_targets_js:'const GltfTargetsRenderer = class\n{\n    constructor(mesh)\n    {\n        this.mesh = mesh;\n        this.tex = null;\n        this.numRowsPerTarget = 0;\n\n        this.makeTex(mesh.geom);\n    }\n\n    renderFinish(cgl)\n    {\n        cgl.popModelMatrix();\n        this._mod.unbind();\n    }\n\n    renderStart(cgl, time)\n    {\n        if (!this._mod)\n        {\n            this._mod = new CGL.ShaderModifier(cgl, "gltftarget");\n\n            this._mod.addModule({\n                "priority": -2,\n                "name": "MODULE_VERTEX_POSITION",\n                "srcHeadVert": attachments.targets_head_vert || "",\n                "srcBodyVert": attachments.targets_vert || ""\n            });\n\n            this._mod.addUniformVert("4f", "MOD_targetTexInfo", [0, 0, 0, 0]);\n            this._mod.addUniformVert("t", "MOD_targetTex", 1);\n            this._mod.addUniformVert("f[]", "MOD_weights", []);\n\n            const tr = vec3.create();\n        }\n\n        this._mod.pushTexture("MOD_targetTex", this.tex);\n        if (this.tex && this.mesh.weights)\n        {\n            this._mod.setUniformValue("MOD_weights", this.mesh.weights);\n            this._mod.setUniformValue("MOD_targetTexInfo", [this.tex.width, this.tex.height, this.numRowsPerTarget, this.mesh.weights.length]);\n\n            this._mod.define("MOD_NUM_WEIGHTS", Math.max(1, this.mesh.weights.length));\n        }\n        else\n        {\n            this._mod.define("MOD_NUM_WEIGHTS", 1);\n        }\n        this._mod.bind();\n\n        // draw mesh...\n        cgl.pushModelMatrix();\n        if (this.identity)mat4.identity(cgl.mMatrix);\n    }\n\n    makeTex(geom)\n    {\n        if (!geom.morphTargets || !geom.morphTargets.length) return;\n\n        let w = geom.morphTargets[0].vertices.length / 3;\n        let h = 0;\n        this.numRowsPerTarget = 0;\n\n        if (geom.morphTargets[0].vertices && geom.morphTargets[0].vertices.length) this.numRowsPerTarget++;\n        if (geom.morphTargets[0].vertexNormals && geom.morphTargets[0].vertexNormals.length) this.numRowsPerTarget++;\n        if (geom.morphTargets[0].tangents && geom.morphTargets[0].tangents.length) this.numRowsPerTarget++;\n        if (geom.morphTargets[0].bitangents && geom.morphTargets[0].bitangents.length) this.numRowsPerTarget++;\n\n        h = geom.morphTargets.length * this.numRowsPerTarget;\n\n        // console.log("this.numRowsPerTarget", this.numRowsPerTarget);\n\n        const pixels = new Float32Array(w * h * 4);\n        let row = 0;\n\n        for (let i = 0; i < geom.morphTargets.length; i++)\n        {\n            if (geom.morphTargets[i].vertices && geom.morphTargets[i].vertices.length)\n            {\n                for (let j = 0; j < geom.morphTargets[i].vertices.length; j += 3)\n                {\n                    pixels[((row * w) + (j / 3)) * 4 + 0] = geom.morphTargets[i].vertices[j + 0];\n                    pixels[((row * w) + (j / 3)) * 4 + 1] = geom.morphTargets[i].vertices[j + 1];\n                    pixels[((row * w) + (j / 3)) * 4 + 2] = geom.morphTargets[i].vertices[j + 2];\n                    pixels[((row * w) + (j / 3)) * 4 + 3] = 1;\n                }\n                row++;\n            }\n\n            if (geom.morphTargets[i].vertexNormals && geom.morphTargets[i].vertexNormals.length)\n            {\n                for (let j = 0; j < geom.morphTargets[i].vertexNormals.length; j += 3)\n                {\n                    pixels[(row * w + j / 3) * 4 + 0] = geom.morphTargets[i].vertexNormals[j + 0];\n                    pixels[(row * w + j / 3) * 4 + 1] = geom.morphTargets[i].vertexNormals[j + 1];\n                    pixels[(row * w + j / 3) * 4 + 2] = geom.morphTargets[i].vertexNormals[j + 2];\n                    pixels[(row * w + j / 3) * 4 + 3] = 1;\n                }\n\n                row++;\n            }\n\n            if (geom.morphTargets[i].tangents && geom.morphTargets[i].tangents.length)\n            {\n                for (let j = 0; j < geom.morphTargets[i].tangents.length; j += 3)\n                {\n                    pixels[(row * w + j / 3) * 4 + 0] = geom.morphTargets[i].tangents[j + 0];\n                    pixels[(row * w + j / 3) * 4 + 1] = geom.morphTargets[i].tangents[j + 1];\n                    pixels[(row * w + j / 3) * 4 + 2] = geom.morphTargets[i].tangents[j + 2];\n                    pixels[(row * w + j / 3) * 4 + 3] = 1;\n                }\n                row++;\n            }\n\n            if (geom.morphTargets[i].bitangents && geom.morphTargets[i].bitangents.length)\n            {\n                for (let j = 0; j < geom.morphTargets[i].bitangents.length; j += 3)\n                {\n                    pixels[(row * w + j / 3) * 4 + 0] = geom.morphTargets[i].bitangents[j + 0];\n                    pixels[(row * w + j / 3) * 4 + 1] = geom.morphTargets[i].bitangents[j + 1];\n                    pixels[(row * w + j / 3) * 4 + 2] = geom.morphTargets[i].bitangents[j + 2];\n                    pixels[(row * w + j / 3) * 4 + 3] = 1;\n                }\n                row++;\n            }\n        }\n\n        this.tex = new CGL.Texture(cgl, { "isFloatingPointTexture": true, "name": "targetsTexture" });\n\n        this.tex.initFromData(pixels, w, h, CGL.Texture.FILTER_LINEAR, CGL.Texture.WRAP_REPEAT);\n\n        // console.log("morphTargets generated texture", w, h);\n    }\n};\n',skin_vert:"int index=int(attrJoints.x);\nvec4 newPos = (MOD_boneMats[index] * pos) * attrWeights.x;\nvec3 newNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.x).xyz);\n\nindex=int(attrJoints.y);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.y;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.y).xyz)+newNorm;\n\nindex=int(attrJoints.z);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.z;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.z).xyz)+newNorm;\n\nindex=int(attrJoints.w);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.w ;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.w).xyz)+newNorm;\n\npos=newPos;\n\nnorm=normalize(newNorm.xyz);\n\n\n",skin_head_vert:"\nIN vec4 attrWeights;\nIN vec4 attrJoints;\nUNI mat4 MOD_boneMats[SKIN_NUM_BONES];\n",targets_vert:"\n\nfloat MOD_width=MOD_targetTexInfo.x;\nfloat MOD_height=MOD_targetTexInfo.y;\nfloat MOD_numTargets=MOD_targetTexInfo.w;\nfloat MOD_numLinesPerTarget=MOD_height/MOD_numTargets;\n\nfloat halfpix=(1.0/MOD_width)*0.5;\nfloat halfpixy=(1.0/MOD_height)*0.5;\n\nfloat x=(attrVertIndex)/MOD_width+halfpix;\n\nvec3 off=vec3(0.0);\n\nfor(float i=0.0;i<MOD_numTargets;i+=1.0)\n{\n    float y=1.0-((MOD_numLinesPerTarget*i)/MOD_height+halfpixy);\n    vec2 coord=vec2(x,y);\n    vec3 targetXYZ = texture(MOD_targetTex,coord).xyz;\n\n    off+=(targetXYZ*MOD_weights[int(i)]);\n\n\n\n    coord.y+=1.0/MOD_height; // normals are in next row\n    vec3 targetNormal = texture(MOD_targetTex,coord).xyz;\n    norm+=targetNormal*MOD_weights[int(i)];\n\n\n}\n\n// norm=normalize(norm);\npos.xyz+=off;\n",targets_head_vert:"\nUNI float MOD_weights[MOD_NUM_WEIGHTS];\n"};const U=class{constructor(e,t){this.node=t;this.name=t.name;this.config=e.json.cameras[t.camera];this.pos=vec3.create();this.quat=quat.create();this.vCenter=vec3.create();this.vUp=vec3.create();this.vMat=mat4.create()}updateAnim(e){if(this.node&&this.node._animTrans){vec3.set(this.pos,this.node._animTrans[0].getValue(e),this.node._animTrans[1].getValue(e),this.node._animTrans[2].getValue(e));quat.set(this.quat,this.node._animRot[0].getValue(e),this.node._animRot[1].getValue(e),this.node._animRot[2].getValue(e),this.node._animRot[3].getValue(e))}}start(e){if(m.frameStore.shadowPass)return;this.updateAnim(e);const t=m.getViewPort()[2]/m.getViewPort()[3];m.pushPMatrix();m.pushViewMatrix();let n=mat4.create();mat4.invert(n,this.node.modelMatAbs());this.vMat=n;mat4.identity(m.vMatrix);mat4.mul(m.vMatrix,m.vMatrix,n)}end(){if(m.frameStore.shadowPass)return;m.popPMatrix();m.popViewMatrix()}};const v=true;const G=class{constructor(){this.json={};this.accBuffers=[];this.meshes=[];this.nodes=[];this.shaders=[];this.timing=[];this.cams=[];this.startTime=performance.now();this.bounds=new CABLES.CG.BoundingBox;this.loaded=Date.now();this.accBuffersDelete=[]}getNode(t){for(let e=0;e<this.nodes.length;e++){if(this.nodes[e].name==t)return this.nodes[e]}}unHideAll(){for(let e=0;e<this.nodes.length;e++){this.nodes[e].unHide()}}};function A(e){if(window.TextDecoder)return new TextDecoder("utf-8").decode(e);let t,n,i,s;let r,a;t="";i=e.length;n=0;while(n<i){s=e[n++];switch(s>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:t+=String.fromCharCode(s);break;case 12:case 13:r=e[n++];t+=String.fromCharCode((s&31)<<6|r&63);break;case 14:r=e[n++];a=e[n++];t+=String.fromCharCode((s&15)<<12|(r&63)<<6|(a&63)<<0);break}}return t}function S(e,t,n,i){const s={};if(i>=e.byteLength){x.log("could not read chunk...");return}s.size=e.getUint32(i+0,v);s.type=A(t.subarray(i+4,i+4+4));if(s.type=="BIN\0"){s.dataView=new DataView(n,i+8,s.size)}else if(s.type=="JSON"){const r=A(t.subarray(i+8,i+8+s.size));try{const a=JSON.parse(r);s.data=a;ae.set(a.asset.generator)}catch(e){}}else{x.warn("unknown type",s.type)}return s}function B(t){const i={};for(let e=0;e<t.json.animations.length;e++){const s=t.json.animations[e];s.name=s.name||"unknown";for(let e=0;e<s.channels.length;e++){const r=s.channels[e];const a=t.nodes[r.target.node];const o=s.samplers[r.sampler];const n=t.json.accessors[o.input];const l=t.accBuffers[o.input];const h=t.json.accessors[o.output];const c=t.accBuffers[o.output];t.accBuffersDelete.push(o.output,o.input);if(l&&c){let n=1;if(h.type==="VEC2")n=2;else if(h.type==="VEC3")n=3;else if(h.type==="VEC4")n=4;else if(h.type==="SCALAR"){n=c.length/l.length}else x.log("[] UNKNOWN accOut.type",h.type);const f=[];i[s.name]=true;for(let e=0;e<n;e++){const u=new CABLES.Anim;f.push(u)}if(o.interpolation==="LINEAR"){}else if(o.interpolation==="STEP")for(let e=0;e<n;e++)f[e].defaultEasing=CABLES.EASING_ABSOLUTE;else if(o.interpolation==="CUBICSPLINE")for(let e=0;e<n;e++)f[e].defaultEasing=CABLES.EASING_CUBICSPLINE;else x.warn("unknown interpolation",o.interpolation);if(l[0]!==0)for(let e=0;e<n;e++)f[e].setValue(0,c[0*n+e]);for(let t=0;t<l.length;t++){T=Math.max(l[t],T);for(let e=0;e<n;e++){if(f[e].defaultEasing===CABLES.EASING_CUBICSPLINE){const g=t*n*3+e;const m=f[e].setValue(l[t],c[g+n]);m.bezTangIn=c[g];m.bezTangOut=c[g+n*2]}else{f[e].setValue(l[t],c[t*n+e])}}}a.setAnim(r.target.path,s.name,f)}else{x.warn("loadAmins bufferIn undefined ",l===undefined);x.warn("loadAmins bufferOut undefined ",c===undefined);x.warn("loadAmins ",o,h);x.warn("loadAmins num accBuffers",t.accBuffers.length);x.warn("loadAmins num accessors",t.json.accessors.length)}}}t.uniqueAnimNames=i;ue.setRef(Object.keys(i))}function V(n){if(!n||!n.json.cameras)return;n.cameras=n.cameras||[];for(let t=0;t<n.nodes.length;t++){if(n.nodes[t].hasOwnProperty("camera")){const e=new U(n,n.nodes[t]);n.cameras.push(e)}}}function D(){if(!window.DracoDecoder){setTimeout(()=>{D()},100)}P()}function k(e){const t=8;let s=0,n=0;const r=new G;r.timing.push(["Start parsing",Math.round(performance.now()-r.startTime)]);if(!e)return;const i=new Uint8Array(e);let a=0;const o=A(i.subarray(a,4));a+=4;if(o!="glTF")return;r.timing.push(["dataview",Math.round(performance.now()-r.startTime)]);const l=new DataView(e);const h=l.getUint32(a,v);a+=4;const c=l.getUint32(a,v);a+=4;oe.set(h);const f=[];r.chunks=f;f.push(S(l,i,e,a));a+=f[0].size+t;r.json=f[0].data;r.cables={fileUrl:I.get(),shortFileName:CABLES.basename(I.get())};fe.setRef(r.json);le.setRef(r.json.extensionsUsed||[]);let u=S(l,i,e,a);while(u){f.push(u);a+=u.size+t;u=S(l,i,e,a)}r.chunks=f;const g=f[0].data.bufferViews;const m=f[0].data.accessors;r.timing.push(["Parse buffers",Math.round(performance.now()-r.startTime)]);if(r.json.extensionsUsed&&r.json.extensionsUsed.indexOf("KHR_draco_mesh_compression")>-1){if(!window.DracoDecoder){x.setUiError("gltfdraco","GLTF draco compression lib not found / add draco op to your patch!");D();return r}else{r.useDraco=true}}x.setUiError("gltfdraco",null);if(g){for(n=0;n<m.length;n++){const d=m[n];const p=g[d.bufferView];let i=0;if(d.type=="SCALAR")i=1;else if(d.type=="VEC2")i=2;else if(d.type=="VEC3")i=3;else if(d.type=="VEC4")i=4;else if(d.type=="MAT4")i=16;else console.error("unknown accessor type",d.type);if(f[1].dataView){if(p){const _=d.count*i;let e=(p.byteOffset||0)+(d.byteOffset||0);let t=p.byteStride||0;let n=null;if(d.componentType==5126||d.componentType==5125){t=t||4;const b=d.componentType==5125;if(b)n=new Uint32Array(_);else n=new Float32Array(_);for(s=0;s<_;s++){if(b)n[s]=f[1].dataView.getUint32(e,v);else n[s]=f[1].dataView.getFloat32(e,v);if(t!=4&&(s+1)%i===0)e+=t-i*4;e+=4}}else if(d.componentType==5123){t=t||2;n=new Uint16Array(_);for(s=0;s<_;s++){n[s]=f[1].dataView.getUint16(e,v);if(t!=2&&(s+1)%i===0)e+=t-i*2;e+=2}}else if(d.componentType==5121){t=t||1;n=new Uint8Array(_);for(s=0;s<_;s++){n[s]=f[1].dataView.getUint8(e,v);if(t!=1&&(s+1)%i===0)e+=t-i*1;e+=1}}else{console.error("unknown component type",d.componentType)}r.accBuffers.push(n)}else{}}}}r.timing.push(["Parse mesh groups",Math.round(performance.now()-r.startTime)]);r.json.meshes=r.json.meshes||[];if(r.json.meshes){for(n=0;n<r.json.meshes.length;n++){const T=new X(r,r.json.meshes[n]);r.meshes.push(T)}}r.timing.push(["Parse nodes",Math.round(performance.now()-r.startTime)]);for(n=0;n<r.json.nodes.length;n++){if(r.json.nodes[n].children)for(s=0;s<r.json.nodes[n].children.length;s++){r.json.nodes[r.json.nodes[n].children[s]].isChild=true}}for(n=0;n<r.json.nodes.length;n++){const E=new H(r.json.nodes[n],r);r.nodes.push(E)}for(n=0;n<r.nodes.length;n++){const E=r.nodes[n];if(!E.children)continue;for(let e=0;e<E.children.length;e++){r.nodes[E.children[e]].parent=E}}for(n=0;n<r.nodes.length;n++){r.nodes[n].initSkin()}O=true;r.timing.push(["load anims",Math.round(performance.now()-r.startTime)]);if(r.json.animations)B(r);r.timing.push(["load cameras",Math.round(performance.now()-r.startTime)]);if(r.json.cameras)V(r);r.timing.push(["finished",Math.round(performance.now()-r.startTime)]);return r}let j=class{constructor(e,n,r,a){this.POINTS=0;this.LINES=1;this.LINE_LOOP=2;this.LINE_STRIP=3;this.TRIANGLES=4;this.TRIANGLE_STRIP=5;this.TRIANGLE_FAN=6;this.test=0;this.name=e;this.submeshIndex=0;this.material=n.material;this.mesh=null;this.geom=new CGL.Geometry("gltf_"+this.name);this.geom.verticesIndices=[];this.bounds=null;this.primitive=4;this.morphTargetsRenderMod=null;this.weights=n.weights;if(n.hasOwnProperty("mode"))this.primitive=n.mode;if(n.hasOwnProperty("indices"))this.geom.verticesIndices=r.accBuffers[n.indices];r.loadingMeshes=r.loadingMeshes||0;r.loadingMeshes++;this.materialJson=this._matPbrMetalness=this._matPbrRoughness=this._matDiffuseColor=null;if(r.json.materials){if(this.material!=-1)this.materialJson=r.json.materials[this.material];if(this.materialJson&&this.materialJson.pbrMetallicRoughness){if(!this.materialJson.pbrMetallicRoughness.hasOwnProperty("baseColorFactor")){this._matDiffuseColor=[1,1,1,1]}else{this._matDiffuseColor=this.materialJson.pbrMetallicRoughness.baseColorFactor}this._matDiffuseColor=this.materialJson.pbrMetallicRoughness.baseColorFactor;if(!this.materialJson.pbrMetallicRoughness.hasOwnProperty("metallicFactor")){this._matPbrMetalness=1}else{this._matPbrMetalness=this.materialJson.pbrMetallicRoughness.metallicFactor||null}if(!this.materialJson.pbrMetallicRoughness.hasOwnProperty("roughnessFactor")){this._matPbrRoughness=1}else{this._matPbrRoughness=this.materialJson.pbrMetallicRoughness.roughnessFactor||null}}}if(r.useDraco&&n.extensions.KHR_draco_mesh_compression){const i=r.chunks[0].data.bufferViews[n.extensions.KHR_draco_mesh_compression.bufferView];const s=i.byteLength;const o=new Int8Array(s);let t=i.byteOffset||0;for(let e=0;e<s;e++){o[e]=r.chunks[1].dataView.getInt8(t,v);t++}const l=window.DracoDecoder;l.decodeGeometry(o.buffer,t=>{const n=new CGL.Geometry("draco mesh "+e);for(let e=0;e<t.attributes.length;e++){const i=t.attributes[e];if(i.name==="position")n.vertices=i.array;else if(i.name==="normal")n.vertexNormals=i.array;else if(i.name==="uv")n.texCoords=i.array;else if(i.name==="color")n.vertexColors=this.calcVertexColors(i.array);else if(i.name==="joints")n.setAttribute("attrJoints",Array.from(i.array),4);else if(i.name==="weights"){const s=new Float32Array(i.array.length/i.itemSize*4);for(let t=0;t<i.array.length/i.itemSize;t++){s[t*4]=s[t*4+1]=s[t*4+2]=s[t*4+3]=0;for(let e=0;e<i.itemSize;e++)s[t*4+e]=i.array[t*i.itemSize+e]}n.setAttribute("attrWeights",s,4)}else x.logWarn("unknown draco attrib",i)}t.attributes=null;n.verticesIndices=t.index.array;this.setGeom(n);this.mesh=null;r.loadingMeshes--;r.timing.push(["draco decode",Math.round(performance.now()-r.startTime)]);if(a)a(this)},e=>{x.logError(e)})}else{r.loadingMeshes--;this.fillGeomAttribs(r,this.geom,n.attributes);if(n.targets){for(let e=0;e<n.targets.length;e++){const t=new CGL.Geometry("gltf_target_"+e);this.fillGeomAttribs(r,t,n.targets[e],false);this.geom.morphTargets.push(t)}}if(a)a(this)}}_linearToSrgb(e){if(e<=0)return 0;else if(e>=1)return 1;else if(e<.0031308)return e*12.92;else return e**(1/2.2)*1.055-.055}calcVertexColors(n){let i=null;if(n instanceof Float32Array){let t=false;for(let e=0;e<n.length;e++){if(n[e]>1){t=true;continue}}if(t)for(let e=0;e<n.length;e++)n[e]/=65535;i=n}else if(n instanceof Uint16Array){const t=new Float32Array(n.length);for(let e=0;e<n.length;e++)t[e]=n[e]/65535;i=t}else i=n;for(let e=0;e<i.length;e++){i[e]=this._linearToSrgb(i[e])}return i}fillGeomAttribs(e,t,n,i){if(n.hasOwnProperty("POSITION"))t.vertices=e.accBuffers[n.POSITION];if(n.hasOwnProperty("NORMAL"))t.vertexNormals=e.accBuffers[n.NORMAL];if(n.hasOwnProperty("TANGENT"))t.tangents=e.accBuffers[n.TANGENT];if(n.hasOwnProperty("COLOR_0"))t.vertexColors=this.calcVertexColors(e.accBuffers[n.COLOR_0]);if(n.hasOwnProperty("COLOR_1"))t.setAttribute("attrVertColor1",this.calcVertexColors(e.accBuffers[n.COLOR_1]),4);if(n.hasOwnProperty("COLOR_2"))t.setAttribute("attrVertColor2",this.calcVertexColors(e.accBuffers[n.COLOR_2]),4);if(n.hasOwnProperty("COLOR_3"))t.setAttribute("attrVertColor3",this.calcVertexColors(e.accBuffers[n.COLOR_3]),4);if(n.hasOwnProperty("COLOR_4"))t.setAttribute("attrVertColor4",this.calcVertexColors(e.accBuffers[n.COLOR_4]),4);if(n.hasOwnProperty("TEXCOORD_0"))t.texCoords=e.accBuffers[n.TEXCOORD_0];if(n.hasOwnProperty("TEXCOORD_1"))t.setAttribute("attrTexCoord1",e.accBuffers[n.TEXCOORD_1],2);if(n.hasOwnProperty("TEXCOORD_2"))t.setAttribute("attrTexCoord2",e.accBuffers[n.TEXCOORD_2],2);if(n.hasOwnProperty("TEXCOORD_3"))t.setAttribute("attrTexCoord3",e.accBuffers[n.TEXCOORD_3],2);if(n.hasOwnProperty("TEXCOORD_4"))t.setAttribute("attrTexCoord4",e.accBuffers[n.TEXCOORD_4],2);if(n.hasOwnProperty("WEIGHTS_0")){t.setAttribute("attrWeights",e.accBuffers[n.WEIGHTS_0],4)}if(n.hasOwnProperty("JOINTS_0")){if(!e.accBuffers[n.JOINTS_0])console.log("no !gltf.accBuffers[attribs.JOINTS_0]");t.setAttribute("attrJoints",e.accBuffers[n.JOINTS_0],4)}if(n.hasOwnProperty("POSITION"))e.accBuffersDelete.push(n.POSITION);if(n.hasOwnProperty("NORMAL"))e.accBuffersDelete.push(n.NORMAL);if(n.hasOwnProperty("TEXCOORD_0"))e.accBuffersDelete.push(n.TEXCOORD_0);if(n.hasOwnProperty("TANGENT"))e.accBuffersDelete.push(n.TANGENT);if(n.hasOwnProperty("COLOR_0"))e.accBuffersDelete.push(n.COLOR_0);if(n.hasOwnProperty("COLOR_0"))e.accBuffersDelete.push(n.COLOR_0);if(n.hasOwnProperty("COLOR_1"))e.accBuffersDelete.push(n.COLOR_1);if(n.hasOwnProperty("COLOR_2"))e.accBuffersDelete.push(n.COLOR_2);if(n.hasOwnProperty("COLOR_3"))e.accBuffersDelete.push(n.COLOR_3);if(n.hasOwnProperty("TEXCOORD_1"))e.accBuffersDelete.push(n.TEXCOORD_1);if(n.hasOwnProperty("TEXCOORD_2"))e.accBuffersDelete.push(n.TEXCOORD_2);if(n.hasOwnProperty("TEXCOORD_3"))e.accBuffersDelete.push(n.TEXCOORD_3);if(n.hasOwnProperty("TEXCOORD_4"))e.accBuffersDelete.push(n.TEXCOORD_4);if(i!==false)if(t&&t.verticesIndices)this.setGeom(t)}setGeom(n){if(te.get()=="X-ZY"){for(let t=0;t<n.vertexNormals.length;t+=3){let e=n.vertexNormals[t+2];n.vertexNormals[t+2]=n.vertexNormals[t+1];n.vertexNormals[t+1]=-e}}if(ne.get()=="XZ-Y"){for(let t=0;t<n.vertices.length;t+=3){let e=n.vertices[t+2];n.vertices[t+2]=-n.vertices[t+1];n.vertices[t+1]=e}}if(this.primitive==this.TRIANGLES){if(c.get()=="Force Smooth")n.calculateNormals();else if(!n.vertexNormals.length&&c.get()=="Auto")n.calculateNormals({smooth:false});if((!n.biTangents||n.biTangents.length==0)&&n.tangents){const t=vec3.create();const e=vec3.create();const i=n.tangents;n.tangents=new Float32Array(i.length/4*3);n.biTangents=new Float32Array(i.length/4*3);for(let e=0;e<i.length;e+=4){const s=e/4*3;vec3.cross(t,[n.vertexNormals[s],n.vertexNormals[s+1],n.vertexNormals[s+2]],[i[e],i[e+1],i[e+2]]);vec3.div(t,t,[i[e+3],i[e+3],i[e+3]]);vec3.normalize(t,t);n.biTangents[s+0]=t[0];n.biTangents[s+1]=t[1];n.biTangents[s+2]=t[2];n.tangents[s+0]=i[e+0];n.tangents[s+1]=i[e+1];n.tangents[s+2]=i[e+2]}}if(n.tangents.length===0||c.get()!="Never"){n.calcTangentsBitangents()}}this.geom=n;this.bounds=n.getBounds()}render(n,t,i){if(!this.mesh&&this.geom&&this.geom.verticesIndices){let e=this.geom;if(this.geom.vertices.length/3>64e3){e=this.geom.copy();e.unIndex(false,true)}let t;if(this.primitive==this.TRIANGLES)t=n.gl.TRIANGLES;else if(this.primitive==this.LINES)t=n.gl.LINES;else if(this.primitive==this.LINE_STRIP)t=n.gl.LINE_STRIP;else if(this.primitive==this.POINTS)t=n.gl.POINTS;else{x.logWarn("unknown primitive type",this)}this.mesh=x.patch.cg.createMesh(e,t)}else{if(this.geom&&this.geom.morphTargets.length&&!this.morphTargetsRenderMod){this.mesh.addVertexNumbers=true;this.morphTargetsRenderMod=new K(this)}let e=!t&&this.material!=-1&&R.shaders[this.material];if(i)e=false;if(e)n.pushShader(R.shaders[this.material]);const s=n.getShader()||{};const r=s.uniformColorDiffuse;const a=s.uniformPbrMetalness;const o=s.uniformPbrRoughness;if(!R.shaders[this.material]&&se.get()){if(r&&this._matDiffuseColor){this._matDiffuseColorOrig=[r.getValue()[0],r.getValue()[1],r.getValue()[2],r.getValue()[3]];r.setValue(this._matDiffuseColor)}if(a)if(this._matPbrMetalness!=null){this._matPbrMetalnessOrig=a.getValue();a.setValue(this._matPbrMetalness)}else a.setValue(0);if(o)if(this._matPbrRoughness!=null){this._matPbrRoughnessOrig=o.getValue();o.setValue(this._matPbrRoughness)}else{o.setValue(0)}}if(this.morphTargetsRenderMod)this.morphTargetsRenderMod.renderStart(n,0);if(this.mesh){this.mesh.render(n.getShader(),t)}if(this.morphTargetsRenderMod)this.morphTargetsRenderMod.renderFinish(n);if(se.get()){if(r&&this._matDiffuseColor)r.setValue(this._matDiffuseColorOrig);if(a&&this._matPbrMetalnessOrig!=undefined)a.setValue(this._matPbrMetalnessOrig);if(o&&this._matPbrRoughnessOrig!=undefined)o.setValue(this._matPbrRoughnessOrig)}if(e)n.popShader()}}};const X=class{constructor(t,n){this.bounds=new CABLES.CG.BoundingBox;this.meshes=[];this.name=n.name;const i=n.primitives;for(let e=0;e<i.length;e++){const s=new j(this.name,i[e],t,e=>{e.extras=n.extras;this.bounds.apply(e.bounds)});s.submeshIndex=e;this.meshes.push(s)}}render(t,n,i,s,r){for(let e=0;e<this.meshes.length;e++){const a=R.shaders[this.meshes[e].material];if(!n&&a)t.pushShader(R.shaders[this.meshes[e].material]);if(i)i.renderStart(t,s);if(r)this.meshes[e].weights=r;this.meshes[e].render(t,n,i,s);if(i)i.renderFinish(t);if(!n&&a)t.popShader()}}};const H=class{constructor(e,t){this.isChild=e.isChild||false;this.name=e.name;if(e.hasOwnProperty("camera"))this.camera=e.camera;this.hidden=false;this.mat=mat4.create();this._animActions={};this.animWeights=[];this._animMat=mat4.create();this._tempMat=mat4.create();this._tempQuat=quat.create();this._tempRotmat=mat4.create();this.mesh=null;this.children=[];this._node=e;this._gltf=t;this.absMat=mat4.create();this.addTranslate=null;this._tempAnimScale=null;this.addMulMat=null;this.updateMatrix();this.skinRenderer=null;this.copies=[]}get skin(){if(this._node.hasOwnProperty("skin"))return this._node.skin;else return-1}copy(){this.isCopy=true;const e=new H(this._node,this._gltf);e.copyOf=this;e._animActions=this._animActions;e.children=this.children;if(this.skin)e.skinRenderer=new q(this);this.updateMatrix();return e}hasSkin(){if(this._node.hasOwnProperty("skin"))return this._gltf.json.skins[this._node.skin].name||"unknown";return false}initSkin(){if(this.skin>-1){this.skinRenderer=new q(this)}}updateMatrix(){mat4.identity(this.mat);if(this._node.translation)mat4.translate(this.mat,this.mat,this._node.translation);if(this._node.rotation){const e=mat4.create();this._rot=this._node.rotation;mat4.fromQuat(e,this._node.rotation);mat4.mul(this.mat,this.mat,e)}if(this._node.scale){this._scale=this._node.scale;mat4.scale(this.mat,this.mat,this._scale)}if(this._node.hasOwnProperty("mesh")){this.mesh=this._gltf.meshes[this._node.mesh];if(this.isCopy){}}if(this._node.children){for(let e=0;e<this._node.children.length;e++){this._gltf.json.nodes[e].isChild=true;if(this._gltf.nodes[this._node.children[e]])this._gltf.nodes[this._node.children[e]].isChild=true;this.children.push(this._node.children[e])}}}unHide(){this.hidden=false;for(let e=0;e<this.children.length;e++)if(this.children[e].unHide)this.children[e].unHide()}calcBounds(t,e,n){const i=mat4.create();if(e)mat4.copy(i,e);if(this.mat)mat4.mul(i,i,this.mat);if(this.mesh){const s=this.mesh.bounds.copy();s.mulMat4(i);n.apply(s);if(n.changed){b.push(s._min[0]||0,s._min[1]||0,s._min[2]||0,s._max[0]||0,s._max[1]||0,s._max[2]||0)}}for(let e=0;e<this.children.length;e++){if(t.nodes[this.children[e]]&&t.nodes[this.children[e]].calcBounds){const r=t.nodes[this.children[e]].calcBounds(t,i,n);n.apply(r)}}if(n.changed)return n;else return null}setAnimAction(t){if(!t)return;this._currentAnimaction=t;if(t&&!this._animActions[t]){return null}for(let e in this._animActions[t]){if(e=="translation")this._animTrans=this._animActions[t][e];else if(e=="rotation")this._animRot=this._animActions[t][e];else if(e=="scale")this._animScale=this._animActions[t][e];else if(e=="weights")this.animWeights=this._animActions[t][e];else console.log("[gltfNode] unknown anim path",e,this._animActions[t][e])}}setAnim(e,t,n){if(!e||!t||!n)return;this._animActions[t]=this._animActions[t]||{};if(this._animActions[t][e])x.log("[gltfNode] animation action path already exists",t,e,this._animActions[t][e]);this._animActions[t][e]=n;if(e=="translation")this._animTrans=n;else if(e=="rotation")this._animRot=n;else if(e=="scale")this._animScale=n;else if(e=="weights"){this.animWeights=this._animActions[t][e]}else console.warn("unknown anim path",e,n)}modelMatLocal(){return this._animMat||this.mat}modelMatAbs(){return this.absMat}transform(e,n){if(!n&&n!=0)n=L;this._lastTimeTrans=n;be++;if(!this._animTrans&&!this._animRot&&!this._animScale){mat4.mul(e.mMatrix,e.mMatrix,this.mat);this._animMat=null}else{this._animMat=this._animMat||mat4.create();mat4.identity(this._animMat);const t=true;if(t&&this._animTrans){mat4.translate(this._animMat,this._animMat,[this._animTrans[0].getValue(n),this._animTrans[1].getValue(n),this._animTrans[2].getValue(n)])}else if(this._node.translation)mat4.translate(this._animMat,this._animMat,this._node.translation);if(t&&this._animRot){if(this._animRot[0].defaultEasing==CABLES.EASING_LINEAR)CABLES.Anim.slerpQuaternion(n,this._tempQuat,this._animRot[0],this._animRot[1],this._animRot[2],this._animRot[3]);else if(this._animRot[0].defaultEasing==CABLES.EASING_ABSOLUTE){this._tempQuat[0]=this._animRot[0].getValue(n);this._tempQuat[1]=this._animRot[1].getValue(n);this._tempQuat[2]=this._animRot[2].getValue(n);this._tempQuat[3]=this._animRot[3].getValue(n)}else if(this._animRot[0].defaultEasing==CABLES.EASING_CUBICSPLINE){CABLES.Anim.slerpQuaternion(n,this._tempQuat,this._animRot[0],this._animRot[1],this._animRot[2],this._animRot[3])}mat4.fromQuat(this._tempMat,this._tempQuat);mat4.mul(this._animMat,this._animMat,this._tempMat)}else if(this._rot){mat4.fromQuat(this._tempRotmat,this._rot);mat4.mul(this._animMat,this._animMat,this._tempRotmat)}if(t&&this._animScale){if(!this._tempAnimScale)this._tempAnimScale=[1,1,1];this._tempAnimScale[0]=this._animScale[0].getValue(n);this._tempAnimScale[1]=this._animScale[1].getValue(n);this._tempAnimScale[2]=this._animScale[2].getValue(n);mat4.scale(this._animMat,this._animMat,this._tempAnimScale)}else if(this._scale)mat4.scale(this._animMat,this._animMat,this._scale);mat4.mul(e.mMatrix,e.mMatrix,this._animMat)}if(this.animWeights){this.weights=this.weights||[];let t="";for(let e=0;e<this.animWeights.length;e++){this.weights[e]=this.animWeights[e].getValue(n);t+=this.weights[e]+"/"}}if(this.addTranslate)mat4.translate(e.mMatrix,e.mMatrix,this.addTranslate);if(this.addMulMat)mat4.mul(e.mMatrix,e.mMatrix,this.addMulMat);mat4.copy(this.absMat,e.mMatrix)}render(t,n,i,s,r,a,o){if(!n)t.pushModelMatrix();if(o===undefined)o=R.time;if(!n||this.skinRenderer)this.transform(t,o);if(this.hidden&&!a){}else{if(this.skinRenderer){this.skinRenderer.time=o;if(!i)this.mesh.render(t,s,this.skinRenderer,o,this.weights)}else{if(this.mesh&&!i)this.mesh.render(t,s,null,o,this.weights)}}if(!r&&!this.hidden)for(let e=0;e<this.children.length;e++)if(R.nodes[this.children[e]])R.nodes[this.children[e]].render(t,n,i,s,r,a,o);if(!n)t.popModelMatrix()}};let E=null;function C(){if(E)gui.mainTabs.closeTab(E.id);E=null}function o(t){const n=[];for(let e=0;e<t.length;e++){n.push(Math.round(t[e]*1e3)/1e3)}return n.join(",")}function z(n,i,s){if(!R)return;n+='<tr class="row">';let r="";let a="";for(let t=1;t<s;t++){a+="&nbsp;&nbsp;&nbsp;";let e="identBg";if(t==1)e="identBgLevel0";r+='<td class="ident '+e+'" ><div style=""></div></td>'}let e=CABLES.uuid();n+=r;n+='<td colspan="'+(21-s)+'">';if(i.mesh&&i.mesh.meshes.length)n+='<span class="icon icon-cube"></span>&nbsp;';else n+='<span class="icon icon-box-select"></span> &nbsp;';n+=i.name+"</td><td></td>";if(i.mesh){n+="<td>";for(let e=0;e<i.mesh.meshes.length;e++){if(e>0)n+=", ";n+=i.mesh.meshes[e].name}n+="</td>";n+="<td>";n+=i.hasSkin()||"-";n+="</td>";n+="<td>";let t=0;for(let e=0;e<i.mesh.meshes.length;e++){if(t>0)n+=", ";if(R.json.materials&&i.mesh.meshes[e].hasOwnProperty("material")){if(R.json.materials[i.mesh.meshes[e].material]){n+=R.json.materials[i.mesh.meshes[e].material].name;t++}}}if(t==0)n+="none";n+="</td>"}else{n+="<td>-</td><td>-</td><td>-</td>"}n+="<td>";if(i._node.translation||i._node.rotation||i._node.scale){let e="";if(i._node.translation)e+="Translate: `"+o(i._node.translation)+"` || ";if(i._node.rotation)e+="Rotation: `"+o(i._node.rotation)+"` || ";if(i._node.scale)e+="Scale: `"+o(i._node.scale)+"` || ";n+='<span class="icon icon-gizmo info" data-info="'+e+'"></span> &nbsp;'}if(i._animRot||i._animScale||i._animTrans){let e="Animated: ";if(i._animRot)e+="Rot ";if(i._animScale)e+="Scale ";if(i._animTrans)e+="Trans ";n+='<span class="icon icon-clock info" data-info="'+e+'"></span>&nbsp;'}if(!i._node.translation&&!i._node.rotation&&!i._node.scale&&!i._animRot&&!i._animScale&&!i._animTrans)n+="-";n+="</td>";n+="<td>";let t="";if(i.hidden)t="node-hidden";n+="<a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+"','transform')\" class=\"treebutton\">Transform</a>";n+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+"','hierarchy')\" class=\"treebutton\">Hierarchy</a>";n+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+'\')" class="treebutton">Node</a>';if(i.hasSkin())n+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+'\',false,{skin:true});" class="treebutton">Skin</a>';n+="</td><td>";n+='&nbsp;<span class="icon iconhover icon-eye '+t+'" onclick="gui.corePatch().getOpById(\''+x.id+"').toggleNodeVisibility('"+i.name+"');this.classList.toggle('node-hidden');\"></span>";n+="</td>";n+="</tr>";if(i.children){for(let e=0;e<i.children.length;e++)n=z(n,R.nodes[i.children[e]],s+1)}return n}function W(t,e){let n="<tr>";n+=" <td>"+e+"</td>";n+=" <td>"+t.name+"</td>";n+=" <td>";const i=JSON.stringify(t,null,4).replaceAll('"',"").replaceAll("\n","<br/>");n+="<span class=\"icon icon-info\" onclick=\"new CABLES.UI.ModalDialog({ 'html': '<pre>"+i+"</pre>', 'title': '"+t.name+"' });\"></span>&nbsp;";if(t.pbrMetallicRoughness&&t.pbrMetallicRoughness.baseColorFactor){let e="";e+=""+Math.round(t.pbrMetallicRoughness.baseColorFactor[0]*255);e+=","+Math.round(t.pbrMetallicRoughness.baseColorFactor[1]*255);e+=","+Math.round(t.pbrMetallicRoughness.baseColorFactor[2]*255);n+='<div style="width:15px;height:15px;background-color:rgb('+e+');display:inline-block">&nbsp;</a>'}n+=' <td style="">'+(R.shaders[e]?"-":"<a onclick=\"gui.corePatch().getOpById('"+x.id+"').assignMaterial('"+t.name+'\')" class="treebutton">Assign</a>')+"<td>";n+="<td>";n+="</tr>";return n}function e(){if(!R)return;const e=performance.now();const r={};let a='<div style="overflow:scroll;width:100%;height:100%">';a+='File: <a href="'+CABLES.sandbox.getCablesUrl()+"/asset/patches/?filename="+I.get()+'" target="_blank">'+CABLES.basename(I.get())+"</a><br/>";a+="Generator:"+R.json.asset.generator;let t=0;if(R.json.nodes)t=R.json.nodes.length;a+='<div id="groupNodes">Nodes ('+t+")</div>";a+='<table id="sectionNodes" class="table treetable">';a+="<tr>";a+=' <th colspan="21">Name</th>';a+=" <th>Mesh</th>";a+=" <th>Skin</th>";a+=" <th>Material</th>";a+=" <th>Transform</th>";a+=" <th>Expose</th>";a+=" <th></th>";a+="</tr>";for(let e=0;e<R.nodes.length;e++){if(!R.nodes[e].isChild)a=z(a,R.nodes[e],1)}a+="</table>";let n=0;if(R.json.materials)n=R.json.materials.length;a+='<div id="groupMaterials">Materials ('+n+")</div>";if(!R.json.materials||R.json.materials.length==0){}else{a+='<table id="materialtable"  class="table treetable">';a+="<tr>";a+=" <th>Index</th>";a+=" <th>Name</th>";a+=" <th>Color</th>";a+=" <th>Function</th>";a+=" <th></th>";a+="</tr>";for(let e=0;e<R.json.materials.length;e++){a+=W(R.json.materials[e],e)}a+="</table>"}a+='<div id="groupMeshes">Meshes ('+R.json.meshes.length+")</div>";a+='<table id="meshestable"  class="table treetable">';a+="<tr>";a+=" <th>Name</th>";a+=" <th>Node</th>";a+=" <th>Material</th>";a+=" <th>Vertices</th>";a+=" <th>Attributes</th>";a+="</tr>";let o=[];r.meshes=0;r.meshTargets=0;for(let s=0;s<R.json.meshes.length;s++){a+="<tr>";a+="<td>"+R.json.meshes[s].name+"</td>";a+="<td>";let t=0;let n="";for(let e=0;e<R.json.nodes.length;e++){if(R.json.nodes[e].mesh==s){t++;if(t==1){n=R.json.nodes[e].name}}}if(t>1)a+=t+" nodes ("+n+" ...)";else a+=n;a+="</td>";a+="<td>";for(let e=0;e<R.json.meshes[s].primitives.length;e++){if(R.json.meshes[s].primitives[e].hasOwnProperty("material")){if(R.json.materials[R.json.meshes[s]]){a+=R.json.materials[R.json.meshes[s].primitives[e].material].name+" "}}else a+="None"}a+="</td>";a+="<td>";let i=0;for(let t=0;t<R.json.meshes[s].primitives.length;t++){if(R.json.meshes[s].primitives[t].attributes.POSITION!=undefined){let e=parseInt(R.json.accessors[R.json.meshes[s].primitives[t].attributes.POSITION].count);i+=e;a+=""+e+"<br/>"}else a+="-<br/>"}if(R.json.meshes[s].primitives.length>1)a+="="+i;a+="</td>";a+="<td>";for(let e=0;e<R.json.meshes[s].primitives.length;e++){a+=Object.keys(R.json.meshes[s].primitives[e].attributes);a+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeGeom('"+R.json.meshes[s].name+"',"+e+')" class="treebutton">Geometry</a>';a+="<br/>";if(R.json.meshes[s].primitives[e].targets){a+=R.json.meshes[s].primitives[e].targets.length+" targets<br/>";if(R.json.meshes[s].extras&&R.json.meshes[s].extras.targetNames)a+="Targetnames:<br/>"+R.json.meshes[s].extras.targetNames.join("<br/>");a+="<br/>"}}a+="</td>";a+="</tr>";for(let n=0;n<R.json.meshes[s].primitives.length;n++){const m=R.json.accessors[R.json.meshes[s].primitives[n].indices];if(m){let e=m.bufferView;if(o.indexOf(e)==-1){o.push(e);if(R.json.bufferViews[e])r.meshes+=R.json.bufferViews[e].byteLength}}for(let e in R.json.meshes[s].primitives[n].attributes){const d=R.json.meshes[s].primitives[n].attributes[e];const p=R.json.accessors[d].bufferView;if(o.indexOf(p)==-1){o.push(p);if(R.json.bufferViews[p])r.meshes+=R.json.bufferViews[p].byteLength}}if(R.json.meshes[s].primitives[n].targets)for(let t=0;t<R.json.meshes[s].primitives[n].targets.length;t++){for(let e in R.json.meshes[s].primitives[n].targets[t]){const _=R.json.meshes[s].primitives[n].targets[t][e];const m=R.json.accessors[_];const p=m.bufferView;console.log("accessor",m);if(o.indexOf(p)==-1)if(R.json.bufferViews[p]){o.push(p);r.meshTargets+=R.json.bufferViews[p].byteLength}}}}}a+="</table>";let i=0;let s=0;let l=0;if(R.json.animations){s=R.json.animations.length;for(let e=0;e<R.json.animations.length;e++){i+=R.json.animations[e].samplers.length}}a+='<div id="groupAnims">Animations ('+s+"/"+i+")</div>";if(R.json.animations){a+='<table id="sectionAnim" class="table treetable">';a+="<tr>";a+="  <th>Name</th>";a+="  <th>Target node</th>";a+="  <th>Path</th>";a+="  <th>Interpolation</th>";a+="  <th>Keys</th>";a+="</tr>";r.animations=0;for(let n=0;n<R.json.animations.length;n++){for(let t=0;t<R.json.animations[n].samplers.length;t++){let e=R.json.accessors[R.json.animations[n].samplers[t].input].bufferView;if(o.indexOf(e)==-1){o.push(e);r.animations+=R.json.bufferViews[e].byteLength}e=R.json.accessors[R.json.animations[n].samplers[t].output].bufferView;if(o.indexOf(e)==-1){o.push(e);r.animations+=R.json.bufferViews[e].byteLength}}for(let e=0;e<R.json.animations[n].channels.length;e++){a+="<tr>";a+="  <td> Anim "+n+": "+R.json.animations[n].name+"</td>";a+="  <td>"+R.nodes[R.json.animations[n].channels[e].target.node].name+"</td>";a+="  <td>";a+=R.json.animations[n].channels[e].target.path+" ";a+="  </td>";const b=R.json.animations[n].channels[e].sampler;const T=R.json.animations[n].samplers[b];a+="  <td>"+T.interpolation+"</td>";a+="  <td>"+R.json.accessors[T.output].count;l+=R.json.accessors[T.output].count;a+="</td>";a+="</tr>"}}a+="<tr>";a+="  <td></td>";a+="  <td></td>";a+="  <td></td>";a+="  <td></td>";a+="  <td>"+l+" total</td>";a+="</tr>";a+="</table>"}else{}let h=0;if(R.json.images)h=R.json.images.length;a+='<div id="groupImages">Images ('+h+")</div>";if(R.json.images){a+='<table id="sectionImages" class="table treetable">';a+="<tr>";a+="  <th>name</th>";a+="  <th>type</th>";a+="  <th>func</th>";a+="</tr>";r.images=0;for(let t=0;t<R.json.images.length;t++){if(R.json.images[t].hasOwnProperty("bufferView")){r.images+=R.json.bufferViews[R.json.images[t].bufferView].byteLength}else console.log("image has no bufferview?!");a+="<tr>";a+="<td>"+R.json.images[t].name+"</td>";a+="<td>"+R.json.images[t].mimeType+"</td>";a+="<td>";let e=R.json.images[t].name;if(e===undefined)e=R.json.images[t].bufferView;a+="<a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeTexture('"+e+'\')" class="treebutton">Expose</a>';a+="</td>";a+="<tr>"}a+="</table>"}let c=0;if(R.json.cameras)c=R.json.cameras.length;a+='<div id="groupCameras">Cameras ('+c+")</div>";if(R.json.cameras){a+='<table id="sectionCameras" class="table treetable">';a+="<tr>";a+="  <th>name</th>";a+="  <th>type</th>";a+="  <th>info</th>";a+="</tr>";for(let e=0;e<R.json.cameras.length;e++){a+="<tr>";a+="<td>"+R.json.cameras[e].name+"</td>";a+="<td>"+R.json.cameras[e].type+"</td>";a+="<td>";if(R.json.cameras[e].perspective){a+="yfov: "+Math.round(R.json.cameras[e].perspective.yfov*100)/100;a+=", ";a+="zfar: "+Math.round(R.json.cameras[e].perspective.zfar*100)/100;a+=", ";a+="znear: "+Math.round(R.json.cameras[e].perspective.znear*100)/100}a+="</td>";a+="<tr>"}a+="</table>"}let f=0;if(R.json.skins)f=R.json.skins.length;a+='<div id="groupSkins">Skins ('+f+")</div>";if(R.json.skins){a+='<table id="sectionSkins" class="table treetable">';a+="<tr>";a+="  <th>name</th>";a+="  <th></th>";a+="  <th>total joints</th>";a+="</tr>";for(let e=0;e<R.json.skins.length;e++){a+="<tr>";a+="<td>"+R.json.skins[e].name+"</td>";a+="<td>"+"</td>";a+="<td>"+R.json.skins[e].joints.length+"</td>";a+="<td>";a+="</td>";a+="<tr>"}a+="</table>"}if(R.timing){a+='<div id="groupTiming">Debug Loading Timing </div>';a+='<table id="sectionTiming" class="table treetable">';a+="<tr>";a+="  <th>task</th>";a+="  <th>time used</th>";a+="</tr>";let e=0;for(let e=0;e<R.timing.length-1;e++){a+="<tr>";a+="  <td>"+R.timing[e][0]+"</td>";a+="  <td>"+(R.timing[e+1][1]-R.timing[e][1])+" ms</td>";a+="</tr>"}a+="</table>"}let u=0;if(R.json.buffers)u=R.json.buffers[0].byteLength;a+='<div id="groupBinary">File Size Allocation ('+Math.round(u/1024)+"k )</div>";a+='<table id="sectionBinary" class="table treetable">';a+="<tr>";a+="  <th>name</th>";a+="  <th>size</th>";a+="  <th>%</th>";a+="</tr>";let g=u;for(let e in r){a+="<tr>";a+="<td>"+e+"</td>";a+="<td>"+Y(r[e])+" </td>";a+="<td>"+Math.round(r[e]/u*100)+"% </td>";a+="<tr>";g-=r[e]}if(g!=0){a+="<tr>";a+="<td>unknown</td>";a+="<td>"+Y(g)+" </td>";a+="<td>"+Math.round(g/u*100)+"% </td>";a+="<tr>"}a+="</table>";a+="</div>";E=new CABLES.UI.Tab("GLTF "+CABLES.basename(I.get()),{icon:"cube",infotext:"tab_gltf",padding:true,singleton:true});gui.mainTabs.addTab(E,true);E.addEventListener("close",C);E.html(a);CABLES.UI.Collapsable.setup(ele.byId("groupNodes"),ele.byId("sectionNodes"),false);CABLES.UI.Collapsable.setup(ele.byId("groupMaterials"),ele.byId("materialtable"),true);CABLES.UI.Collapsable.setup(ele.byId("groupAnims"),ele.byId("sectionAnim"),true);CABLES.UI.Collapsable.setup(ele.byId("groupMeshes"),ele.byId("meshestable"),true);CABLES.UI.Collapsable.setup(ele.byId("groupCameras"),ele.byId("sectionCameras"),true);CABLES.UI.Collapsable.setup(ele.byId("groupImages"),ele.byId("sectionImages"),true);CABLES.UI.Collapsable.setup(ele.byId("groupSkins"),ele.byId("sectionSkins"),true);CABLES.UI.Collapsable.setup(ele.byId("groupBinary"),ele.byId("sectionBinary"),true);CABLES.UI.Collapsable.setup(ele.byId("groupTiming"),ele.byId("sectionTiming"),true);gui.maintabPanel.show(true)}function Y(e){if(e>1024)return Math.round(e/1024)+" kb";if(e>1024*500)return Math.round(e/1024)+" mb";else return e+" bytes"}const q=class{constructor(e){this._mod=null;this._node=e;this._lastTime=0;this._matArr=[];this._m=mat4.create();this._invBindMatrix=mat4.create();this.identity=true}renderFinish(e){e.popModelMatrix();this._mod.unbind()}renderStart(e,t){if(!this._mod){this._mod=new CGL.ShaderModifier(e,x.name+this._node.name);this._mod.addModule({priority:-2,name:"MODULE_VERTEX_POSITION",srcHeadVert:l.skin_head_vert||"",srcBodyVert:l.skin_vert||""});this._mod.addUniformVert("m4[]","MOD_boneMats",[]);const s=vec3.create()}const n=this._node.skin;const i=R.json.skins[n].joints.length*16;{if(this._matArr.length!=i)this._matArr.length=i;for(let e=0;e<R.json.skins[n].joints.length;e++){const r=e*16;const a=R.json.skins[n].joints[e];const o=R.nodes[a];for(let e=0;e<16;e++)this._invBindMatrix[e]=R.accBuffers[R.json.skins[n].inverseBindMatrices][r+e];mat4.mul(this._m,o.modelMatAbs(),this._invBindMatrix);for(let e=0;e<this._m.length;e++)this._matArr[r+e]=this._m[e]}this._mod.setUniformValue("MOD_boneMats",this._matArr);this._lastTime=t}this._mod.define("SKIN_NUM_BONES",R.json.skins[n].joints.length);this._mod.bind();e.pushModelMatrix();if(this.identity)mat4.identity(e.mMatrix)}};const K=class{constructor(e){this.mesh=e;this.tex=null;this.numRowsPerTarget=0;this.makeTex(e.geom)}renderFinish(e){e.popModelMatrix();this._mod.unbind()}renderStart(e,t){if(!this._mod){this._mod=new CGL.ShaderModifier(e,"gltftarget");this._mod.addModule({priority:-2,name:"MODULE_VERTEX_POSITION",srcHeadVert:l.targets_head_vert||"",srcBodyVert:l.targets_vert||""});this._mod.addUniformVert("4f","MOD_targetTexInfo",[0,0,0,0]);this._mod.addUniformVert("t","MOD_targetTex",1);this._mod.addUniformVert("f[]","MOD_weights",[]);const n=vec3.create()}this._mod.pushTexture("MOD_targetTex",this.tex);if(this.tex&&this.mesh.weights){this._mod.setUniformValue("MOD_weights",this.mesh.weights);this._mod.setUniformValue("MOD_targetTexInfo",[this.tex.width,this.tex.height,this.numRowsPerTarget,this.mesh.weights.length]);this._mod.define("MOD_NUM_WEIGHTS",Math.max(1,this.mesh.weights.length))}else{this._mod.define("MOD_NUM_WEIGHTS",1)}this._mod.bind();e.pushModelMatrix();if(this.identity)mat4.identity(e.mMatrix)}makeTex(n){if(!n.morphTargets||!n.morphTargets.length)return;let i=n.morphTargets[0].vertices.length/3;let e=0;this.numRowsPerTarget=0;if(n.morphTargets[0].vertices&&n.morphTargets[0].vertices.length)this.numRowsPerTarget++;if(n.morphTargets[0].vertexNormals&&n.morphTargets[0].vertexNormals.length)this.numRowsPerTarget++;if(n.morphTargets[0].tangents&&n.morphTargets[0].tangents.length)this.numRowsPerTarget++;if(n.morphTargets[0].bitangents&&n.morphTargets[0].bitangents.length)this.numRowsPerTarget++;e=n.morphTargets.length*this.numRowsPerTarget;const s=new Float32Array(i*e*4);let r=0;for(let t=0;t<n.morphTargets.length;t++){if(n.morphTargets[t].vertices&&n.morphTargets[t].vertices.length){for(let e=0;e<n.morphTargets[t].vertices.length;e+=3){s[(r*i+e/3)*4+0]=n.morphTargets[t].vertices[e+0];s[(r*i+e/3)*4+1]=n.morphTargets[t].vertices[e+1];s[(r*i+e/3)*4+2]=n.morphTargets[t].vertices[e+2];s[(r*i+e/3)*4+3]=1}r++}if(n.morphTargets[t].vertexNormals&&n.morphTargets[t].vertexNormals.length){for(let e=0;e<n.morphTargets[t].vertexNormals.length;e+=3){s[(r*i+e/3)*4+0]=n.morphTargets[t].vertexNormals[e+0];s[(r*i+e/3)*4+1]=n.morphTargets[t].vertexNormals[e+1];s[(r*i+e/3)*4+2]=n.morphTargets[t].vertexNormals[e+2];s[(r*i+e/3)*4+3]=1}r++}if(n.morphTargets[t].tangents&&n.morphTargets[t].tangents.length){for(let e=0;e<n.morphTargets[t].tangents.length;e+=3){s[(r*i+e/3)*4+0]=n.morphTargets[t].tangents[e+0];s[(r*i+e/3)*4+1]=n.morphTargets[t].tangents[e+1];s[(r*i+e/3)*4+2]=n.morphTargets[t].tangents[e+2];s[(r*i+e/3)*4+3]=1}r++}if(n.morphTargets[t].bitangents&&n.morphTargets[t].bitangents.length){for(let e=0;e<n.morphTargets[t].bitangents.length;e+=3){s[(r*i+e/3)*4+0]=n.morphTargets[t].bitangents[e+0];s[(r*i+e/3)*4+1]=n.morphTargets[t].bitangents[e+1];s[(r*i+e/3)*4+2]=n.morphTargets[t].bitangents[e+2];s[(r*i+e/3)*4+3]=1}r++}}this.tex=new CGL.Texture(m,{isFloatingPointTexture:true,name:"targetsTexture"});this.tex.initFromData(s,i,e,CGL.Texture.FILTER_LINEAR,CGL.Texture.WRAP_REPEAT)}};const Q=x.inTrigger("Render"),t=x.inString("data"),I=x.inUrl("glb File",[".glb"]),Z=x.inBool("Draw",true),n=x.inDropDown("Camera",["None"],"None"),J=x.inString("Animation",""),$=x.inTriggerButton("Show Structure"),i=x.inSwitch("Center",["None","XYZ","XZ"],"XYZ"),s=x.inBool("Rescale",true),r=x.inFloat("Rescale Size",2.5),a=x.inFloat("Time"),h=x.inBool("Sync to timeline",false),ee=x.inBool("Loop",true),te=x.inSwitch("Normals Format",["XYZ","X-ZY"],"XYZ"),ne=x.inSwitch("Vertices Format",["XYZ","XZ-Y"],"XYZ"),c=x.inSwitch("Calc Normals",["Auto","Force Smooth","Never"]),f=x.inObject("Materials"),ie=x.inArray("Hide Nodes"),se=x.inBool("Use Material Properties",true),u=x.inBool("Active",true),re=x.outTrigger("Render Before"),g=x.outTrigger("Next"),ae=x.outString("Generator"),oe=x.outNumber("GLTF Version"),le=x.outArray("GLTF Extensions Used"),he=x.outNumber("Anim Length",0),ce=x.outNumber("Anim Time",0),fe=x.outObject("Json"),ue=x.outArray("Anims"),ge=x.outArray("BoundingPoints"),me=x.outObject("Bounds"),de=x.outTrigger("Finished"),pe=x.outBool("Loading");x.setPortGroup("Timing",[a,h,ee]);const m=x.patch.cgl;let d=null;let _e=false;let be=0;let p=false;let _=null;let b=[];let R=null;let T=0;let L=0;let O=true;let Te=null;let M=null;let y=null;const Ee=vec3.create();let xe=0;let ve=false;const N=vec3.create();I.onChange=ne.onChange=c.onChange=te.onChange=P;$.onTriggered=e;t.onChange=Me;ie.onChange=F;J.onChange=Ne;i.onChange=Se;x.toWorkPortsNeedToBeLinked(Q);t.setUiAttribs({hideParam:true,hidePort:true});x.setPortGroup("Transform",[s,r,i]);function Ae(){const t=["None"];if(R){for(let e=0;e<R.nodes.length;e++){if(R.nodes[e].camera>=0){t.push(R.nodes[e].name)}}}n.uiAttribs.values=t}function Se(){ve=i.get()!="None";if(R&&R.bounds){N.set(R.bounds.center);N[0]=-N[0];N[1]=-N[1];N[2]=-N[2];if(i.get()=="XZ")N[1]=-R.bounds.minY}}s.onChange=function(){r.setUiAttribs({greyout:!s.get()})};f.onChange=function(){O=true};x.onDelete=function(){C()};h.onChange=function(){a.setUiAttribs({greyout:h.get()})};n.onChange=Ce;function Ce(){_=null;if(!R)return;for(let e=0;e<R.nodes.length;e++){if(R.nodes[e].name==n.get())_=new U(R,R.nodes[e])}}Q.onTriggered=function(){if(!p)return;if(!u.get())return;if(_e){if(!d)d=CGL.MESHES.getSimpleCube(m,"ErrorCube");d.render(m.getShader())}be=0;if(h.get())L=x.patch.timer.getTime();else L=Math.max(0,a.get());if(ee.get()){L%=T;if(L<xe)de.trigger()}else{if(T>0&&L>=T)de.trigger()}xe=L;m.pushModelMatrix();ce.set(L||0);if(p&&R&&R.bounds){if(s.get()){let e=r.get()/R.bounds.maxAxis;R.scale=e;vec3.set(Ee,e,e,e);mat4.scale(m.mMatrix,m.mMatrix,Ee)}if(ve){mat4.translate(m.mMatrix,m.mMatrix,N)}}let e=m.frameStore.currentScene||null;m.frameStore.currentScene=R;re.trigger();if(p){if(O)Le();if(_)_.start(L);if(R){R.time=L;if(R.bounds&&m.shouldDrawHelpers(x)){if(CABLES.UI.renderHelper)m.pushShader(CABLES.GL_MARKER.getDefaultShader(m));else m.pushShader(CABLES.GL_MARKER.getSelectedShader(m));R.bounds.render(m);m.popShader()}if(Z.get()){for(let e=0;e<R.nodes.length;e++)if(!R.nodes[e].isChild)R.nodes[e].render(m)}else{for(let e=0;e<R.nodes.length;e++)if(!R.nodes[e].isChild)R.nodes[e].render(m,false,true)}}}g.trigger();m.frameStore.currentScene=e;m.popModelMatrix();if(_)_.end()};function Ie(){if(!R){p=true;_e=true;m.patch.loading.finished(M);x.setUiError("nogltf","GLTF File not found");return}x.setUiError("nogltf",null);if(R.loadingMeshes>0){setTimeout(Ie,100);return}R.timing.push(["finishLoading()",Math.round(performance.now()-R.startTime)]);O=true;he.set(T);R.bounds=new CABLES.CG.BoundingBox;R.timing.push(["start calc bounds",Math.round(performance.now()-R.startTime)]);for(let e=0;e<R.nodes.length;e++){const t=R.nodes[e];t.updateMatrix();if(!t.isChild)t.calcBounds(R,null,R.bounds)}if(R.bounds)me.set(R.bounds);R.timing.push(["calced bounds",Math.round(performance.now()-R.startTime)]);F();R.timing.push(["hideNodesFromData",Math.round(performance.now()-R.startTime)]);if(E)e();R.timing.push(["printinfo",Math.round(performance.now()-R.startTime)]);Ae();Ce();ge.set(b);if(R){if(I.get()&&!I.get().startsWith("data:")){x.setUiAttrib({extendTitle:CABLES.basename(I.get())})}R.loaded=Date.now()}if(R){for(let e=0;e<R.nodes.length;e++){if(!R.nodes[e].isChild){R.nodes[e].render(m,false,true,true,false,true,0)}}for(let e=0;e<R.nodes.length;e++){const t=R.nodes[e];t.children=Fe(t.children)}}Se();Ne();pe.set(false);m.patch.loading.finished(M);M=null;if(R.accBuffersDelete){for(let e=0;e<R.accBuffersDelete.length;e++){R.accBuffers[R.accBuffersDelete[e]]=null}}if(!(R.json.images&&R.json.images.length))R.chunks=null;p=true}function Re(e){if(!u.get())return;if(!M)M=m.patch.loading.start("gltfScene",I.get(),x);let t=I.get();let n=x.patch.getFilePath(String(I.get()));if(I.get()&&!I.get().startsWith("data:")){if(e===true)n+="?rnd="+CABLES.generateUUID()}O=true;pe.set(true);fetch(n).then(e=>{return e.arrayBuffer()}).then(e=>{if(I.get()!=t){m.patch.loading.finished(M);M=null;return}b=[];T=0;R=k(e);e=null;Ie()});C();const i=new XMLHttpRequest;i.open("GET",n,true);i.responseType="arraybuffer";m.patch.loading.addAssetLoadingTask(()=>{})}x.onFileChanged=function(e){if(I.get()&&I.get().indexOf(e)>-1){P(true)}};u.onChange=()=>{if(u.get())P();if(!u.get()){R=null}};function P(e){clearTimeout(Te);Te=setTimeout(function(){Re(e)},30)}function Le(){if(!R)return;R.shaders={};if(f.links.length==1&&f.get()){O=true;const n=f.links[0].portOut.op;const i=n.getPort("Shader");const s=n.getPort("Material Name");if(!i&&!s){const r=f.get();for(let t in r){if(r[t]&&R.json.materials)for(let e=0;e<R.json.materials.length;e++){if(R.json.materials[e].name==t){if(R.shaders[e]){n.warn("double material assignment:",name)}R.shaders[e]=r[t]}}}}}if(f.get()){for(let e=0;e<f.links.length;e++){const t=f.links[e].portOut.op;const i=t.getPort("Shader");const s=t.getPort("Material Name");if(i&&s&&i.get()){const name=s.get();if(R.json.materials)for(let e=0;e<R.json.materials.length;e++)if(R.json.materials[e].name==name){if(R.shaders[e]){t.warn("double material assignment:",name)}R.shaders[e]=i.get()}}}}O=false;if(E)e()}function Oe(){const t=ie.get();if(!R||!y||!y.hiddenNodes)return;if(!t){return}for(let e=0;e<t.length;e++){const n=R.getNode(t[e]);if(n)n.hidden=true}}function F(){if(!y)Me();if(!R)return;R.unHideAll();if(y&&y.hiddenNodes){for(const e in y.hiddenNodes){const t=R.getNode(e);if(t)t.hidden=true;else x.verbose("node to be hidden not found",e,t)}}Oe()}function Me(){y=t.get();if(!y||y==="")y={};else y=JSON.parse(y);if(R)F();return y}function ye(){t.set(JSON.stringify(y))}function Ne(){if(R&&R.nodes){for(let e=0;e<R.nodes.length;e++){R.nodes[e].setAnimAction(J.get())}}}function Pe(t,n){for(let e=0;e<R.nodes.length;e++){if(R.nodes[e].children.indexOf(n)>=0){t.push(R.nodes[e]);if(R.nodes[e].isChild)Pe(t,e)}}}x.exposeTexture=function(e){const t=gui.corePatch().addOp("Ops.Gl.GLTF.GltfTexture");t.getPort("Name").set(e);w(t,1);x.patch.link(x,g.name,t,"Render");gui.patchView.testCollision(t);gui.patchView.centerSelectOp(t.id,true)};x.exposeGeom=function(e,t){const n=gui.corePatch().addOp("Ops.Gl.GLTF.GltfGeometry");n.getPort("Name").set(e);n.getPort("Submesh").set(t);w(n,1);x.patch.link(x,g.name,n,"Update");gui.patchView.testCollision(n);gui.patchView.centerSelectOp(n.id,true)};function w(e,t){t=t||1;e.setUiAttrib({subPatch:x.uiAttribs.subPatch,translate:{x:x.uiAttribs.translate.x,y:x.uiAttribs.translate.y+t*CABLES.GLUI.glUiConfig.newOpDistanceY}})}x.exposeNode=function(n,e,i){let t=e=="hierarchy";if(t){let s=[];for(let e=0;e<R.nodes.length;e++){if(R.nodes[e].name==n){let t=[];const r=R.nodes[e];Pe(t,e);t=t.reverse();t.push(r,r);let n=g.name;let i=x;for(let e=0;e<t.length;e++){const a=gui.corePatch().addOp("Ops.Gl.GLTF.GltfNode_v2");a.getPort("Node Name").set(t[e].name);x.patch.link(i,n,a,"Render");w(a,e);if(e==t.length-1){a.getPort("Transformation").set(false)}else{a.getPort("Draw Mesh").set(false);a.getPort("Draw Childs").set(false)}n="Next";i=a;s.push(a);gui.patchView.testCollision(a)}}}for(let e=0;e<s.length;e++){s[e].selectChilds()}}else{let t="Ops.Gl.GLTF.GltfNode_v2";if(i&&i.skin)t="Ops.Gl.GLTF.GltfSkin";if(e=="transform")t="Ops.Gl.GLTF.GltfNodeTransform_v2";gui.serverOps.loadOpLibs(t,()=>{let e=gui.corePatch().addOp(t);e.getPort("Node Name").set(n);w(e);x.patch.link(x,g.name,e,"Render");gui.patchView.testCollision(e);gui.patchView.centerSelectOp(e.id,true)})}gui.closeModal()};x.assignMaterial=function(e){const t=gui.corePatch().addOp("Ops.Gl.GLTF.GltfSetMaterial");t.getPort("Material Name").set(e);x.patch.link(x,f.name,t,"Material");w(t);gui.patchView.testCollision(t);gui.patchView.centerSelectOp(t.id,true);gui.closeModal()};x.toggleNodeVisibility=function(e){const t=R.getNode(e);t.hidden=!t.hidden;y.hiddenNodes=y.hiddenNodes||{};if(t)if(t.hidden)y.hiddenNodes[e]=true;else delete y.hiddenNodes[e];ye()};function Fe(n){const i={},s=[];for(let e=0,t=n.length;e<t;++e){if(!i.hasOwnProperty(n[e])){s.push(n[e]);i[n[e]]=1}}return s}};Ops.Gl.GLTF.GltfScene_v4.prototype=new CABLES.Op;CABLES.OPS["c9cbb226-46f7-4ca6-8dab-a9d0bdca4331"]={f:Ops.Gl.GLTF.GltfScene_v4,objName:"Ops.Gl.GLTF.GltfScene_v4"};Ops.Trigger.Sequence=function(){CABLES.Op.apply(this,arguments);const r=this;const e={};const t=r.inTrigger("exe"),n=r.inTriggerButton("Clean up connections");const i=[],a=[],s=16;let o=null,l=[];t.onTriggered=f;n.onTriggered=u;n.setUiAttribs({hideParam:true,hidePort:true});for(let t=0;t<s;t++){const g=r.outTrigger("trigger "+t);a.push(g);g.onLinkChanged=c;if(t<s-1){let e=r.inTrigger("exe "+t);e.onTriggered=f;i.push(e)}}h();function h(){l.length=0;for(let e=0;e<a.length;e++)if(a[e].links.length>0)l.push(a[e])}function c(){h();clearTimeout(o);o=setTimeout(()=>{let t=false;for(let e=0;e<a.length;e++)if(a[e].links.length>1)t=true;n.setUiAttribs({hideParam:!t});if(r.isCurrentUiOp())r.refreshParams()},60)}function f(){for(let e=0;e<l.length;e++)l[e].trigger()}function u(){let i=0;for(let n=0;n<a.length;n++){let t=[];if(a[n].links.length>1)for(let e=1;e<a[n].links.length;e++){while(a[i].links.length>0)i++;t.push(a[n].links[e]);const s=a[n].links[e].getOtherPort(a[n]);r.patch.link(r,"trigger "+i,s.op,s.name);i++}for(let e=0;e<t.length;e++)t[e].remove()}c();h()}};Ops.Trigger.Sequence.prototype=new CABLES.Op;CABLES.OPS["a466bc1f-06e9-4595-8849-bffb9fe22f99"]={f:Ops.Trigger.Sequence,objName:"Ops.Trigger.Sequence"};Ops.Gl.CubeMap.Skybox=function(){CABLES.Op.apply(this,arguments);const e=this;const t={skybox_frag:"#define PI 3.14159265358 //97932384626433832795\n#define PI_TWO 2. * PI\n#define RECIPROCAL_PI 1./PI\n#define RECIPROCAL_PI2 RECIPROCAL_PI/2.\n\nUNI vec2 expGamma;\n\n\n#ifdef TEX_FORMAT_CUBEMAP\n    UNI samplerCube skybox;\n    #ifndef WEBGL1\n        #define SAMPLETEX texture\n    #endif\n    #ifdef WEBGL1\n        #define SAMPLETEX textureCubeLodEXT\n    #endif\n#endif\n\n#ifndef TEX_FORMAT_CUBEMAP\n    #define TEX_FORMAT_EQUIRECT\n    UNI sampler2D skybox;\n    #ifdef WEBGL1\n        #ifdef GL_EXT_shader_texture_lod\n            #define textureLod texture2DLodEXT\n        #endif\n    #endif\n    #define SAMPLETEX sampleEquirect\n\n#endif\n\nIN vec3 worldPos;\n\nvec4 sampleEquirect(sampler2D tex, vec3 direction,float lod) {\n    vec2 sampleUV;\n    vec3 newDirection = normalize(direction);\n\n    sampleUV.x = atan( newDirection.z, newDirection.x ) * RECIPROCAL_PI2 + 0.75;\n    sampleUV.y = asin( clamp(newDirection.y, -1., 1.) ) * RECIPROCAL_PI + 0.5;\n\n    return texture(tex, sampleUV);\n}\n\nvec4 sampleEquirect(sampler2D tex, vec3 direction) {\n    return sampleEquirect(tex,direction,0.0);\n}\n\nhighp vec3 DecodeRGBE8(highp vec4 rgbe)\n{\n    highp vec3 vDecoded = rgbe.rgb * pow(2.0, rgbe.a * 255.0-128.0);\n    return vDecoded;\n}\n\nvoid main() {\n    {{MODULE_BEGIN_FRAG}}\n    vec4 col = vec4(1.);\n\n    {{MODULE_COLOR}}\n\n    vec3 newPos = worldPos;\n\n    vec4 finalColor;\n    #ifndef RGBE\n        finalColor = vec4(SAMPLETEX(skybox, newPos,0.0));\n    #endif\n\n    #ifdef RGBE\n        finalColor.rgb=DecodeRGBE8(SAMPLETEX(skybox, newPos));\n    #endif\n\n    float gamma=expGamma.x;\n    float exposure=expGamma.y;\n    finalColor.rgb = vec3(1.0) - exp(-finalColor.rgb * exposure);\n\n    finalColor.rgb = pow(finalColor.rgb, vec3(1.0 / gamma));\n    outColor=vec4(finalColor.rgb,1.0);\n\n}\n",skybox_vert:"{{MODULES_HEAD}}\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN float attrVertIndex;\n\nOUT vec2 texCoord;\nOUT vec3 norm;\nOUT vec3 worldPos;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\nvoid main()\n{\n    texCoord=attrTexCoord;\n    norm=attrVertNormal;\n    vec4 pos=vec4(vPosition,  1.0);\n\n    {{MODULE_VERTEX_POSITION}}\n\n    mat4 mMatrix=modelMatrix;\n    worldPos = vec3(mMatrix * pos);\n    mat4 rotView = mat4(mat3(viewMatrix)); // remove translation from the view matrix\n    vec4 clipPos = projMatrix * rotView * pos;\n\n    gl_Position = clipPos.xyww;\n}"};const n=e.patch.cgl,i=e.inTrigger("Trigger In"),s=e.inBool("Render",true),r=e.inTexture("Skybox"),a=e.inFloat("Rotate",0),o=e.inBool("RGBE Format",false),l=e.inFloat("Exposure",1),h=e.inFloat("Gamma",2.2),c=e.outTrigger("Trigger Out");const f=new CGL.Geometry("unit cube");f.vertices=new Float32Array([-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,1,-1,1,1,1,1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,1,-1,1]);const u=new CGL.Mesh(n,f);const g=new CGL.Shader(n,"skybox");const m=new CGL.Uniform(g,"t","skybox",0);const d=new CGL.Uniform(g,"2f","expGamma",l,h);if(n.glVersion==1)g.enableExtension("GL_EXT_shader_texture_lod");g.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);g.setSource(t.skybox_vert,t.skybox_frag);g.offScreenPass=true;r.onChange=o.onChange=p;p();function p(){g.toggleDefine("RGBE",o.get());const e=r.get()&&r.get().cubemap;g.toggleDefine("TEX_FORMAT_CUBEMAP",e);g.toggleDefine("TEX_FORMAT_EQUIRECT",!e)}i.onTriggered=()=>{if(!r.get()||!s.get()){c.trigger();return}g.popTextures();n.pushModelMatrix();if(!r.get().cubemap&&r.get().filter!==CGL.Texture.FILTER_LINEAR)e.setUiError("linearFilter","If there is a seam in the skybox, try changing the texture filter to linear!",0);else e.setUiError("linearFilter",null);mat4.rotateY(n.mMatrix,n.mMatrix,a.get()*CGL.DEG2RAD);if(r.get().tex)g.pushTexture(m,r.get().tex);else if(r.get().cubemap)g.pushTexture(m,r.get().cubemap,n.gl.TEXTURE_CUBE_MAP);u.render(g);n.popModelMatrix();n.popDepthFunc();c.trigger()}};Ops.Gl.CubeMap.Skybox.prototype=new CABLES.Op;CABLES.OPS["97ce1d35-bd7a-43cb-a2bf-5b7e37fb8925"]={f:Ops.Gl.CubeMap.Skybox,objName:"Ops.Gl.CubeMap.Skybox"};Ops.Patch.P34XcHM.Cube_v2=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const t=a.inTrigger("Render"),n=a.inValueBool("Render Mesh",true),o=a.inValue("Width",1),l=a.inValue("Length",1),h=a.inValue("Height",1),c=a.inValueBool("Center",true),f=a.inSwitch("Mapping",["Side","Cube +-","SideWrap"],"Side"),u=a.inValue("Bias",0),g=a.inValueBool("Flip X",true),m=a.inValueBool("Top",true),d=a.inValueBool("Bottom",true),p=a.inValueBool("Left",true),_=a.inValueBool("Right",true),b=a.inValueBool("Front",true),T=a.inValueBool("Back",true),i=a.outTrigger("Next"),E=a.outObject("geometry",null,"geometry");const s=a.patch.cgl;a.toWorkPortsNeedToBeLinked(t);a.toWorkShouldNotBeChild("Ops.Gl.TextureEffects.ImageCompose",CABLES.OP_PORT_TYPE_FUNCTION);a.setPortGroup("Mapping",[f,u,g]);a.setPortGroup("Geometry",[o,h,l,c]);a.setPortGroup("Sides",[m,d,p,_,b,T]);let x=null,v=null,A=true,S=true;u.onChange=g.onChange=m.onChange=d.onChange=p.onChange=_.onChange=b.onChange=T.onChange=f.onChange=o.onChange=h.onChange=l.onChange=c.onChange=r;function r(){S=true}t.onLinkChanged=function(){if(!t.isLinked())E.set(null);else E.setRef(x)};t.onTriggered=function(){if(S)C();if(n.get()&&v&&A)v.render(s.getShader());i.trigger()};a.preRender=function(){C();v.render(s.getShader())};function C(){if(!x)x=new CGL.Geometry("cubemesh");x.clear();let e=o.get();let t=-1*o.get();let n=h.get();let i=-1*h.get();let s=l.get();let r=-1*l.get();if(!c.get()){t=0;i=0;r=0}else{e*=.5;t*=.5;n*=.5;i*=.5;s*=.5;r*=.5}L(x,e,n,s,t,i,r);if(f.get()=="Side")I(x,1,1,1);else if(f.get()=="SideWrap")I(x,e,n,s);else R(x);x.verticesIndices=[];if(m.get())x.verticesIndices.push(8,9,10,8,10,11);if(d.get())x.verticesIndices.push(12,13,14,12,14,15);if(p.get())x.verticesIndices.push(20,21,22,20,22,23);if(_.get())x.verticesIndices.push(16,17,18,16,18,19);if(T.get())x.verticesIndices.push(4,5,6,4,6,7);if(b.get())x.verticesIndices.push(0,1,2,0,2,3);if(x.verticesIndices.length===0)A=false;else A=true;if(v)v.dispose();v=a.patch.cg.createMesh(x);E.setRef(x);S=false}a.onDelete=function(){if(v)v.dispose()};function I(e,t,n,i){const s=u.get();let r=1-s;let a=0+s;if(g.get()){[r,a]=[a,r]}let o=1-s;let l=0+s;e.setTexCoords([t*a,n*o,t*r,n*o,t*r,n*l,t*a,n*l,t*r,n*o,t*r,n*l,t*a,n*l,t*a,n*o,t*a,i*l,t*a,i*o,t*r,i*o,t*r,i*l,t*r,n*l,t*a,n*l,t*a,n*o,t*r,n*o,i*r,n*o,i*r,n*l,i*a,n*l,i*a,n*o,i*a,n*o,i*r,n*o,i*r,n*l,i*a,n*l])}function R(e,t,n,i,s,r,a){const o=.25;const l=1/3;const h=u.get();let c=0;if(g.get())c=1;const f=[];f.push(c+o+h,l*2-h,c+o*2-h,l*2-h,c+o*2-h,l+h,c+o+h,l+h,c+o*4-h,l*2-h,c+o*4-h,l+h,c+o*3+h,l+h,c+o*3+h,l*2-h);if(g.get())f.push(o+h,0-h,o*2-h,0-h,o*2-h,l*1+h,o+h,l*1+h,o+h,l*3+h,o+h,l*2-h,o*2-h,l*2-h,o*2-h,l*3+h);else f.push(o+h,0+h,o+h,l*1-h,o*2-h,l*1-h,o*2-h,0+h,o+h,l*3-h,o*2-h,l*3-h,o*2-h,l*2+h,o+h,l*2+h);f.push(c+o*3-h,1-l-h,c+o*3-h,1-l*2+h,c+o*2+h,1-l*2+h,c+o*2+h,1-l-h,c+o*0+h,1-l-h,c+o*1-h,1-l-h,c+o*1-h,1-l*2+h,c+o*0+h,1-l*2+h);e.setTexCoords(f)}function L(e,t,n,i,s,r,a){e.vertices=[s,r,i,t,r,i,t,n,i,s,n,i,s,r,a,s,n,a,t,n,a,t,r,a,s,n,a,s,n,i,t,n,i,t,n,a,s,r,a,t,r,a,t,r,i,s,r,i,t,r,a,t,n,a,t,n,i,t,r,i,s,r,a,s,r,i,s,n,i,s,n,a];e.vertexNormals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]);e.tangents=new Float32Array([0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1]);e.biTangents=new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1])}};Ops.Patch.P34XcHM.Cube_v2.prototype=new CABLES.Op;CABLES.OPS["fe14f026-4434-499c-8a5c-cd0633930085"]={f:Ops.Patch.P34XcHM.Cube_v2,objName:"Ops.Patch.P34XcHM.Cube_v2"};window.addEventListener("load",function(e){CABLES.jsLoaded=new Event("CABLES.jsLoaded");document.dispatchEvent(CABLES.jsLoaded)});(()=>{"use strict";const s={EASINGS:["linear","absolute","smoothstep","smootherstep","Cubic In","Cubic Out","Cubic In Out","Expo In","Expo Out","Expo In Out","Sin In","Sin Out","Sin In Out","Quart In","Quart Out","Quart In Out","Quint In","Quint Out","Quint In Out","Back In","Back Out","Back In Out","Elastic In","Elastic Out","Bounce In","Bounce Out"],EASING_LINEAR:0,EASING_ABSOLUTE:1,EASING_SMOOTHSTEP:2,EASING_SMOOTHERSTEP:3,EASING_CUBICSPLINE:4,EASING_CUBIC_IN:5,EASING_CUBIC_OUT:6,EASING_CUBIC_INOUT:7,EASING_EXPO_IN:8,EASING_EXPO_OUT:9,EASING_EXPO_INOUT:10,EASING_SIN_IN:11,EASING_SIN_OUT:12,EASING_SIN_INOUT:13,EASING_BACK_IN:14,EASING_BACK_OUT:15,EASING_BACK_INOUT:16,EASING_ELASTIC_IN:17,EASING_ELASTIC_OUT:18,EASING_BOUNCE_IN:19,EASING_BOUNCE_OUT:21,EASING_QUART_IN:22,EASING_QUART_OUT:23,EASING_QUART_INOUT:24,EASING_QUINT_IN:25,EASING_QUINT_OUT:26,EASING_QUINT_INOUT:27},r=0,n=1,i=2,t=2,a=3,o=4,l=5,h=0,c=1,e={float32Concat:function(e,t){e instanceof Float32Array||(e=new Float32Array(e)),t instanceof Float32Array||(t=new Float32Array(t));const n=new Float32Array(e.length+t.length);return n.set(e),n.set(t,e.length),n}};function f(t){for(const e in t)t[e]&&"object"==typeof objValue&&t[e].constructor===Object&&(t[e]=f(t[e])),(null===t[e]||void 0===t[e]||Array.isArray(t[e])&&0==t[e].length)&&delete t[e];return t}Math.randomSeed=1,Math.seededRandom=function(e,t){return 0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),e=e||1,t=t||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280,t+Math.randomSeed/233280*(e-t)},e.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},e.isNumeric=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},e.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(e){return 0===this.indexOf(e)},String.prototype.endsWith=String.prototype.endsWith||function(e){return this.match(e+"$")==e},window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};const u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",g=new Uint8Array(256);for(let e=0;e<u.length;e++)g[u.charCodeAt(e)]=e;const m=g,d=function(e){let t,n,i,s,r,a=.75*e.length,o=e.length,l=0;"="===e[e.length-1]&&(a--,"="===e[e.length-2]&&a--);let h=new ArrayBuffer(a),c=new Uint8Array(h);for(t=0;t<o;t+=4)n=m[e.charCodeAt(t)],i=m[e.charCodeAt(t+1)],s=m[e.charCodeAt(t+2)],r=m[e.charCodeAt(t+3)],c[l++]=n<<2|i>>4,c[l++]=(15&i)<<4|s>>2,c[l++]=(3&s)<<6|63&r;return h};class p{constructor(e){this._init(),this._first=!0,this._wireMesh=null,e&&this.apply(e)}_init(){this._max=[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE],this._min=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],this._center=[0,0,0],this._size=[0,0,0],this._maxAxis=0,this._first=!0}get maxAxis(){return this._maxAxis||1}get size(){return this._size}get center(){return this._center}get x(){return this._center[0]}get y(){return this._center[1]}get z(){return this._center[2]}get minX(){return this._min[0]}get minY(){return this._min[1]}get minZ(){return this._min[2]}get maxX(){return this._max[0]}get maxY(){return this._max[1]}get maxZ(){return this._max[2]}apply(t,e){if(t){if(t instanceof p){const e=t;this.applyPos(e.maxX,e.maxY,e.maxZ),this.applyPos(e.minX,e.minY,e.minZ)}else for(let e=0;e<t.vertices.length;e+=3)this.applyPos(t.vertices[e],t.vertices[e+1],t.vertices[e+2]);this.calcCenterSize()}}copy(){return new p(this)}get changed(){return!(this._max[0]==-Number.MAX_VALUE&&this._max[1]==-Number.MAX_VALUE&&this._max[2]==-Number.MAX_VALUE)}applyPos(e,t,n){if(e!=Number.MAX_VALUE&&e!=-Number.MAX_VALUE&&t!=Number.MAX_VALUE&&t!=-Number.MAX_VALUE&&n!=Number.MAX_VALUE&&n!=-Number.MAX_VALUE&&CABLES.UTILS.isNumeric(e)&&CABLES.UTILS.isNumeric(t)&&CABLES.UTILS.isNumeric(n)){if(this._first)return this._max[0]=e,this._max[1]=t,this._max[2]=n,this._min[0]=e,this._min[1]=t,this._min[2]=n,void(this._first=!1);this._max[0]=Math.max(this._max[0],e),this._max[1]=Math.max(this._max[1],t),this._max[2]=Math.max(this._max[2],n),this._min[0]=Math.min(this._min[0],e),this._min[1]=Math.min(this._min[1],t),this._min[2]=Math.min(this._min[2],n)}}calcCenterSize(){this._first||(this._size[0]=this._max[0]-this._min[0],this._size[1]=this._max[1]-this._min[1],this._size[2]=this._max[2]-this._min[2],this._center[0]=(this._min[0]+this._max[0])/2,this._center[1]=(this._min[1]+this._max[1])/2,this._center[2]=(this._min[2]+this._max[2])/2,this._maxAxis=Math.max(this._size[2],Math.max(this._size[0],this._size[1])))}mulMat4(e){this._first&&(this._max[0]=0,this._max[1]=0,this._max[2]=0,this._min[0]=0,this._min[1]=0,this._min[2]=0,this._first=!1),vec3.transformMat4(this._max,this._max,e),vec3.transformMat4(this._min,this._min,e),this.calcCenterSize()}render(e,t){this._wireMesh||(this._wireMesh=new CGL.WireCube(e)),e.pushModelMatrix(),mat4.translate(e.mMatrix,e.mMatrix,this._center),this._wireMesh.render(e,this._size[0]/2,this._size[1]/2,this._size[2]/2),e.popModelMatrix()}}class _{constructor(e){this._logs=[],this.initiator=e}stack(e){console.info("["+this.initiator+"] ",e),console.log((new Error).stack)}groupCollapsed(e){console.groupCollapsed("["+this.initiator+"] "+e)}table(e){console.table(e)}groupEnd(){console.groupEnd()}error(e){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",arguments)}info(e){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"info",arguments)}warn(e){console.warn("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"warn",arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"verbose",arguments)}log(e){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"log",arguments)}userInteraction(e){}}const b=function(e){this.name=e||"unknown",this._log=new _("cgl_geometry"),this.faceVertCount=3,this.glPrimitive=null,this._attributes={},this._vertices=[],this.verticesIndices=[],this.isGeometry=!0,this.morphTargets=[],Object.defineProperty(this,"vertices",{get(){return this._vertices},set(e){this.setVertices(e)}}),Object.defineProperty(this,"texCoords",{get(){const e=this.getAttribute("texCoords");return e?e.data:[]},set(e){this.setAttribute("texCoords",e,2)}}),Object.defineProperty(this,"vertexNormals",{get(){const e=this.getAttribute("vertexNormals");return e?e.data:[]},set(e){this.setAttribute("vertexNormals",e,3)}}),Object.defineProperty(this,"tangents",{get(){const e=this.getAttribute("tangents");return e?e.data:[]},set(e){this.setAttribute("tangents",e,3)}}),Object.defineProperty(this,"biTangents",{get(){const e=this.getAttribute("biTangents");return e?e.data:[]},set(e){this.setAttribute("biTangents",e,3)}}),Object.defineProperty(this,"vertexColors",{get(){const e=this.getAttribute("vertexColors");return e?e.data:[]},set(e){this.setAttribute("vertexColors",e,4)}})};b.prototype.clear=function(){this._vertices=new Float32Array([]),this.verticesIndices=[],this.texCoords=new Float32Array([]),this.vertexNormals=new Float32Array([]),this.tangents=[],this.biTangents=[],this._attributes={}},b.prototype.getAttributes=function(){return this._attributes},b.prototype.getAttribute=function(t){for(const e in this._attributes)if(this._attributes[e].name==t)return this._attributes[e];return null},b.prototype.setAttribute=function(e,t,n){let i="";(!n||n>4)&&(console.log("itemsize wrong?",n,e),this._log.stack("itemsize"),n=3),1==n?i="float":2==n?i="vec2":3==n?i="vec3":4==n&&(i="vec4");const s={name:e,data:t,itemSize:n,type:i};this._attributes[e]=s},b.prototype.copyAttribute=function(e,t){const n=this.getAttribute(e);t.setAttribute(e,new Float32Array(n.data),n.itemSize)},b.prototype.setVertices=function(e){e instanceof Float32Array?this._vertices=e:this._vertices=new Float32Array(e)},b.prototype.setTexCoords=function(e){e instanceof Float32Array?this.texCoords=e:this.texCoords=new Float32Array(e)},b.prototype.calcNormals=function(e){const t={smooth:e};this.calculateNormals(t)},b.prototype.flipNormals=function(t,n,i){let s=vec3.create();null==t&&(t=1),null==n&&(n=1),null==i&&(i=1);for(let e=0;e<this.vertexNormals.length;e+=3)vec3.set(s,this.vertexNormals[e+0],this.vertexNormals[e+1],this.vertexNormals[e+2]),s[0]*=-t,s[1]*=-n,s[2]*=-i,vec3.normalize(s,s),this.vertexNormals[e+0]=s[0],this.vertexNormals[e+1]=s[1],this.vertexNormals[e+2]=s[2]},b.prototype.getNumTriangles=function(){return this.verticesIndices&&this.verticesIndices.length?this.verticesIndices.length/3:this.vertices.length/3},b.prototype.flipVertDir=function(){const t=[];t.length=this.verticesIndices.length;for(let e=0;e<this.verticesIndices.length;e+=3)t[e]=this.verticesIndices[e+2],t[e+1]=this.verticesIndices[e+1],t[e+2]=this.verticesIndices[e];this.verticesIndices=t},b.prototype.setPointVertices=function(t){if(t.length%3==0){t instanceof Float32Array?this.vertices=t:this.vertices=new Float32Array(t),this.texCoords instanceof Float32Array||(this.texCoords=new Float32Array(t.length/3*2)),this.verticesIndices.length=t.length/3;for(let e=0;e<t.length/3;e++)this.verticesIndices[e]=e,this.texCoords[2*e]=0,this.texCoords[2*e+1]=0}else this._log.error("SetPointVertices: Array must be multiple of three.")},b.prototype.merge=function(t){if(!t)return;if(this.isIndexed()!=t.isIndexed()&&(this.isIndexed()&&this.unIndex(!1,!0),t.isIndexed())){const n=t.copy();n.unIndex(!1,!0),t=n}const n=this.verticesIndices.length,i=this._vertices.length/3;this.verticesIndices.length=this.verticesIndices.length+t.verticesIndices.length;for(let e=0;e<t.verticesIndices.length;e++)this.verticesIndices[n+e]=t.verticesIndices[e]+i;this.vertices=e.float32Concat(this._vertices,t.vertices),this.texCoords=e.float32Concat(this.texCoords,t.texCoords),this.vertexNormals=e.float32Concat(this.vertexNormals,t.vertexNormals),this.tangents=e.float32Concat(this.tangents,t.tangents),this.biTangents=e.float32Concat(this.biTangents,t.biTangents)},b.prototype.copy=function(){const t=new b(this.name+" copy");if(t.faceVertCount=this.faceVertCount,t.glPrimitive=this.glPrimitive,t.setVertices(this._vertices.slice(0)),this.verticesIndices){t.verticesIndices.length=this.verticesIndices.length;for(let e=0;e<this.verticesIndices.length;e++)t.verticesIndices[e]=this.verticesIndices[e]}for(let e in this._attributes)this.copyAttribute(e,t);t.morphTargets.length=this.morphTargets.length;for(let e=0;e<this.morphTargets.length;e++)t.morphTargets[e]=this.morphTargets[e];return t},b.prototype.calculateNormals=function(t){!1===(t=t||{}).smooth&&this.unIndex();const n=vec3.create(),i=vec3.create(),s=vec3.create();function r(e){return vec3.subtract(n,e[0],e[1]),vec3.subtract(i,e[0],e[2]),vec3.cross(s,n,i),vec3.normalize(s,s),t&&t.forceZUp&&s[2]<0&&(s[0]*=-1,s[1]*=-1,s[2]*=-1),s}this.getVertexVec=function(e){const t=[0,0,0];return t[0]=this.vertices[3*e+0],t[1]=this.vertices[3*e+1],t[2]=this.vertices[3*e+2],t},this.vertexNormals instanceof Float32Array&&this.vertexNormals.length==this.vertices.length||(this.vertexNormals=new Float32Array(this.vertices.length));for(let e=0;e<this.vertices.length;e++)this.vertexNormals[e]=0;if(this.isIndexed()){const t=[];t.length=Math.floor(this.verticesIndices.length/3);for(let e=0;e<this.verticesIndices.length;e+=3){const i=[this.getVertexVec(this.verticesIndices[e+0]),this.getVertexVec(this.verticesIndices[e+1]),this.getVertexVec(this.verticesIndices[e+2])];t[e/3]=r(i),this.vertexNormals[3*this.verticesIndices[e+0]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+0]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+0]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+1]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+1]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+1]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+2]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+2]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+2]+2]+=t[e/3][2]}for(let t=0;t<this.verticesIndices.length;t+=3)for(let e=0;e<3;e++){const i=[this.vertexNormals[3*this.verticesIndices[t+e]+0],this.vertexNormals[3*this.verticesIndices[t+e]+1],this.vertexNormals[3*this.verticesIndices[t+e]+2]];vec3.normalize(i,i),this.vertexNormals[3*this.verticesIndices[t+e]+0]=i[0],this.vertexNormals[3*this.verticesIndices[t+e]+1]=i[1],this.vertexNormals[3*this.verticesIndices[t+e]+2]=i[2]}}else{const t=[];for(let e=0;e<this.vertices.length;e+=9){const i=r([[this.vertices[e+0],this.vertices[e+1],this.vertices[e+2]],[this.vertices[e+3],this.vertices[e+4],this.vertices[e+5]],[this.vertices[e+6],this.vertices[e+7],this.vertices[e+8]]]);t.push(i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2])}this.vertexNormals=t}},b.prototype.calcTangentsBitangents=function(){if(!this.vertices.length)return;if(!this.vertexNormals.length)return;if(!this.texCoords.length){const o=this.vertices.length/3*2;this.texCoords=new Float32Array(o);for(let e=0;e<o;e+=1)this.texCoords[e]=0}if(!this.verticesIndices||!this.verticesIndices.length)return;if(this.verticesIndices.length%3!=0)return void this._log.error("Vertex indices mismatch!");const o=this.verticesIndices.length/3,l=this.vertices.length/3;this.tangents=new Float32Array(this.vertexNormals.length),this.biTangents=new Float32Array(this.vertexNormals.length);const h=[];h.length=2*l;const c=vec3.create(),f=vec3.create(),u=vec3.create(),g=vec2.create(),m=vec2.create(),d=vec2.create(),p=vec3.create(),_=vec3.create();for(let a=0;a<o;a+=1){const o=this.verticesIndices[3*a],b=this.verticesIndices[3*a+1],T=this.verticesIndices[3*a+2];vec3.set(c,this.vertices[3*o],this.vertices[3*o+1],this.vertices[3*o+2]),vec3.set(f,this.vertices[3*b],this.vertices[3*b+1],this.vertices[3*b+2]),vec3.set(u,this.vertices[3*T],this.vertices[3*T+1],this.vertices[3*T+2]),vec2.set(g,this.texCoords[2*o],this.texCoords[2*o+1]),vec2.set(m,this.texCoords[2*b],this.texCoords[2*b+1]),vec2.set(d,this.texCoords[2*T],this.texCoords[2*T+1]);const E=f[0]-c[0],x=u[0]-c[0],v=f[1]-c[1],A=u[1]-c[1],S=f[2]-c[2],e=u[2]-c[2],t=m[0]-g[0],n=d[0]-g[0],i=m[1]-g[1],s=d[1]-g[1],r=1/(t*s-n*i);vec3.set(p,(s*E-i*x)*r,(s*v-i*A)*r,(s*S-i*e)*r),vec3.set(_,(t*x-n*E)*r,(t*A-n*v)*r,(t*e-n*S)*r),h[o]=p,h[b]=p,h[T]=p,h[o+l]=_,h[b+l]=_,h[T+l]=_}const t=vec3.create(),b=vec3.create(),T=vec3.create(),E=vec3.create(),x=vec3.create(),v=vec3.create(),A=vec3.create(),S=vec3.create();for(let e=0;e<l;e+=1){if(!h[e])continue;vec3.set(t,this.vertexNormals[3*e],this.vertexNormals[3*e+1],this.vertexNormals[3*e+2]),vec3.set(b,h[e][0],h[e][1],h[e][2]);const c=vec3.dot(t,b);vec3.scale(x,t,c),vec3.subtract(v,b,x),vec3.normalize(S,v),vec3.cross(A,t,b),vec3.dot(A,h[e+l]);const f=1;vec3.scale(T,S,1/f),vec3.cross(E,t,T),this.tangents[3*e+0]=T[0],this.tangents[3*e+1]=T[1],this.tangents[3*e+2]=T[2],this.biTangents[3*e+0]=E[0],this.biTangents[3*e+1]=E[1],this.biTangents[3*e+2]=E[2]}},b.prototype.isIndexed=function(){return 0==this._vertices.length||0!=this.verticesIndices.length},b.prototype.unIndex=function(e,i){const t=[],n=[];let s=0;for(let e in this._attributes){const i=this._attributes[e];let n=[];for(let t=0;t<this.verticesIndices.length;t+=3)for(let e=0;e<3;e++)3==i.itemSize?n.push(i.data[3*this.verticesIndices[t+e]+0],i.data[3*this.verticesIndices[t+e]+1],i.data[3*this.verticesIndices[t+e]+2]):4==i.itemSize?n.push(i.data[4*this.verticesIndices[t+e]+0],i.data[4*this.verticesIndices[t+e]+1],i.data[4*this.verticesIndices[t+e]+2],i.data[4*this.verticesIndices[t+e]+3]):2==i.itemSize?n.push(i.data[2*this.verticesIndices[t+e]+0],i.data[2*this.verticesIndices[t+e]+1]):1==i.itemSize?n.push(i.data[this.verticesIndices[t+e]]):console.log("unknown attr",i);this.setAttribute(i.name,n,i.itemSize)}for(let e=0;e<this.verticesIndices.length;e+=3)t.push(this.vertices[3*this.verticesIndices[e+0]+0],this.vertices[3*this.verticesIndices[e+0]+1],this.vertices[3*this.verticesIndices[e+0]+2]),n.push(s),s++,t.push(this.vertices[3*this.verticesIndices[e+1]+0],this.vertices[3*this.verticesIndices[e+1]+1],this.vertices[3*this.verticesIndices[e+1]+2]),n.push(s),s++,t.push(this.vertices[3*this.verticesIndices[e+2]+0],this.vertices[3*this.verticesIndices[e+2]+1],this.vertices[3*this.verticesIndices[e+2]+2]),n.push(s),s++;this.vertices=t,this.verticesIndices=[],e&&(this.verticesIndices=n),i||this.calculateNormals()},b.prototype.calcBarycentric=function(){let t=[];t.length=this.vertices.length;for(let e=0;e<this.vertices.length;e++)t[e]=0;let n=0;for(let e=0;e<this.vertices.length;e+=3)t[e+n]=1,n++,3==n&&(n=0);this.setAttribute("attrBarycentric",t,3)},b.prototype.getBounds=function(){return new p(this)},b.prototype.center=function(e,t,n){void 0===e&&(e=!0,t=!0,n=!0);let i=0;const s=this.getBounds(),r=[s.minX+(s.maxX-s.minX)/2,s.minY+(s.maxY-s.minY)/2,s.minZ+(s.maxZ-s.minZ)/2];for(i=0;i<this.vertices.length;i+=3)this.vertices[i+0]==this.vertices[i+0]&&(e&&(this.vertices[i+0]-=r[0]),t&&(this.vertices[i+1]-=r[1]),n&&(this.vertices[i+2]-=r[2]));return r},b.prototype.mapTexCoords2d=function(){const n=this.getBounds(),i=this.vertices.length/3;this.texCoords=new Float32Array(2*i);for(let t=0;t<i;t++){const i=this.vertices[3*t+0],e=this.vertices[3*t+1];this.texCoords[2*t+0]=i/(n.maxX-n.minX)+.5,this.texCoords[2*t+1]=1-e/(n.maxY-n.minY)+.5}},b.prototype.getInfoOneLine=function(){let e="";return 3==this.faceVertCount&&this.verticesIndices?e+=this.verticesIndices.length/3:e+=0,e+=" tris ",this.vertices?e+=this.vertices.length/3:e+=0,e+=" verts",e},b.prototype.getInfo=function(){const e={};return 3==this.faceVertCount&&this.verticesIndices?e.numFaces=this.verticesIndices.length/3:e.numFaces=0,this.verticesIndices&&this.verticesIndices.length&&(e.indices=this.verticesIndices.length),this.vertices?e.numVerts=this.vertices.length/3:e.numVerts=0,this.vertexNormals?e.numNormals=this.vertexNormals.length/3:e.numNormals=0,this.texCoords?e.numTexCoords=this.texCoords.length/2:e.numTexCoords=0,this.tangents?e.numTangents=this.tangents.length/3:e.numTangents=0,this.biTangents?e.numBiTangents=this.biTangents.length/3:e.numBiTangents=0,this.biTangents?e.numBiTangents=this.biTangents.length/3:e.numBiTangents=0,this.vertexColors?e.numVertexColors=this.vertexColors.length/4:e.numVertexColors=0,this.getAttributes()?e.numAttribs=Object.keys(this.getAttributes()).length:e.numAttribs=0,e.isIndexed=this.isIndexed(),e},b.buildFromFaces=function(s,e,r){const a=[],o=[];for(let e=0;e<s.length;e+=3){const l=s[e+0],t=s[e+1],n=s[e+2],i=[-1,-1,-1];if(r)for(let e=0;e<a.length;e+=3)a[e+0]==l[0]&&a[e+1]==l[1]&&a[e+2]==l[2]&&(i[0]=e/3),a[e+0]==t[0]&&a[e+1]==t[1]&&a[e+2]==t[2]&&(i[1]=e/3),a[e+0]==n[0]&&a[e+1]==n[1]&&a[e+2]==n[2]&&(i[2]=e/3);-1==i[0]&&(a.push(l[0],l[1],l[2]),i[0]=(a.length-1)/3),-1==i[1]&&(a.push(t[0],t[1],t[2]),i[1]=(a.length-1)/3),-1==i[2]&&(a.push(n[0],n[1],n[2]),i[2]=(a.length-1)/3),o.push(parseInt(i[0],10)),o.push(parseInt(i[1],10)),o.push(parseInt(i[2],10))}const l=new b(e);return l.name=e,l.vertices=a,l.verticesIndices=o,l},b.json2geom=function(t){const n=new b("jsonMeshGeom");if(n.verticesIndices=[],n.vertices=t.vertices||[],n.vertexNormals=t.normals||[],n.vertexColors=t.colors||[],n.tangents=t.tangents||[],n.biTangents=t.bitangents||[],t.texturecoords&&n.setTexCoords(t.texturecoords[0]),t.vertices_b64&&(n.vertices=new Float32Array(d(t.vertices_b64))),t.normals_b64&&(n.vertexNormals=new Float32Array(d(t.normals_b64))),t.tangents_b64&&(n.tangents=new Float32Array(d(t.tangents_b64))),t.bitangents_b64&&(n.biTangents=new Float32Array(d(t.bitangents_b64))),t.texturecoords_b64&&n.setTexCoords(new Float32Array(d(t.texturecoords_b64[0]))),t.faces_b64)n.verticesIndices=new Uint32Array(d(t.faces_b64));else{n.verticesIndices.length=3*t.faces.length;for(let e=0;e<t.faces.length;e++)n.verticesIndices[3*e]=t.faces[e][0],n.verticesIndices[3*e+1]=t.faces[e][1],n.verticesIndices[3*e+2]=t.faces[e][2]}return n};const T=function(){this._log=new _("eventtaget"),this._eventCallbacks={},this._logName="",this._logEvents=!1,this._listeners={},CABLES.eventTargetProfile=CABLES.eventTargetProfile||{},this.addEventListener=this.on=function(e,t,n){const i={id:(n||"")+CABLES.simpleId(),name:e,cb:t};return this._eventCallbacks[e]?this._eventCallbacks[e].push(i):this._eventCallbacks[e]=[i],this._listeners[i.id]=i,i.id},this.hasEventListener=function(e,t){return e&&!t?!!this._listeners[e]:(this._log.warn("old eventtarget function haseventlistener!"),e&&t&&this._eventCallbacks[e]?-1!=this._eventCallbacks[e].indexOf(t):void 0)},this.removeEventListener=this.off=function(i,s){if(null==i)return;if(!s){const s=this._listeners[i];if(!s)return void console.log("could not find event...");let n=!0;for(;n;){n=!1;let t=-1;for(let e=0;e<this._eventCallbacks[s.name].length;e++)0===this._eventCallbacks[s.name][e].id.indexOf(i)&&(n=!0,t=e);-1!==t&&(this._eventCallbacks[s.name].splice(t,1),delete this._listeners[i])}return}this._log.stack(" old function signature: removeEventListener! use listener id");let t=null;for(let e=0;e<this._eventCallbacks[i].length;e++)this._eventCallbacks[i][e].cb==s&&(t=e);null!==t?delete this._eventCallbacks[t]:this._log.warn("removeEventListener not found "+i)},this.logEvents=function(e,t){this._logEvents=e,this._logName=t},this.emitEvent=function(i,s,r,a,o,l,h){if(this._logEvents&&console.log("[event] ",this._logName,i,this._eventCallbacks),this._eventCallbacks[i]){const n=[];for(let e=0;e<this._eventCallbacks[i].length;e++)n[i]||(n[i]=[]),n[i].push(this._eventCallbacks[i][e]);if(n[i])for(let t=0;t<n[i].length;t++)if(n[i][t]){const e=this.constructor.name+" "+i;CABLES.eventTargetProfile[e]=CABLES.eventTargetProfile[e]||{name:this.constructor.name,event:i,count:0},CABLES.eventTargetProfile[e].active=this._eventCallbacks[i].length,CABLES.eventTargetProfile[e].count++,n[i][t].cb(s,r,a,o,l,h)}}else this._logEvents&&console.log("[event] has no event callback",i,this._eventCallbacks)}},E=function(e){this.time=0,this.value=0,this.onChange=null,this._easing=0,this.cb=null,this.cbTriggered=!1,this.setEasing(s.EASING_LINEAR),this.set(e)};E.cubicSpline=function(e,t,n){let i=e*e,s=i*e;return(2*s-3*i+1)*t.value+(s-2*i+e)*t.bezTangOut+(-2*s+3*i)*n.value+(s-i)*n.bezTangIn},E.easeCubicSpline=function(e,t){return E.cubicSpline(e,this,t)},E.linear=function(e,t,n){return parseFloat(t.value)+parseFloat(n.value-t.value)*e},E.easeLinear=function(e,t){return E.linear(e,this,t)},E.easeAbsolute=function(e,t){return this.value},E.easeExpoIn=function(e,t){return e=function(e){return 2**(10*(e-1))}(e),E.linear(e,this,t)},E.easeExpoOut=function(e,t){return e=function(e){return 1-2**(-10*e)}(e),E.linear(e,this,t)},E.easeExpoInOut=function(e,t){return e=function(e){return(e*=2)<1?.5*2**(10*(e-1)):.5*(2-2**(-10*--e))}(e),E.linear(e,this,t)},E.easeSinIn=function(e,t){return e=-1*Math.cos(e*Math.PI/2)+1,E.linear(e,this,t)},E.easeSinOut=function(e,t){return e=Math.sin(e*Math.PI/2),E.linear(e,this,t)},E.easeSinInOut=function(e,t){return e=-.5*(Math.cos(Math.PI*e)-1),E.linear(e,this,t)},E.easeCubicIn=function(e,t){return e=function(e){return e*(e*e)}(e),E.linear(e,this,t)},E.easeInQuint=function(e,t){return E.linear(e*=e*e*e*e,this,t)},E.easeOutQuint=function(e,t){return e=(e-=1)*e*e*e*e+1,E.linear(e,this,t)},E.easeInOutQuint=function(e,t){return(e/=.5)<1?e*=.5*e*e*e*e:e=.5*((e-=2)*e*e*e*e+2),E.linear(e,this,t)},E.easeInQuart=function(e,t){return E.linear(e*=e*e*e,this,t)},E.easeOutQuart=function(e,t){return e=-1*((e-=1)*e*e*e-1),E.linear(e,this,t)},E.easeInOutQuart=function(e,t){return(e/=.5)<1?e*=.5*e*e*e:e=-.5*((e-=2)*e*e*e-2),E.linear(e,this,t)},E.bounce=function(e){return(e/=1)<1/2.75?e*=7.5625*e:e=e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375,e},E.easeInBounce=function(e,t){return E.linear(E.bounce(e),this,t)},E.easeOutBounce=function(e,t){return E.linear(E.bounce(e),this,t)},E.easeInElastic=function(e,t){let n=1.70158,i=0,s=1;return 0===e?e=0:1==(e/=1)?e=1:(i||(i=.3),s<Math.abs(1)?(s=1,n=i/4):n=i/(2*Math.PI)*Math.asin(1/s),e=-s*2**(10*(e-=1))*Math.sin((1*e-n)*(2*Math.PI)/i)+0),E.linear(e,this,t)},E.easeOutElastic=function(e,t){let n=1.70158,i=0,s=1;return 0===e?e=0:1==(e/=1)?e=1:(i||(i=.3),s<Math.abs(1)?(s=1,n=i/4):n=i/(2*Math.PI)*Math.asin(1/s),e=s*2**(-10*e)*Math.sin((1*e-n)*(2*Math.PI)/i)+1+0),E.linear(e,this,t)},E.easeInBack=function(e,t){const n=1.70158;return E.linear(e=e*e*((n+1)*e-n),this,t)},E.easeOutBack=function(e,t){const n=1.70158;return e=(e=e/1-1)*e*((n+1)*e+n)+1,E.linear(e,this,t)},E.easeInOutBack=function(e,t){let n=1.70158;return e=(e/=.5)<1?e*e*((1+(n*=1.525))*e-n)*.5:.5*((e-=2)*e*((1+(n*=1.525))*e+n)+2),E.linear(e,this,t)},E.easeCubicOut=function(e,t){return e=function(e){return--e*e*e+1}(e),E.linear(e,this,t)},E.easeCubicInOut=function(e,t){return e=function(e){return(e*=2)<1?e*=.5*e*e:e=.5*((e-=2)*e*e+2),e}(e),E.linear(e,this,t)},E.easeSmoothStep=function(e,t){const n=Math.max(0,Math.min(1,e));return E.linear(e=n*n*(3-2*n),this,t)},E.easeSmootherStep=function(e,t){const n=Math.max(0,Math.min(1,(e-0)/1));return E.linear(e=n*n*n*(n*(6*n-15)+10),this,t)},E.prototype.setEasing=function(e){this._easing=e,this._easing==s.EASING_LINEAR?this.ease=E.easeLinear:this._easing==s.EASING_ABSOLUTE?this.ease=E.easeAbsolute:this._easing==s.EASING_SMOOTHSTEP?this.ease=E.easeSmoothStep:this._easing==s.EASING_SMOOTHERSTEP?this.ease=E.easeSmootherStep:this._easing==s.EASING_CUBIC_IN?this.ease=E.easeCubicIn:this._easing==s.EASING_CUBIC_OUT?this.ease=E.easeCubicOut:this._easing==s.EASING_CUBIC_INOUT?this.ease=E.easeCubicInOut:this._easing==s.EASING_EXPO_IN?this.ease=E.easeExpoIn:this._easing==s.EASING_EXPO_OUT?this.ease=E.easeExpoOut:this._easing==s.EASING_EXPO_INOUT?this.ease=E.easeExpoInOut:this._easing==s.EASING_SIN_IN?this.ease=E.easeSinIn:this._easing==s.EASING_SIN_OUT?this.ease=E.easeSinOut:this._easing==s.EASING_SIN_INOUT?this.ease=E.easeSinInOut:this._easing==s.EASING_BACK_OUT?this.ease=E.easeOutBack:this._easing==s.EASING_BACK_IN?this.ease=E.easeInBack:this._easing==s.EASING_BACK_INOUT?this.ease=E.easeInOutBack:this._easing==s.EASING_ELASTIC_IN?this.ease=E.easeInElastic:this._easing==s.EASING_ELASTIC_OUT?this.ease=E.easeOutElastic:this._easing==s.EASING_ELASTIC_INOUT?this.ease=E.easeElasticInOut:this._easing==s.EASING_BOUNCE_IN?this.ease=E.easeInBounce:this._easing==s.EASING_BOUNCE_OUT?this.ease=E.easeOutBounce:this._easing==s.EASING_QUART_OUT?this.ease=E.easeOutQuart:this._easing==s.EASING_QUART_IN?this.ease=E.easeInQuart:this._easing==s.EASING_QUART_INOUT?this.ease=E.easeInOutQuart:this._easing==s.EASING_QUINT_OUT?this.ease=E.easeOutQuint:this._easing==s.EASING_QUINT_IN?this.ease=E.easeInQuint:this._easing==s.EASING_QUINT_INOUT?this.ease=E.easeInOutQuint:this._easing==s.EASING_CUBICSPLINE?this.ease=E.easeCubicSpline:(this._easing=s.EASING_LINEAR,this.ease=E.easeLinear)},E.prototype.trigger=function(){this.cb(),this.cbTriggered=!0},E.prototype.setValue=function(e){this.value=e,null!==this.onChange&&this.onChange()},E.prototype.set=function(e){e&&(e.e&&this.setEasing(e.e),e.cb&&(this.cb=e.cb,this.cbTriggered=!1),e.b,e.hasOwnProperty("t")&&(this.time=e.t),e.hasOwnProperty("time")&&(this.time=e.time),e.hasOwnProperty("v")?this.value=e.v:e.hasOwnProperty("value")&&(this.value=e.value)),null!==this.onChange&&this.onChange()},E.prototype.getSerialized=function(){const e={};return e.t=this.time,e.v=this.value,e.e=this._easing,e},E.prototype.getEasing=function(){return this._easing};const x=function(e){T.apply(this),e=e||{},this.keys=[],this.onChange=null,this.stayInTimeline=!1,this.loop=!1,this._log=new _("Anim"),this._lastKeyIndex=0,this._cachedIndex=0,this.name=e.name||null,this.defaultEasing=e.defaultEasing||s.EASING_LINEAR,this.onLooped=null,this._timesLooped=0,this._needsSort=!1};x.prototype.forceChangeCallback=function(){null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},x.prototype.getLoop=function(){return this.loop},x.prototype.setLoop=function(e){this.loop=e,this.emitEvent("onChange",this)},x.prototype.hasEnded=function(e){return 0===this.keys.length||this.keys[this._lastKeyIndex].time<=e},x.prototype.isRising=function(e){if(this.hasEnded(e))return!1;const t=this.getKeyIndex(e);return this.keys[t].value<this.keys[t+1].value},x.prototype.clearBefore=function(e){const t=this.getValue(e),n=this.getKeyIndex(e);this.setValue(e,t),n>1&&this.keys.splice(0,n),this._updateLastIndex()},x.prototype.clear=function(e){let t=0;e&&(t=this.getValue(e)),this.keys.length=0,this._updateLastIndex(),e&&this.setValue(e,t),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},x.prototype.sortKeys=function(){this.keys.sort((e,t)=>parseFloat(e.time)-parseFloat(t.time)),this._updateLastIndex(),this._needsSort=!1,this.keys.length%1e3==0&&console.log(this.name,this.keys.length)},x.prototype.getLength=function(){return 0===this.keys.length?0:this.keys[this.keys.length-1].time},x.prototype.getKeyIndex=function(t){let n=0,i=0;this._cachedIndex&&this.keys.length>this._cachedIndex&&t>=this.keys[this._cachedIndex].time&&(i=this._cachedIndex);for(let e=i;e<this.keys.length;e++)if(t>=this.keys[e].time&&(n=e),this.keys[e].time>t)return 0!=t&&(this._cachedIndex=n),n;return n},x.prototype.setValue=function(t,n,i){let s=null;if(0==this.keys.length||t<=this.keys[this.keys.length-1].time)for(let e=0;e<this.keys.length;e++)if(this.keys[e].time==t){s=this.keys[e],this.keys[e].setValue(n),this.keys[e].cb=i;break}return s||(s=new E({time:t,value:n,e:this.defaultEasing,cb:i}),this.keys.push(s),this.keys.length%1e3==0&&console.log(this.name,this.keys.length),this._updateLastIndex()),this.onChange&&this.onChange(),this.emitEvent("onChange",this),this._needsSort=!0,s},x.prototype.setKeyEasing=function(e,t){this.keys[e]&&(this.keys[e].setEasing(t),this.emitEvent("onChange",this))},x.prototype.getSerialized=function(){const t={keys:[]};t.loop=this.loop;for(let e=0;e<this.keys.length;e++)t.keys.push(this.keys[e].getSerialized());return t},x.prototype.getKey=function(e){const t=this.getKeyIndex(e);return this.keys[t]},x.prototype.getNextKey=function(e){let t=this.getKeyIndex(e)+1;return t>=this.keys.length&&(t=this.keys.length-1),this.keys[t]},x.prototype.isFinished=function(e){return this.keys.length<=0||e>this.keys[this.keys.length-1].time},x.prototype.isStarted=function(e){return!(this.keys.length<=0)&&e>=this.keys[0].time},x.prototype.getValue=function(e){if(0===this.keys.length)return 0;if(this._needsSort&&this.sortKeys(),!this.loop&&e>this.keys[this._lastKeyIndex].time)return this.keys[this._lastKeyIndex].value;if(e<this.keys[0].time)return this.keys[0].value;this.loop&&e>this.keys[this._lastKeyIndex].time&&(e/this.keys[this._lastKeyIndex].time>this._timesLooped&&(this._timesLooped++,this.onLooped&&this.onLooped()),e=(e-this.keys[0].time)%(this.keys[this._lastKeyIndex].time-this.keys[0].time),e+=this.keys[0].time);const t=this.getKeyIndex(e);if(t>=this._lastKeyIndex)return this.keys[this._lastKeyIndex].cb&&!this.keys[this._lastKeyIndex].cbTriggered&&this.keys[this._lastKeyIndex].trigger(),this.keys[this._lastKeyIndex].value;const n=t+1,i=this.keys[t],s=this.keys[n];if(i.cb&&!i.cbTriggered&&i.trigger(),!s)return-1;const r=(e-i.time)/(s.time-i.time);return i.ease||this.log._warn("has no ease",i,s),i.ease(r,s)},x.prototype._updateLastIndex=function(){this._lastKeyIndex=this.keys.length-1},x.prototype.addKey=function(e){void 0===e.time?this.log.warn("key time undefined, ignoring!"):(this.keys.push(e),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)),this._updateLastIndex()},x.prototype.easingFromString=function(e){return"linear"==e?s.EASING_LINEAR:"absolute"==e?s.EASING_ABSOLUTE:"smoothstep"==e?s.EASING_SMOOTHSTEP:"smootherstep"==e?s.EASING_SMOOTHERSTEP:"Cubic In"==e?s.EASING_CUBIC_IN:"Cubic Out"==e?s.EASING_CUBIC_OUT:"Cubic In Out"==e?s.EASING_CUBIC_INOUT:"Expo In"==e?s.EASING_EXPO_IN:"Expo Out"==e?s.EASING_EXPO_OUT:"Expo In Out"==e?s.EASING_EXPO_INOUT:"Sin In"==e?s.EASING_SIN_IN:"Sin Out"==e?s.EASING_SIN_OUT:"Sin In Out"==e?s.EASING_SIN_INOUT:"Back In"==e?s.EASING_BACK_IN:"Back Out"==e?s.EASING_BACK_OUT:"Back In Out"==e?s.EASING_BACK_INOUT:"Elastic In"==e?s.EASING_ELASTIC_IN:"Elastic Out"==e?s.EASING_ELASTIC_OUT:"Bounce In"==e?s.EASING_BOUNCE_IN:"Bounce Out"==e?s.EASING_BOUNCE_OUT:"Quart Out"==e?s.EASING_QUART_OUT:"Quart In"==e?s.EASING_QUART_IN:"Quart In Out"==e?s.EASING_QUART_INOUT:"Quint Out"==e?s.EASING_QUINT_OUT:"Quint In"==e?s.EASING_QUINT_IN:"Quint In Out"==e?s.EASING_QUINT_INOUT:void 0},x.prototype.createPort=function(e,t,n){const i=e.inDropDown(t,s.EASINGS);return i.set("linear"),i.defaultValue="linear",i.onChange=function(){this.defaultEasing=this.easingFromString(i.get()),this.emitEvent("onChangeDefaultEasing",this),n&&n()}.bind(this),i},x.slerpQuaternion=function(n,i,s,r,a,o){x.slerpQuaternion.q1||(x.slerpQuaternion.q1=quat.create(),x.slerpQuaternion.q2=quat.create());const l=s.getKeyIndex(n);let h=l+1;if(h>=s.keys.length&&(h=s.keys.length-1),l==h)quat.set(i,s.keys[l].value,r.keys[l].value,a.keys[l].value,o.keys[l].value);else{const e=s.keys[l].time,t=(n-e)/(s.keys[h].time-e);quat.set(x.slerpQuaternion.q1,s.keys[l].value,r.keys[l].value,a.keys[l].value,o.keys[l].value),quat.set(x.slerpQuaternion.q2,s.keys[h].value,r.keys[h].value,a.keys[h].value,o.keys[h].value),quat.slerp(i,x.slerpQuaternion.q1,x.slerpQuaternion.q2,t)}return i};const v=E,A=function(e,t,n,i){T.apply(this),this.data={},this._log=new _("core_port"),this.direction=h,this.id=String(CABLES.simpleId()),this._op=e,this.links=[],this.value=0,this.name=t,this.type=n||r,this.uiAttribs=i||{},this.anim=null,this._oldAnimVal=-5711,this.defaultValue=null,this._uiActiveState=!0,this.ignoreValueSerialize=!1,this.onLinkChanged=null,this.crashed=!1,this._valueBeforeLink=null,this._lastAnimFrame=-1,this._animated=!1,this.onValueChanged=null,this.onTriggered=null,this.onUiActiveStateChange=null,this.changeAlways=!1,this.forceRefChange=!1,this._useVariableName=null,this.activityCounter=0,this.apf=0,this.activityCounterStartFrame=0,this._tempLastUiValue=null,Object.defineProperty(this,"title",{get(){return this.uiAttribs.title||this.name}}),Object.defineProperty(this,"parent",{get(){return this._log.stack("use port.op, not .parent"),this._op}}),Object.defineProperty(this,"op",{get(){return this._op}}),Object.defineProperty(this,"val",{get(){return this._log.warn("val getter deprecated!",this),this._log.stack("val getter deprecated"),this.get()},set(e){this._log.warn("val setter deprecated!",this),this._log.stack("val setter deprecated"),this.setValue(e)}})};A.prototype.copyLinkedUiAttrib=function(e,t){if(!CABLES.UI)return;if(!this.isLinked())return;const n={};n[e]=this.links[0].getOtherPort(this).getUiAttrib(e),t.setUiAttribs(n)},A.prototype.getValueForDisplay=function(){let e=this.value;return"string"==typeof this.value||this.value instanceof String?(e.length>1e3&&(e=e.substring(0,999),e+="..."),this.uiAttribs&&"boolnum"==this.uiAttribs.display&&(e+=" - ",this.value?e+="true":e+="false"),e=e.replace(/[\u00A0-\u9999<>\&]/g,function(e){return"&#"+e.charCodeAt(0)+";"}),e.length>100&&(e=e.substring(0,100))):e=this.value,e},A.prototype.onAnimToggle=function(){},A.prototype._onAnimToggle=function(){this.onAnimToggle()},A.prototype.remove=function(){this.removeLinks(),this._op.removePort(this)},A.prototype.setUiAttribs=function(t){let n=!1;this.uiAttribs||(this.uiAttribs={});for(const e in t)this.uiAttribs[e]!=t[e]&&(n=!0),this.uiAttribs[e]=t[e],"group"==e&&this.indexPort&&this.indexPort.setUiAttribs({group:t[e]});t.hasOwnProperty("expose")&&this._op.patch.emitEvent("subpatchExpose",this._op.uiAttribs.subPatch),n&&this.emitEvent("onUiAttrChange",t,this)},A.prototype.getUiAttribs=function(){return this.uiAttribs},A.prototype.getUiAttrib=function(e){return this.uiAttribs&&this.uiAttribs.hasOwnProperty(e)?this.uiAttribs[e]:null},A.prototype.get=function(){return this._animated&&this._lastAnimFrame!=this._op.patch.getFrameNum()&&(this._lastAnimFrame=this._op.patch.getFrameNum(),this.value=this.anim.getValue(this._op.patch.timer.getTime()),this._oldAnimVal=this.value,this.forceChange()),this.value},A.prototype.setRef=function(e){this.forceRefChange=!0,this.set(e)},A.prototype.set=A.prototype.setValue=function(e){if(void 0===e&&(e=null),this._op.enabled&&!this.crashed&&(e!==this.value||this.changeAlways||this.type==t||this.type==a)){if(this._animated)this.anim.setValue(this._op.patch.timer.getTime(),e);else{try{this.value=e,this.forceChange()}catch(e){this.crashed=!0,this.setValue=function(e){},this.onTriggered=function(){},this._log.error("onvaluechanged exception cought",e),this._log.error(e.stack),this._log.warn("exception in: "+this._op.name),this._op.patch.isEditorMode()&&gui.showOpCrash(this._op),this._op.patch.emitEvent("exception",e,this._op),this._op.onError&&this._op.onError(e)}this._op&&this._op.patch&&this._op.patch.isEditorMode()&&this.type==t&&gui.texturePreview().updateTexturePort(this)}if(this.direction==c)for(let e=0;e<this.links.length;++e)this.links[e].setValue()}},A.prototype.updateAnim=function(){this._animated&&(this.value=this.get(),(this._oldAnimVal!=this.value||this.changeAlways)&&(this._oldAnimVal=this.value,this.forceChange()),this._oldAnimVal=this.value)},A.args=function(e){return(e+"").replace(/[/][/].*$/gm,"").replace(/\s+/g,"").replace(/[/][*][^/*]*[*][/]/g,"").split("){",1)[0].replace(/^[^(]*[(]/,"").replace(/=[^,]+/g,"").split(",").filter(Boolean)},A.prototype.forceChange=function(){this.onValueChanged||this.onChange,this._activity(),this.emitEvent("change",this.value,this),this.onChange?this.onChange(this,this.value):this.onValueChanged&&this.onValueChanged(this,this.value)},A.prototype.getTypeString=function(){return this.type==r?"Number":this.type==n?"Trigger":this.type==i?"Object":this.type==o?"Dynamic":this.type==a?"Array":this.type==l?"String":"Unknown"},A.prototype.deSerializeSettings=function(t){if(t&&(t.animated&&this.setAnimated(t.animated),t.useVariable&&this.setVariableName(t.useVariable),t.title&&this.setUiAttribs({title:t.title}),t.expose&&this.setUiAttribs({expose:!0}),t.order&&this.setUiAttribs({order:t.order}),t.anim)){this.anim||(this.anim=new x({name:"port "+this.name})),this._op._hasAnimPort=!0,this.anim.addEventListener("onChange",()=>{this._op.patch.emitEvent("portAnimUpdated",this._op,this,this.anim)}),t.anim.loop&&(this.anim.loop=t.anim.loop);for(const e in t.anim.keys)this.anim.keys.push(new v(t.anim.keys[e]));this.anim.sortKeys()}},A.prototype.getSerialized=function(){let t={};if(t.name=this.getName(),this.ignoreValueSerialize||0!==this.links.length||this.type==i&&this.value&&this.value.tex||(t.value=this.value),this._useVariableName&&(t.useVariable=this._useVariableName),this._animated&&(t.animated=!0),this.anim&&(t.anim=this.anim.getSerialized()),"file"==this.uiAttribs.display&&(t.display=this.uiAttribs.display),this.uiAttribs.expose&&(t.expose=!0,this.uiAttribs.hasOwnProperty("order")&&(t.order=this.uiAttribs.order)),this.uiAttribs.title&&(t.title=this.uiAttribs.title),this.direction==c&&this.links.length>0){t.links=[];for(const e in this.links)!this.links[e].ignoreInSerialize&&this.links[e].portIn&&this.links[e].portOut&&t.links.push(this.links[e].getSerialized())}if(this.direction==h&&this.links.length>0)for(const e in this.links)this.links[e].portIn&&this.links[e].portOut&&this.links[e].getOtherPort(this).op.isInBlueprint2()&&!this.op.isInBlueprint2()&&(t.links=t.links||[],t.links.push(this.links[e].getSerialized()));return t.links&&0==t.links.length&&delete t.links,this.type===n&&delete t.value,this.type===n&&0==this.links.length&&(t=null),t&&1==Object.keys(t).length&&t.name&&(t=null),f(t),t},A.prototype.shouldLink=function(){return!0},A.prototype.removeLinks=function(){let e=0;for(;this.links.length>0;){if(e++,e>5e3){this._log.warn("could not delete links... / infinite loop"),this.links.length=0;break}this.links[0].remove()}},A.prototype.removeLink=function(e){for(const r in this.links)this.links[r]==e&&this.links.splice(r,1);this.direction==h&&(this.type==r?this.setValue(this._valueBeforeLink||0):this.setValue(this._valueBeforeLink||null)),CABLES.UI&&this._op.checkLinkTimeWarnings&&this._op.checkLinkTimeWarnings(),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged"),this._op.emitEvent("onLinkChanged")},A.prototype.getName=function(){return this.name},A.prototype.getTitle=function(){return this.uiAttribs.title?this.uiAttribs.title:this.name},A.prototype.addLink=function(e){this._valueBeforeLink=this.value,this.links.push(e),CABLES.UI&&this._op.checkLinkTimeWarnings&&this._op.checkLinkTimeWarnings(),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged"),this._op.emitEvent("onLinkChanged")},A.prototype.getLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e]},A.prototype.removeLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e].remove(),CABLES.UI&&this._op.checkLinkTimeWarnings&&this._op.checkLinkTimeWarnings(),this.onLinkChanged&&this.onLinkChanged(),void this.emitEvent("onLinkChanged")},A.prototype.isLinkedTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return!0;return!1},A.prototype._activity=function(){this.activityCounter++},A.prototype.trigger=function(){const t=this.links.length;if(this._activity(),0===t)return;if(!this._op.enabled)return;let n=null;try{for(let e=0;e<t;++e)this.links[e].portIn&&(n=this.links[e].portIn,n.op.patch.pushTriggerStack(n),n._onTriggered(),n.op.patch.popTriggerStack()),this.links[e]&&this.links[e].activity()}catch(t){this._op.enabled=!1,this._op.patch.isEditorMode()&&(this._op.patch.emitEvent("exception",t,n.op),this._op.patch.emitEvent("opcrash",n),n.op.onError&&n.op.onError(t)),this._log.warn("exception!"),this._log.error("ontriggered exception caught",t),this._log.error(t.stack),this._log.warn("exception in: "+n.op.name)}},A.prototype.call=function(){this._log.warn("call deprecated - use trigger() "),this.trigger()},A.prototype.execute=function(){this._log.warn("### execute port: "+this.getName(),this.goals.length)},A.prototype.setVariableName=function(e){this._useVariableName=e,this._op.patch.on("variableRename",(e,t)=>{e==this._useVariableName&&(this._useVariableName=t)})},A.prototype.getVariableName=function(){return this._useVariableName},A.prototype.setVariable=function(e){this.setAnimated(!1);const t={useVariable:!1};this._variableIn&&this._varChangeListenerId&&(this._variableIn.off(this._varChangeListenerId),this._variableIn=null),e?(this._variableIn=this._op.patch.getVar(e),this._variableIn?(this.type==i?this._varChangeListenerId=this._variableIn.on("change",()=>{this.set(null),this.set(this._variableIn.getValue())}):this._varChangeListenerId=this._variableIn.on("change",this.set.bind(this)),this.set(this._variableIn.getValue())):this._log.warn("PORT VAR NOT FOUND!!!",e),this._useVariableName=e,t.useVariable=!0,t.variableName=this._useVariableName):(t.variableName=this._useVariableName=null,t.useVariable=!1),this.setUiAttribs(t),this._op.patch.emitEvent("portSetVariable",this._op,this,e)},A.prototype._handleNoTriggerOpAnimUpdates=function(e){let t=!1;for(let e=0;e<this._op.portsIn.length;e++)if(this._op.portsIn.type==n){t=!0;break}t||(e?this._notriggerAnimUpdate=this._op.patch.on("onRenderFrame",()=>{this.updateAnim()}):this._op.patch.removeEventListener(this._notriggerAnimUpdate))},A.prototype.setAnimated=function(e){this._animated!=e&&(this._animated=e,this._op._hasAnimPort=!0,this._animated&&!this.anim&&(this.anim=new x({name:"port "+this.name}),this.anim.addEventListener("onChange",()=>{this._op.patch.emitEvent("portAnimUpdated",this._op,this,this.anim)})),this._onAnimToggle()),this._handleNoTriggerOpAnimUpdates(e),e||(this.anim=null),this.setUiAttribs({isAnimated:this._animated})},A.prototype.toggleAnim=function(){this._animated=!this._animated,this._animated&&!this.anim&&(this.anim=new x({name:"port "+this.name}),this.anim.addEventListener("onChange",()=>{this._op.patch.emitEvent("portAnimUpdated",this._op,this,this.anim)})),this.setAnimated(this._animated),this._onAnimToggle(),this.setUiAttribs({isAnimated:this._animated})},A.prototype.getType=function(){return this.type},A.prototype.isLinked=function(){return this.links.length>0||this._animated||null!=this._useVariableName},A.prototype.isBoundToVar=function(){const e=null!=this._useVariableName;return this.uiAttribs.boundToVar=e,e},A.prototype.isAnimated=function(){return this._animated},A.prototype.isHidden=function(){return this.uiAttribs.hidePort},A.prototype._onTriggered=function(e){this._activity(),this._op.updateAnims(),this._op.enabled&&this.onTriggered&&this.onTriggered(e)},A.prototype._onSetProfiling=function(e){this._op.patch.profiler.add("port",this),this.setValue(e),this._op.patch.profiler.add("port",null)},A.prototype._onTriggeredProfiling=function(){this._op.enabled&&this.onTriggered&&(this._op.patch.profiler.add("port",this),this.onTriggered(),this._op.patch.profiler.add("port",null))},A.prototype.onValueChange=function(e){this.onChange=e},A.prototype.getUiActiveState=function(){return this._uiActiveState},A.prototype.setUiActiveState=function(e){this._uiActiveState=e,this.onUiActiveStateChange&&this.onUiActiveStateChange()},A.prototype.hidePort=function(){this._log.warn("op.hideport() is deprecated, do not use it!")},A.portTypeNumberToString=function(e){return e==r?"value":e==n?"function":e==i?"object":e==a?"array":e==l?"string":e==o?"dynamic":"unknown"};const S=class{constructor(e,t,n,i,s,r,a,o,l,h){if(this._log=new _("cg_uniform"),this._type=t,this._name=n,this._shader=e,this._value=1e-5,this._oldValue=null,this._port=null,this._structName=l,this._structUniformName=o,this._propertyName=h,this._shader._addUniform(this),this.needsUpdate=!0,this.shaderType=null,this.comment=null,"f"==t)this.set=this.setValue=this.setValueF.bind(this),this.updateValue=this.updateValueF.bind(this);else if("f[]"==t)this.set=this.setValue=this.setValueArrayF.bind(this),this.updateValue=this.updateValueArrayF.bind(this);else if("2f[]"==t)this.set=this.setValue=this.setValueArray2F.bind(this),this.updateValue=this.updateValueArray2F.bind(this);else if("3f[]"==t)this.set=this.setValue=this.setValueArray3F.bind(this),this.updateValue=this.updateValueArray3F.bind(this);else if("4f[]"==t)this.set=this.setValue=this.setValueArray4F.bind(this),this.updateValue=this.updateValueArray4F.bind(this);else if("i"==t)this.set=this.setValue=this.setValueI.bind(this),this.updateValue=this.updateValueI.bind(this);else if("2i"==t)this.set=this.setValue=this.setValue2I.bind(this),this.updateValue=this.updateValue2I.bind(this);else if("3i"==t)this.set=this.setValue=this.setValue3I.bind(this),this.updateValue=this.updateValue3I.bind(this);else if("4i"==t)this.set=this.setValue=this.setValue4I.bind(this),this.updateValue=this.updateValue4I.bind(this);else if("b"==t)this.set=this.setValue=this.setValueBool.bind(this),this.updateValue=this.updateValueBool.bind(this);else if("4f"==t)this.set=this.setValue=this.setValue4F.bind(this),this.updateValue=this.updateValue4F.bind(this);else if("3f"==t)this.set=this.setValue=this.setValue3F.bind(this),this.updateValue=this.updateValue3F.bind(this);else if("2f"==t)this.set=this.setValue=this.setValue2F.bind(this),this.updateValue=this.updateValue2F.bind(this);else if("t"==t)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("tc"==t)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("t[]"==t)this.set=this.setValue=this.setValueArrayT.bind(this),this.updateValue=this.updateValueArrayT.bind(this);else{if("m4"!=t&&"m4[]"!=t)throw new Error("Unknown uniform type");this.set=this.setValue=this.setValueM4.bind(this),this.updateValue=this.updateValueM4.bind(this)}"object"==typeof i&&i instanceof A?(this._port=i,this._value=this._port.get(),s&&r&&a?(s instanceof A&&r instanceof A&&a instanceof A||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0,0],this._port2=s,this._port3=r,this._port4=a,this._port.on("change",this.updateFromPort4f.bind(this)),this._port2.on("change",this.updateFromPort4f.bind(this)),this._port3.on("change",this.updateFromPort4f.bind(this)),this._port4.on("change",this.updateFromPort4f.bind(this)),this.updateFromPort4f()):s&&r?(s instanceof A&&r instanceof A||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0],this._port2=s,this._port3=r,this._port.on("change",this.updateFromPort3f.bind(this)),this._port2.on("change",this.updateFromPort3f.bind(this)),this._port3.on("change",this.updateFromPort3f.bind(this)),this.updateFromPort3f()):s?(s instanceof A||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0],this._port2=s,this._port.on("change",this.updateFromPort2f.bind(this)),this._port2.on("change",this.updateFromPort2f.bind(this)),this.updateFromPort2f()):this._port.on("change",this.updateFromPort.bind(this))):this._value=i,this.setValue(this._value),this.needsUpdate=!0}getType(){return this._type}getName(){return this._name}getValue(){return this._value}getShaderType(){return this.shaderType}isStructMember(){return!!this._structName}updateFromPort4f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)}updateFromPort3f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)}updateFromPort2f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)}updateFromPort(){this.setValue(this._port.get())}};class C extends S{constructor(e,t,n,i,s,r,a,o,l,h){super(e,t,n,i,s,r,a,o,l,h),this._loc=-1,this._cgl=e._cgl}get name(){return this._name}copy(e){const t=new C(e,this._type,this._name,this._value,this._port2,this._port3,this._port4,this._structUniformName,this._structName,this._propertyName);return t.shaderType=this.shaderType,t}getGlslTypeString(){return C.glslTypeString(this._type)}_isValidLoc(){return-1!=this._loc}resetLoc(){this._loc=-1,this.needsUpdate=!0}bindTextures(){}getLoc(){return this._loc}updateFromPort4f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)}updateFromPort3f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)}updateFromPort2f(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)}updateFromPort(){this.setValue(this._port.get())}updateValueF(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1f(this._loc,this._value),this._cgl.profileData.profileUniformCount++}setValueF(e){e!=this._value&&(this.needsUpdate=!0,this._value=e)}updateValueI(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value),this._cgl.profileData.profileUniformCount++}updateValue2I(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2i(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}updateValue3I(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3i(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}updateValue4I(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform4i(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++}setValueI(e){e!=this._value&&(this.needsUpdate=!0,this._value=e)}setValue2I(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1],this.needsUpdate=!0),this._value=e)}setValue3I(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]&&e[2]==this._oldValue[2]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this._oldValue[2]=e[2],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1,2],this.needsUpdate=!0),this._value=e)}setValue4I(e){this.needsUpdate=!0,this._value=e||vec4.create()}updateValueBool(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value?1:0),this._cgl.profileData.profileUniformCount++}setValueBool(e){e!=this._value&&(this.needsUpdate=!0,this._value=e)}setValueArray4F(e){this.needsUpdate=!0,this._value=e}updateValueArray4F(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform4fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArray3F(e){this.needsUpdate=!0,this._value=e}updateValueArray3F(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform3fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArray2F(e){this.needsUpdate=!0,this._value=e}updateValueArray2F(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform2fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArrayF(e){this.needsUpdate=!0,this._value=e}updateValueArrayF(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}setValueArrayT(e){this.needsUpdate=!0,this._value=e}updateValue3F(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3f(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}setValue3F(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]&&e[2]==this._oldValue[2]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this._oldValue[2]=e[2],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1,2],this.needsUpdate=!0),this._value=e)}updateValue2F(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2f(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)}setValue2F(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1],this.needsUpdate=!0),this._value=e)}updateValue4F(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._value||(this._log.warn("no value for uniform",this._name,this),this._value=[0,0,0,0]),this.needsUpdate=!1,this._shader.getCgl().gl.uniform4f(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++}setValue4F(e){"number"==typeof this.value&&(this.value=vec4.create()),e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]&&e[2]==this._oldValue[2]&&e[3]==this._oldValue[3]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this._oldValue[2]=e[2],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1,2,3],this.needsUpdate=!0),this._value=e)}updateValueM4(){if(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),!this._value||this._value.length%16!=0)return console.log("this.name",this._name,this._value);this._shader.getCgl().gl.uniformMatrix4fv(this._loc,!1,this._value),this._cgl.profileData.profileUniformCount++}setValueM4(e){this.needsUpdate=!0,this._value=e||mat4.create()}updateValueArrayT(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1iv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)}updateValueT(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._cgl.profileData.profileUniformCount++,this._shader.getCgl().gl.uniform1i(this._loc,this._value),this.needsUpdate=!1}setValueT(e){this.needsUpdate=!0,this._value=e}}C.glslTypeString=e=>"f"==e?"float":"b"==e?"bool":"i"==e?"int":"2i"==e?"ivec2":"2f"==e?"vec2":"3f"==e?"vec3":"4f"==e?"vec4":"m4"==e?"mat4":"t"==e?"sampler2D":"tc"==e?"samplerCube":"3f[]"==e||"m4[]"==e||"f[]"==e?null:void console.warn("[CGL UNIFORM] unknown glsl type string ",e);Math.PI;const I=(Math.PI,{SHADERVAR_VERTEX_POSITION:"vPosition",SHADERVAR_VERTEX_NUMBER:"attrVertIndex",SHADERVAR_VERTEX_NORMAL:"attrVertNormal",SHADERVAR_VERTEX_TEXCOORD:"attrTexCoord",SHADERVAR_INSTANCE_MMATRIX:"instMat",SHADERVAR_VERTEX_COLOR:"attrVertColor",SHADERVAR_INSTANCE_INDEX:"instanceIndex",SHADERVAR_UNI_PROJMAT:"projMatrix",SHADERVAR_UNI_VIEWMAT:"viewMatrix",SHADERVAR_UNI_MODELMAT:"modelMatrix",SHADERVAR_UNI_NORMALMAT:"normalMatrix",SHADERVAR_UNI_INVVIEWMAT:"inverseViewMatrix",SHADERVAR_UNI_INVPROJMAT:"invProjMatrix",SHADERVAR_UNI_MATERIALID:"materialId",SHADERVAR_UNI_OBJECTID:"objectId",SHADERVAR_UNI_VIEWPOS:"camPos"}),R={lastMesh:null},L=function(e,t,n){this._cgl=e,this._log=new _("cgl_mesh"),this._bufVertexAttrib=null,this._bufVerticesIndizes=this._cgl.gl.createBuffer(),this._indexType=this._cgl.gl.UNSIGNED_SHORT,this._attributes=[],this._attribLocs={},this._geom=null,this._lastShader=null,this._numInstances=0,this._glPrimitive=n,this._preWireframeGeom=null,this.addVertexNumbers=!1,this._name="unknown",this.feedBackAttributes=[],this.setGeom(t),this._feedBacks=[],this._feedBacksChanged=!1,this._transformFeedBackLoc=-1,this._lastAttrUpdate=0,this.memFreed=!1,this._cgl.profileData.addHeavyEvent("mesh constructed",this._name),this._queryExt=null,Object.defineProperty(this,"numInstances",{get(){return this._numInstances},set(e){this.setNumInstances(e)}})};L.prototype.freeMem=function(){this.memFreed=!0;for(let e=0;e<this._attributes.length;e++)this._attributes[e].floatArray=null},L.prototype.updateVertices=function(e){this.setAttribute(I.SHADERVAR_VERTEX_POSITION,e.vertices,3),this._numVerts=e.vertices.length/3},L.prototype.setAttributePointer=function(t,n,i,s){for(let e=0;e<this._attributes.length;e++)this._attributes[e].name==t&&(this._attributes[e].pointer||(this._attributes[e].pointer=[]),this._attributes[e].pointer.push({loc:-1,name:n,stride:i,offset:s,instanced:t==I.SHADERVAR_INSTANCE_MMATRIX}))},L.prototype.getAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t)return this._attributes[e]},L.prototype.setAttributeRange=function(e,t,n,i){e&&(n||i)&&(e.name||this._log.stack("no attrname?!"),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,e.buffer),this._cgl.profileData.profileMeshAttributes+=i-n||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]=this._cgl.profileData.profileSingleMeshAttribute[this._name]||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]+=i-n||0,e.numItems<t.length/e.itemSize&&this._resizeAttr(t,e),i>=t.length-1&&this._log.log(this._cgl.canvas.id+" "+e.name+" buffersubdata out of bounds ?",t.length,i,n,e),1==this._cgl.glVersion?this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,0,t):this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,4*n,t,n,i-n))},L.prototype._resizeAttr=function(e,t){t.buffer&&this._cgl.gl.deleteBuffer(t.buffer),t.buffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,t.buffer),this._bufferArray(e,t),t.numItems=e.length/t.itemSize},L.prototype._bufferArray=function(e,t){let n=t.floatArray||null;e&&(this._cgl.debugOneFrame&&console.log("_bufferArray",e.length,t.name),e instanceof Float32Array?n=e:t&&n&&n.length==e.length?n.set(e):(n=new Float32Array(e),this._cgl.debugOneFrame&&console.log("_bufferArray create new float32array",e.length,t.name),e.length>1e4&&(this._cgl.profileData.profileNonTypedAttrib++,this._cgl.profileData.profileNonTypedAttribNames="("+this._name+":"+t.name+")")),t.arrayLength=n.length,t.floatArray=null,this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,n,this._cgl.gl.DYNAMIC_DRAW))},L.prototype.addAttribute=L.prototype.updateAttribute=L.prototype.setAttribute=function(e,t,n,i){if(!t)throw this._log.error("mesh addAttribute - no array given! "+e),new Error;let s=null,r=!1,a=0;const o=t.length/n;for(this._cgl.profileData.profileMeshAttributes+=o||0,"function"==typeof i&&(s=i),"object"==typeof i&&(i.cb&&(s=i.cb),i.instanced&&(r=i.instanced)),e==I.SHADERVAR_INSTANCE_MMATRIX&&(r=!0),a=0;a<this._attributes.length;a++){const n=this._attributes[a];if(n.name==e)return n.numItems===o||this._resizeAttr(t,n),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,n.buffer),this._bufferArray(t,n),n}const l=this._cgl.gl.createBuffer();this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,l);let h=this._cgl.gl.FLOAT;i&&i.type&&(h=i.type);const c={buffer:l,name:e,cb:s,itemSize:n,numItems:o,startItem:0,instanced:r,type:h};return this._bufferArray(t,c),e==I.SHADERVAR_VERTEX_POSITION&&(this._bufVertexAttrib=c),this._attributes.push(c),this._attribLocs={},c},L.prototype.getAttributes=function(){return this._attributes},L.prototype.updateTexCoords=function(t){if(t.texCoords&&t.texCoords.length>0)this.setAttribute(I.SHADERVAR_VERTEX_TEXCOORD,t.texCoords,2);else{const e=new Float32Array(Math.round(t.vertices.length/3*2));this.setAttribute(I.SHADERVAR_VERTEX_TEXCOORD,e,2)}},L.prototype.updateNormals=function(t){if(t.vertexNormals&&t.vertexNormals.length>0)this.setAttribute(I.SHADERVAR_VERTEX_NORMAL,t.vertexNormals,3);else{const e=new Float32Array(Math.round(t.vertices.length));this.setAttribute(I.SHADERVAR_VERTEX_NORMAL,e,3)}},L.prototype._setVertexNumbers=function(e){if(!this._verticesNumbers||this._verticesNumbers.length!=this._numVerts||e){if(e)this._verticesNumbers=e;else{this._verticesNumbers=new Float32Array(this._numVerts);for(let e=0;e<this._numVerts;e++)this._verticesNumbers[e]=e}this.setAttribute(I.SHADERVAR_VERTEX_NUMBER,this._verticesNumbers,1,(e,t,n)=>{n.uniformNumVertices||(n.uniformNumVertices=new C(n,"f","numVertices",this._numVerts)),n.uniformNumVertices.setValue(this._numVerts)})}},L.prototype.setVertexIndices=function(t){if(this._bufVerticesIndizes)if(t.length>0){t instanceof Float32Array&&this._log.warn("vertIndices float32Array: "+this._name);for(let e=0;e<t.length;e++)if(t[e]>=this._numVerts)return void this._log.warn("invalid index in "+this._name,e,t[e]);this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes),t.length>65535?(this.vertIndicesTyped=new Uint32Array(t),this._indexType=this._cgl.gl.UNSIGNED_INT):t instanceof Uint32Array?(this.vertIndicesTyped=t,this._indexType=this._cgl.gl.UNSIGNED_INT):t instanceof Uint16Array?this.vertIndicesTyped=t:(this.vertIndicesTyped=new Uint16Array(t),this._indexType=this._cgl.gl.UNSIGNED_SHORT),this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this.vertIndicesTyped,this._cgl.gl.DYNAMIC_DRAW),this._bufVerticesIndizes.itemSize=1,this._bufVerticesIndizes.numItems=t.length}else this._bufVerticesIndizes.numItems=0;else this._log.warn("no bufVerticesIndizes: "+this._name)},L.prototype.setGeom=function(e,t){this._geom=e,null!=e.glPrimitive&&(this._glPrimitive=e.glPrimitive),this._geom&&this._geom.name&&(this._name="mesh "+this._geom.name),R.lastMesh=null,this._cgl.profileData.profileMeshSetGeom++,this._disposeAttributes(),this.updateVertices(this._geom),this.setVertexIndices(this._geom.verticesIndices),this.addVertexNumbers&&this._setVertexNumbers();const n=this._geom.getAttributes(),i={texCoords:I.SHADERVAR_VERTEX_TEXCOORD,vertexNormals:I.SHADERVAR_VERTEX_NORMAL,vertexColors:I.SHADERVAR_VERTEX_COLOR,tangents:"attrTangent",biTangents:"attrBiTangent"};for(const e in n)n[e].data&&n[e].data.length&&this.setAttribute(i[e]||e,n[e].data,n[e].itemSize);t&&(this._geom=null)},L.prototype._preBind=function(t){for(let e=0;e<this._attributes.length;e++)this._attributes[e].cb&&this._attributes[e].cb(this._attributes[e],this._geom,t)},L.prototype._checkAttrLengths=function(){if(!this.memFreed)for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].arrayLength/this._attributes[e].itemSize<this._attributes[0].arrayLength/this._attributes[0].itemSize){let e="unknown";this._geom&&(e=this._geom.name)}},L.prototype._bind=function(i){if(!i.isValid())return;let t=[];if(this._attribLocs[i.id]?t=this._attribLocs[i.id]:this._attribLocs[i.id]=t,this._lastShader=i,i.lastCompile>this._lastAttrUpdate||t.length!=this._attributes.length){this._lastAttrUpdate=i.lastCompile;for(let e=0;e<this._attributes.length;e++)t[e]=-1}for(let e=0;e<this._attributes.length;e++){const n=this._attributes[e];if(-1==t[e]&&n._attrLocationLastShaderTime!=i.lastCompile&&(n._attrLocationLastShaderTime=i.lastCompile,t[e]=this._cgl.glGetAttribLocation(i.getProgram(),n.name),this._cgl.profileData.profileAttrLoc++),-1!=t[e])if(this._cgl.gl.enableVertexAttribArray(t[e]),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,n.buffer),n.instanced)if(n.itemSize<=4)n.itemSize&&0!=n.itemSize||this._log.warn("instanced attrib itemsize error",this._geom.name,n),this._cgl.gl.vertexAttribPointer(t[e],n.itemSize,n.type,!1,4*n.itemSize,0),this._cgl.gl.vertexAttribDivisor(t[e],1);else if(16==n.itemSize){const i=64;this._cgl.gl.vertexAttribPointer(t[e],4,n.type,!1,i,0),this._cgl.gl.enableVertexAttribArray(t[e]+1),this._cgl.gl.vertexAttribPointer(t[e]+1,4,n.type,!1,i,16),this._cgl.gl.enableVertexAttribArray(t[e]+2),this._cgl.gl.vertexAttribPointer(t[e]+2,4,n.type,!1,i,32),this._cgl.gl.enableVertexAttribArray(t[e]+3),this._cgl.gl.vertexAttribPointer(t[e]+3,4,n.type,!1,i,48),this._cgl.gl.vertexAttribDivisor(t[e],1),this._cgl.gl.vertexAttribDivisor(t[e]+1,1),this._cgl.gl.vertexAttribDivisor(t[e]+2,1),this._cgl.gl.vertexAttribDivisor(t[e]+3,1)}else this._log.warn("unknown instance attrib size",n.name);else{if(n.itemSize&&0!=n.itemSize||this._log.warn("attrib itemsize error",this._name,n),this._cgl.gl.vertexAttribPointer(t[e],n.itemSize,n.type,!1,4*n.itemSize,0),n.pointer)for(let t=0;t<n.pointer.length;t++){const e=n.pointer[t];-1==e.loc&&(e.loc=this._cgl.glGetAttribLocation(i.getProgram(),e.name)),this._cgl.profileData.profileAttrLoc++,this._cgl.gl.enableVertexAttribArray(e.loc),this._cgl.gl.vertexAttribPointer(e.loc,n.itemSize,n.type,!1,e.stride,e.offset)}this.bindFeedback(n)}}this._bufVerticesIndizes&&0!==this._bufVerticesIndizes.numItems&&this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes)},L.prototype.unBind=function(){const e=this._lastShader;if(this._lastShader=null,!e)return;let t=[];this._attribLocs[e.id]?t=this._attribLocs[e.id]:this._attribLocs[e.id]=t,R.lastMesh=null;for(let e=0;e<this._attributes.length;e++)this._attributes[e].instanced&&(this._attributes[e].itemSize<=4?(-1!=t[e]&&this._cgl.gl.vertexAttribDivisor(t[e],0),t[e]>=0&&this._cgl.gl.disableVertexAttribArray(t[e])):(this._cgl.gl.vertexAttribDivisor(t[e],0),this._cgl.gl.vertexAttribDivisor(t[e]+1,0),this._cgl.gl.vertexAttribDivisor(t[e]+2,0),this._cgl.gl.vertexAttribDivisor(t[e]+3,0),this._cgl.gl.disableVertexAttribArray(t[e]+1),this._cgl.gl.disableVertexAttribArray(t[e]+2),this._cgl.gl.disableVertexAttribArray(t[e]+3))),-1!=t[e]&&this._cgl.gl.disableVertexAttribArray(t[e])},L.prototype.meshChanged=function(){return this._cgl.lastMesh&&this._cgl.lastMesh!=this},L.prototype.printDebug=function(e){console.log("--attributes");for(let e=0;e<this._attributes.length;e++)console.log("attribute "+e+" "+this._attributes[e].name)},L.prototype.setNumVertices=function(e){this._bufVertexAttrib.numItems=e},L.prototype.getNumVertices=function(){return this._bufVertexAttrib.numItems},L.prototype.render=function(n){if(!n||!n.isValid()||this._cgl.aborted)return;if(this._checkAttrLengths(),this._geom&&(!this._preWireframeGeom||n.wireframe||this._geom.isIndexed()||(this.setGeom(this._preWireframeGeom),this._preWireframeGeom=null),n.wireframe)){let e=!1;this._geom.isIndexed()&&(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),this._geom.unIndex(),e=!0),this._geom.getAttribute("attrBarycentric")||(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),e=!0,this._geom.calcBarycentric()),e&&this.setGeom(this._geom)}let e=!1;if(R.lastMesh!=this&&(R.lastMesh&&R.lastMesh.unBind(),e=!0),e&&this._preBind(n),!n.bind())return;this._bind(n),this.addVertexNumbers&&this._setVertexNumbers(),R.lastMesh=this;let t=this._cgl.gl.TRIANGLES;void 0!==this._glPrimitive&&(t=this._glPrimitive),null!==n.glPrimitive&&(t=n.glPrimitive);let i=1,s=this._cgl.profileData.doProfileGlQuery,r=!1;if(s){let e=this._name+" - "+n.getName()+" #"+n.id;this._numInstances&&(e+=" instanced "+this._numInstances+"x");let t=this._cgl.profileData.glQueryData[e];if(t||(t={id:e,num:0}),this._cgl.profileData.glQueryData[e]=t,this._queryExt||!1===this._queryExt||(this._queryExt=this._cgl.enableExtension("EXT_disjoint_timer_query_webgl2")||!1),this._queryExt){if(t._drawQuery&&this._cgl.gl.getQueryParameter(t._drawQuery,this._cgl.gl.QUERY_RESULT_AVAILABLE)){const n=this._cgl.gl.getQueryParameter(t._drawQuery,this._cgl.gl.QUERY_RESULT)/1e6;t._times=t._times||0,t._times+=n,t._numcount++,t.when=performance.now(),t._drawQuery=null,t.queryStarted=!1}t.queryStarted||(t._drawQuery=this._cgl.gl.createQuery(),this._cgl.gl.beginQuery(this._queryExt.TIME_ELAPSED_EXT,t._drawQuery),r=t.queryStarted=!0)}}if(this.hasFeedbacks()?this.drawFeedbacks(n,t):this._bufVerticesIndizes&&0!==this._bufVerticesIndizes.numItems?(t==this._cgl.gl.TRIANGLES&&(i=3),0===this._numInstances?this._cgl.gl.drawElements(t,this._bufVerticesIndizes.numItems,this._indexType,0):this._cgl.gl.drawElementsInstanced(t,this._bufVerticesIndizes.numItems,this._indexType,0,this._numInstances)):(t==this._cgl.gl.TRIANGLES&&(i=3),0===this._numInstances?this._cgl.gl.drawArrays(t,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems-this._bufVertexAttrib.startItem):this._cgl.gl.drawArraysInstanced(t,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems,this._numInstances)),this._cgl.debugOneFrame&&this._cgl.gl.getError()!=this._cgl.gl.NO_ERROR){this._log.error("mesh draw gl error"),this._log.error("mesh",this),this._log.error("shader",n);for(let e=0;e<this._cgl.gl.getProgramParameter(n.getProgram(),this._cgl.gl.ACTIVE_ATTRIBUTES);e++){const t=this._cgl.gl.getActiveAttrib(n.getProgram(),e).name;this._log.error("attrib ",t)}}this._cgl.profileData.profileMeshNumElements+=this._bufVertexAttrib.numItems/i*(this._numInstances||1),this._cgl.profileData.profileMeshDraw++,s&&r&&this._cgl.gl.endQuery(this._queryExt.TIME_ELAPSED_EXT),this._cgl.printError("mesh render "+this._name),this.unBind()},L.prototype.setNumInstances=function(n){if(n=Math.max(0,n),this._numInstances!=n){this._numInstances=n;const t=new Float32Array(n);for(let e=0;e<n;e++)t[e]=e;this.setAttribute(I.SHADERVAR_INSTANCE_INDEX,t,1,{instanced:!0})}},L.prototype._disposeAttributes=function(){if(this._attributes){for(let e=0;e<this._attributes.length;e++)this._attributes[e].buffer&&(this._cgl.gl.deleteBuffer(this._attributes[e].buffer),this._attributes[e].buffer=null);this._attributes.length=0}},L.prototype.dispose=function(){this._bufVertexAttrib&&this._bufVertexAttrib.buffer&&this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer),this._bufVerticesIndizes&&this._cgl.gl.deleteBuffer(this._bufVerticesIndizes),this._bufVerticesIndizes=null,this._disposeAttributes()},function(e){e.prototype.hasFeedbacks=function(){return this._feedBacks.length>0},e.prototype.removeFeedbacks=function(e){this._feedbacks&&(this._feedbacks.length=0,this._feedBacksChanged=!0)},e.prototype.setAttributeFeedback=function(){},e.prototype.setFeedback=function(e,t,n){let i={nameOut:t},s=!1;this.unBindFeedbacks();for(let e=0;e<this._feedBacks.length;e++)this._feedBacks[e].nameOut==t&&(i=this._feedBacks[e],s=!0);return s||(this._feedBacksChanged=!0),i.initialArr=n,i.attrib=e,i.outBuffer&&this._cgl.gl.deleteBuffer(i.outBuffer),i.outBuffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.outBuffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i.initialArr,this._cgl.gl.STATIC_DRAW),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.attrib.buffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i.initialArr,this._cgl.gl.STATIC_DRAW),s||this._feedBacks.push(i),i},e.prototype.bindFeedback=function(n){if(!this._feedBacks||0===this._feedBacks.length)return;-1==this._transformFeedBackLoc&&(this._transformFeedBackLoc=this._cgl.gl.createTransformFeedback()),this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc);let i=!1;for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t];e.attrib==n&&(i=!0,this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,t,e.outBuffer))}},e.prototype.drawFeedbacks=function(e,t){let n=0;if(this._feedBacksChanged){const t=[];for(this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc),n=0;n<this._feedBacks.length;n++)t.push(this._feedBacks[n].nameOut);return e.setFeedbackNames(t),console.log("feedbacknames",t),e.compile(),this._feedBacksChanged=!1,this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null),void console.log("changed finished")}this._cgl.gl.beginTransformFeedback(this.glPrimitive),this._cgl.gl.drawArrays(t,0,this._feedBacks[0].attrib.numItems),this._cgl.gl.endTransformFeedback(),this.unBindFeedbacks(),this.feedBacksSwapBuffers()},e.prototype.unBindFeedbacks=function(){for(let e=0;e<this._feedBacks.length;e++)this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,e,null);this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null)},e.prototype.feedBacksSwapBuffers=function(){for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t].attrib.buffer;this._feedBacks[t].attrib.buffer=this._feedBacks[t].outBuffer,this._feedBacks[t].outBuffer=e}}}(L);const O=function(e,t){const n=new b(t);return n.vertices=[1,1,0,-1,1,0,1,-1,0,-1,-1,0],n.texCoords=[1,1,0,1,1,0,0,0],n.verticesIndices=[0,1,2,2,1,3],n.vertexNormals=[0,0,0,0,0,0,0,0,0,0,0,0],new L(e,n)};CGL.CopyTexture=class{constructor(e,t,n){this.cgl=e,this._options=n,this.fb=null;let i=n.shader;if(this._useDefaultShader=!0,n.shader&&(this._useDefaultShader=!1),n.numRenderBuffers=n.numRenderBuffers||1,!i){i="".endl()+"IN vec2 texCoord;";for(let e=0;e<n.numRenderBuffers;e++)i=i.endl()+"UNI sampler2D tex"+e+";".endl();if(i=i.endl()+"void main()".endl()+"{",1==n.numRenderBuffers)i=i.endl()+"    outColor= texture(tex0,texCoord);;".endl();else for(let e=0;e<n.numRenderBuffers;e++)i=i.endl()+"outColor"+e+" = texture(tex"+e+",texCoord);".endl();i=i.endl()+"}"}const s=n.vertexShader||"".endl()+"IN vec3 vPosition;".endl()+"IN vec2 attrTexCoord;".endl()+"OUT vec2 texCoord;".endl()+"void main()".endl()+"{".endl()+"   texCoord=attrTexCoord;".endl()+"   gl_Position = vec4(vPosition,  1.0);".endl()+"}";this.bgShader=new CGL.Shader(e,"corelib copytexture "+t),this.bgShader.setSource(s,i),n.vertexShader||(this.bgShader.ignoreMissingUniforms=!0),new CGL.Uniform(this.bgShader,"t","tex",0),new CGL.Uniform(this.bgShader,"t","tex1",1),new CGL.Uniform(this.bgShader,"t","tex2",2),new CGL.Uniform(this.bgShader,"t","tex3",3),this.mesh=O(this.cgl,"texEffectRect")}setSize(e,t){this._options.width=e,this._options.height=t}copy(e,t,n,i,s){e||(e=CGL.Texture.getEmptyTexture(this.cgl));const r=this._options.width||e.width,a=this._options.height||e.height,o=this.cgl;if(this.fb)this.fb.getWidth()==r&&this.fb.getHeight()==a||this.fb.setSize(r,a);else{let e=CGL.Texture.FILTER_LINEAR,t=CGL.Texture.WRAP_CLAMP_TO_EDGE;this._options.isFloatingPointTexture&&(e=CGL.Texture.FILTER_NEAREST),this._options.hasOwnProperty("filter")&&(e=this._options.filter),this._options.hasOwnProperty("wrap")&&(t=this._options.wrap);const n={isFloatingPointTexture:this._options.isFloatingPointTexture,pixelFormat:this._options.pixelFormat,numRenderBuffers:this._options.numRenderBuffers||1,filter:e,wrap:t};1==o.glVersion?this.fb=new CGL.Framebuffer(o,r,a,n):this.fb=new CGL.Framebuffer2(o,r,a,n)}return o.frameStore.renderOffscreen=!0,this.fb.renderStart(o),o.setTexture(0,e.tex),t&&o.setTexture(1,t.tex),n&&o.setTexture(2,n.tex),i&&o.setTexture(3,i.tex),s&&o.setTexture(4,s.tex),o.pushShader(this.bgShader),this.mesh.render(this.bgShader),o.popShader(),this.fb.renderEnd(),o.frameStore.renderOffscreen=!1,this.fb.getTextureColor()}dispose(){this.fb&&this.fb.dispose(),this.bgShader&&this.bgShader.dispose(),this.mesh&&this.mesh.dispose()}},((this.CGL=this.CGL||{}).COREMODULES=this.CGL.COREMODULES||{}).Copytexture={}.Copytexture})();(()=>{"use strict";const e={float32Concat:function(e,t){e instanceof Float32Array||(e=new Float32Array(e)),t instanceof Float32Array||(t=new Float32Array(t));const n=new Float32Array(e.length+t.length);return n.set(e),n.set(t,e.length),n}};Math.randomSeed=1,Math.seededRandom=function(e,t){return 0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),e=e||1,t=t||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280,t+Math.randomSeed/233280*(e-t)},e.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},e.isNumeric=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},e.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(e){return 0===this.indexOf(e)},String.prototype.endsWith=String.prototype.endsWith||function(e){return this.match(e+"$")==e},window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};class n{constructor(e){this._logs=[],this.initiator=e}stack(e){console.info("["+this.initiator+"] ",e),console.log((new Error).stack)}groupCollapsed(e){console.groupCollapsed("["+this.initiator+"] "+e)}table(e){console.table(e)}groupEnd(){console.groupEnd()}error(e){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",arguments)}info(e){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"info",arguments)}warn(e){console.warn("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"warn",arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"verbose",arguments)}log(e){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"log",arguments)}userInteraction(e){}}const c=function(e,t={}){if(!e)throw new Error("no cgl");this._log=new n("cgl_texture"),this._cgl=e,this.pixelFormat=t.pixelFormat||c.PFORMATSTR_RGBA8UB,this.tex=this._cgl.gl.createTexture(),this.id=CABLES.uuid(),this.width=0,this.height=0,this.loading=!1,this.flip=!0,this.flipped=!1,this.shadowMap=!1,this.deleted=!1,this.image=null,this.anisotropic=0,this.filter=c.FILTER_NEAREST,this.wrap=c.WRAP_CLAMP_TO_EDGE,this.texTarget=this._cgl.gl.TEXTURE_2D,t&&t.type&&(this.texTarget=t.type),this.textureType=c.TYPE_DEFAULT,this.unpackAlpha=!0,this._fromData=!0,this.name="unknown",this._glDataType=-1,this._glInternalFormat=-1,this._glDataFormat=-1,t?(this.name=t.name||this.name,t.isDepthTexture&&(this.textureType=c.TYPE_DEPTH),!0===t.isFloatingPointTexture&&(this.textureType=c.TYPE_FLOAT),"textureType"in t&&(this.textureType=t.textureType),"filter"in t&&(this.filter=t.filter),"wrap"in t&&(this.wrap=t.wrap),"unpackAlpha"in t&&(this.unpackAlpha=t.unpackAlpha),"flip"in t&&(this.flip=t.flip),"shadowMap"in t&&(this.shadowMap=t.shadowMap),"anisotropic"in t&&(this.anisotropic=t.anisotropic)):t={},!t.pixelFormat&&t.isFloatingPointTexture&&(this.pixelFormat=c.PFORMATSTR_RGBA32F),this.textureType==c.TYPE_DEPTH&&(this.pixelFormat=c.PFORMATSTR_DEPTH),t.width||(t.width=8),t.height||(t.height=8),this._cgl.profileData.profileTextureNew++,this.setFormat(c.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.profileData.addHeavyEvent("texture created",this.name,t.width+"x"+t.height),this.setSize(t.width,t.height),this.getInfoOneLine()};c.prototype.isFloatingPoint=function(){return c.isPixelFormatFloat(this.pixelFormat)},c.prototype.compareSettings=function(e){return!!e&&e.width==this.width&&e.height==this.height&&e.filter==this.filter&&e.wrap==this.wrap&&e.textureType==this.textureType&&e.unpackAlpha==this.unpackAlpha&&e.anisotropic==this.anisotropic&&e.shadowMap==this.shadowMap&&e.texTarget==this.texTarget&&e.flip==this.flip},c.prototype.clone=function(){const e=new c(this._cgl,{name:this.name,filter:this.filter,wrap:this.wrap,textureType:this.textureType,pixelFormat:this.pixelFormat,unpackAlpha:this.unpackAlpha,flip:this.flip,width:this.width,height:this.height});return this._cgl.profileData.addHeavyEvent("texture created",this.name,this.width+"x"+this.height),this.compareSettings(e)||(this._log.error("Cloned texture settings do not compare!"),this._log.error(this),this._log.error(e)),e},c.prototype.setFormat=function(e){this.pixelFormat=e.pixelFormat,this._glDataFormat=e.glDataFormat,this._glInternalFormat=e.glInternalFormat,this._glDataType=e.glDataType},c.setUpGlPixelFormat=function(e,t){const n={};t||(console.log("no pixelformatstr!"),console.log((new Error).stack),t=c.PFORMATSTR_RGBA8UB),n.pixelFormatBase=t,e.glUseHalfFloatTex&&(t==c.PFORMATSTR_RGBA32F&&(t=c.PFORMATSTR_RGBA16F),t==c.PFORMATSTR_RG32F&&(t=c.PFORMATSTR_RG16F),t==c.PFORMATSTR_R32F&&(t=c.PFORMATSTR_R16F)),n.pixelFormat=t,n.glDataType=e.gl.UNSIGNED_BYTE,n.glInternalFormat=e.gl.RGBA8,n.glDataFormat=e.gl.RGBA;let i=e.gl.FLOAT;if(1==e.glVersion&&(n.glInternalFormat=e.gl.RGBA,t==c.PFORMATSTR_RGBA16F||t==c.PFORMATSTR_RG16F||t==c.PFORMATSTR_R16F)){const t=e.enableExtension("OES_texture_half_float");if(!t)throw new Error("no half float texture extension");i=t.HALF_FLOAT_OES}return t==c.PFORMATSTR_RGBA8UB||(t==c.PFORMATSTR_RGB565?(n.glInternalFormat=e.gl.RGB565,n.glDataFormat=e.gl.RGB):t==c.PFORMATSTR_R8UB?(n.glInternalFormat=e.gl.R8,n.glDataFormat=e.gl.RED):t==c.PFORMATSTR_RG8UB?(n.glInternalFormat=e.gl.RG8,n.glDataFormat=e.gl.RG):t==c.PFORMATSTR_RGB8UB?(n.glInternalFormat=e.gl.RGB8,n.glDataFormat=e.gl.RGB):t==c.PFORMATSTR_R32F?(n.glInternalFormat=e.gl.R32F,n.glDataFormat=e.gl.RED,n.glDataType=i):t==c.PFORMATSTR_R16F?(n.glInternalFormat=e.gl.R16F,n.glDataType=i,n.glDataFormat=e.gl.RED):t==c.PFORMATSTR_RG16F?(n.glInternalFormat=e.gl.RG16F,n.glDataType=i,n.glDataFormat=e.gl.RG):t==c.PFORMATSTR_RGBA16F?(1==e.glVersion?n.glInternalFormat=e.gl.RGBA:n.glInternalFormat=e.gl.RGBA16F,n.glDataType=i):t==c.PFORMATSTR_R11FG11FB10F?(n.glInternalFormat=e.gl.R11F_G11F_B10F,n.glDataType=i,n.glDataFormat=e.gl.RGB):t==c.PFORMATSTR_RGBA32F?(1==e.glVersion?n.glInternalFormat=e.gl.RGBA:n.glInternalFormat=e.gl.RGBA32F,n.glDataType=i):t==c.PFORMATSTR_DEPTH?1==e.glVersion?(n.glInternalFormat=e.gl.DEPTH_COMPONENT,n.glDataType=e.gl.UNSIGNED_SHORT,n.glDataFormat=e.gl.DEPTH_COMPONENT):(n.glInternalFormat=e.gl.DEPTH_COMPONENT32F,n.glDataType=e.gl.FLOAT,n.glDataFormat=e.gl.DEPTH_COMPONENT):console.log("unknown pixelformat ",t)),(t.indexOf("32bit")||t==c.PFORMATSTR_R11FG11FB10F)&&(2==e.glVersion&&e.enableExtension("EXT_color_buffer_float"),2==e.glVersion&&e.enableExtension("EXT_float_blend"),e.enableExtension("OES_texture_float_linear")),t.indexOf("16bit")&&(e.enableExtension("EXT_color_buffer_half_float"),e.enableExtension("OES_texture_float_linear")),n.numColorChannels=1,0==t.indexOf("R")&&(n.numColorChannels=1),0==t.indexOf("RG")&&(n.numColorChannels=2),0==t.indexOf("RGB")&&(n.numColorChannels=3),0==t.indexOf("RGBA")&&(n.numColorChannels=4),n.glDataType&&n.glInternalFormat&&n.glDataFormat||console.log("pixelformat wrong ?!",t,n.glDataType,n.glInternalFormat,n.glDataFormat,this),n},c.prototype.setSize=function(e,t){this._cgl.aborted||((e!=e||e<=0||!e)&&(e=8),(t!=t||t<=0||!t)&&(t=8),(e>this._cgl.maxTexSize||t>this._cgl.maxTexSize)&&this._log.error("texture size too big! "+e+"x"+t+" / max: "+this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.floor(e),t=Math.floor(t),(this.width!=e||this.height!=t)&&(this.width=e,this.height=t,this.deleted=!1,this.setFormat(c.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this.shortInfoString=this.getInfoOneLine(),this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++,this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,e,t,0,this._glDataFormat,this._glDataType,null),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)))},c.prototype.initFromData=function(e,t,n,i,s){if(this.filter=i,this.wrap=s,null==i&&(this.filter=c.FILTER_LINEAR),null==s&&(this.wrap=c.WRAP_CLAMP_TO_EDGE),this.width=t,this.height=n,this._fromData=!0,this.deleted=!1,this.height>this._cgl.maxTexSize||this.width>this._cgl.maxTexSize){const e=CGL.Texture.getTempTexture(this._cgl);return this.width=e.width,this.height=e.height,this.tex=e.tex,void this._log.error("[cgl_texture] texture size to big!!!",this.width,this.height,this._cgl.maxTexSize)}this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flip),this._cgl.gl.bindTexture(this.texTarget,this.tex),this.setFormat(c.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,t,n,0,this._glDataFormat,this._glDataType,e),this._setFilter(),this.updateMipMap(),this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this._cgl.gl.bindTexture(this.texTarget,null)},c.prototype.updateMipMap=function(){2!=this._cgl.glVersion&&!this.isPowerOfTwo()||this.filter!=c.FILTER_MIPMAP||(this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)},c.prototype.initTexture=function(e,t){if(this._cgl.printError("before initTexture"),this._cgl.checkFrameStarted("texture inittexture"),this._fromData=!1,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),e.width&&(this.width=e.width),e.height&&(this.height=e.height),t&&(this.filter=t),e.height>this._cgl.maxTexSize||e.width>this._cgl.maxTexSize){const t=CGL.Texture.getTempTexture(this._cgl);return this.width=t.width,this.height=t.height,this.tex=t.tex,void this._log.error("[cgl_texture] texture size to big!!!",e.width,e.height,this._cgl.maxTexSize)}this._cgl.gl.bindTexture(this.texTarget,this.tex),this.deleted=!1,this.flipped=!this.flip,this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flipped),this.setFormat(c.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,this._glDataFormat,this._glDataType,e),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this.getInfoOneLine(),this._cgl.printError("initTexture")},c.prototype.delete=function(){this.loading||(this.deleted=!0,this.width=0,this.height=0,this._cgl.profileData.profileTextureDelete++,this._cgl.gl.deleteTexture(this.tex),this.image=null,this.tex=null)},c.prototype.isPowerOfTwo=function(){return c.isPowerOfTwo(this.width)&&c.isPowerOfTwo(this.height)},c.prototype.printInfo=function(){console.log(this.getInfo())},c.prototype.getInfoReadable=function(){const t=this.getInfo();let n="";t.name=t.name.substr(0,t.name.indexOf("?rnd="));for(const e in t)n+="* "+e+":  **"+t[e]+"**\n";return n},c.prototype.getInfoOneLine=function(){let e=this.width+"x"+this.height;return e+=" ",e+=this.pixelFormat,this.filter===CGL.Texture.FILTER_NEAREST&&(e+=" nearest"),this.filter===CGL.Texture.FILTER_LINEAR&&(e+=" linear"),this.filter===CGL.Texture.FILTER_MIPMAP&&(e+=" mipmap"),this.wrap===CGL.Texture.WRAP_CLAMP_TO_EDGE&&(e+=" clamp"),this.wrap===CGL.Texture.WRAP_REPEAT&&(e+=" repeat"),this.wrap===CGL.Texture.WRAP_MIRRORED_REPEAT&&(e+=" repeatmir"),this.shortInfoString=e,e},c.prototype.getInfoOneLineShort=function(){let e=this.width+"x"+this.height;return e+=" ",e+=this.pixelFormat,this.shortInfoString=e,e},c.prototype.getInfo=function(){return c.getTexInfo(this)},c.prototype._setFilter=function(){if(this._cgl.printError("before _setFilter"),this._fromData||this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),this.shadowMap&&(this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_MODE,this._cgl.gl.COMPARE_REF_TO_TEXTURE),this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_FUNC,this._cgl.gl.LEQUAL)),this.textureType==c.TYPE_FLOAT&&this.filter==c.FILTER_MIPMAP&&(this.filter=c.FILTER_LINEAR,this._log.stack("texture: HDR and mipmap filtering at the same time is not possible")),1!=this._cgl.glVersion||this.isPowerOfTwo()){if(this.wrap==c.WRAP_CLAMP_TO_EDGE?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE)):this.wrap==c.WRAP_REPEAT?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT)):this.wrap==c.WRAP_MIRRORED_REPEAT&&(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)),this.filter==c.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==c.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=c.FILTER_MIPMAP)throw this._log.log("unknown texture filter!",this.filter),new Error("unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}if(this.anisotropic){const t=this._cgl.enableExtension("EXT_texture_filter_anisotropic");if(t){const e=this._cgl.gl.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT);this._cgl.gl.texParameterf(this._cgl.gl.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e,this.anisotropic))}}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=c.FILTER_NEAREST,this.wrap=c.WRAP_CLAMP_TO_EDGE;this.getInfoOneLine(),this._cgl.printError("_setFilter")},c.load=function(t,n,i,e){if(!n)return i({error:!0});let s=null;t.patch.loading.existByName(n)||(s=t.patch.loading.start("texture",n));const r=new c(t);return r.name=n,t.patch.isEditorMode()&&gui.jobs().start({id:"loadtexture"+s,title:"loading texture "+CABLES.basename(n)}),r.image=new Image,r.image.crossOrigin="anonymous",r.loading=!0,e&&e.hasOwnProperty("filter")&&(r.filter=e.filter),e&&e.hasOwnProperty("flip")&&(r.flip=e.flip),e&&e.hasOwnProperty("wrap")&&(r.wrap=e.wrap),e&&e.hasOwnProperty("anisotropic")&&(r.anisotropic=e.anisotropic),e&&e.hasOwnProperty("unpackAlpha")&&(r.unpackAlpha=e.unpackAlpha),e&&e.hasOwnProperty("pixelFormat")&&(r.pixelFormat=e.pixelFormat),r.image.onabort=r.image.onerror=e=>{console.warn("[cgl.texture.load] error loading texture",n,e),r.loading=!1,s&&t.patch.loading.finished(s),i&&i({error:!0},r),t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+s)},r.image.onload=function(e){t.addNextFrameOnceCallback(()=>{r.initTexture(r.image),s&&t.patch.loading.finished(s),r.loading=!1,t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+s),i&&i(null,r)})},r.image.src=n,r},c.getTempTexture=function(e){return e||console.error("[getTempTexture] no cgl!"),e.tempTexture||(e.tempTexture=c.getTemporaryTexture(e,256,c.FILTER_LINEAR,c.REPEAT)),e.tempTexture},c.getErrorTexture=function(e){return e||console.error("[getTempTexture] no cgl!"),e.errorTexture||(e.errorTexture=c.getTemporaryTexture(e,256,c.FILTER_LINEAR,c.REPEAT,1,.2,.2)),e.errorTexture},c.getEmptyTexture=function(e,t){if(t)return c.getEmptyTextureFloat(e);if(e||console.error("[getEmptyTexture] no cgl!"),e.tempTextureEmpty)return e.tempTextureEmpty;e.tempTextureEmpty=new c(e,{name:"emptyTexture"});const n=new Uint8Array(256).fill(0);for(let e=0;e<256;e+=4)n[e+3]=0;return e.tempTextureEmpty.initFromData(n,8,8,c.FILTER_NEAREST,c.WRAP_REPEAT),e.tempTextureEmpty},c.getEmptyTextureFloat=function(e){if(e||console.error("[getEmptyTextureFloat] no cgl!"),e.tempTextureEmptyFloat)return e.tempTextureEmptyFloat;e.tempTextureEmptyFloat=new c(e,{name:"emptyTexture",isFloatingPointTexture:!0});const t=new Float32Array(256).fill(1);for(let e=0;e<256;e+=4)t[e+3]=0;return e.tempTextureEmptyFloat.initFromData(t,8,8,c.FILTER_NEAREST,c.WRAP_REPEAT),e.tempTextureEmptyFloat},c.getRandomTexture=function(e){if(e||console.error("[getRandomTexture] no cgl!"),e.randomTexture)return e.randomTexture;const t=new Uint8Array(262144);for(let e=0;e<65536;e++)t[4*e+0]=255*Math.random(),t[4*e+1]=255*Math.random(),t[4*e+2]=255*Math.random(),t[4*e+3]=255;return e.randomTexture=new c(e),e.randomTexture.initFromData(t,256,256,c.FILTER_NEAREST,c.WRAP_REPEAT),e.randomTexture},c.getRandomFloatTexture=function(e){if(e||console.error("[getRandomTexture] no cgl!"),e.getRandomFloatTexture)return e.getRandomFloatTexture;const t=new Float32Array(262144);for(let e=0;e<65536;e++)t[4*e+0]=2*(Math.random()-.5),t[4*e+1]=2*(Math.random()-.5),t[4*e+2]=2*(Math.random()-.5),t[4*e+3]=1;return e.getRandomFloatTexture=new c(e,{isFloatingPointTexture:!0}),e.getRandomFloatTexture.initFromData(t,256,256,c.FILTER_NEAREST,c.WRAP_REPEAT),e.getRandomFloatTexture},c.getBlackTexture=function(e){if(e||this._log.error("[getBlackTexture] no cgl!"),e.blackTexture)return e.blackTexture;const t=new Uint8Array(256);for(let e=0;e<64;e++)t[4*e+0]=t[4*e+1]=t[4*e+2]=0,t[4*e+3]=255;return e.blackTexture=new c(e),e.blackTexture.initFromData(t,8,8,c.FILTER_NEAREST,c.WRAP_REPEAT),e.blackTexture},c.getEmptyCubemapTexture=function(t){const n=[t.gl.TEXTURE_CUBE_MAP_POSITIVE_X,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],i=t.gl.createTexture(),s=t.gl.TEXTURE_CUBE_MAP,e=c.FILTER_NEAREST,r=c.WRAP_CLAMP_TO_EDGE;t.profileData.profileTextureNew++,t.gl.bindTexture(s,i),t.profileData.profileTextureResize++;for(let e=0;e<6;e+=1){const i=new Uint8Array(256);t.gl.texImage2D(n[e],0,t.gl.RGBA,8,8,0,t.gl.RGBA,t.gl.UNSIGNED_BYTE,i),t.gl.texParameteri(s,t.gl.TEXTURE_MAG_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_MIN_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_S,t.gl.CLAMP_TO_EDGE),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_T,t.gl.CLAMP_TO_EDGE)}return t.gl.bindTexture(s,null),{id:CABLES.uuid(),tex:i,cubemap:i,width:8,height:8,filter:e,wrap:r,unpackAlpha:!0,flip:!0,_fromData:!0,name:"emptyCubemapTexture",anisotropic:0}},c.getTempGradientTexture=function(e){if(e||console.error("[getTempGradientTexture] no cgl!"),e.tempTextureGradient)return e.tempTextureGradient;const t=new c(e),n=256,i=new Uint8Array(262144);for(let t=0;t<n;t++)for(let e=0;e<n;e++)i[4*(e+t*n)+0]=i[4*(e+t*n)+1]=i[4*(e+t*n)+2]=255-t,i[4*(e+t*n)+3]=255;return t.initFromData(i,n,n,c.FILTER_NEAREST,c.WRAP_REPEAT),e.tempTextureGradient=t,t},c.getTemporaryTexture=function(e,n,t,i,s,r,a){void 0===s&&(s=1),void 0===r&&(r=1),void 0===a&&(a=1);const o=new c(e),l=[];for(let t=0;t<n;t++)for(let e=0;e<n;e++)(e+t)%64<32?(l.push((200+t/n*25+e/n*25)*s),l.push((200+t/n*25+e/n*25)*r),l.push((200+t/n*25+e/n*25)*a)):(l.push((40+t/n*25+e/n*25)*s),l.push((40+t/n*25+e/n*25)*r),l.push((40+t/n*25+e/n*25)*a)),l.push(255);const h=new Uint8Array(l);return o.initFromData(h,n,n,t,i),o},c.createFromImage=function(e,t,n){const i=new c(e,n=n||{});return i.flip=!1,i.image=t,i.width=t.width,i.height=t.height,n.hasOwnProperty("wrap")&&(i.wrap=n.wrap),i.initTexture(t,n.filter),i},c.fromImage=function(e,t,n,i){console.error("deprecated texture from image...");const s=new c(e);return s.flip=!1,n&&(s.filter=n),i&&(s.wrap=i),s.image=t,s.initTexture(t),s},c.isPowerOfTwo=function(e){return 1==e||2==e||4==e||8==e||16==e||32==e||64==e||128==e||256==e||512==e||1024==e||2048==e||4096==e||8192==e||16384==e},c.getTexInfo=function(e){const t={};t.name=e.name,t["power of two"]=e.isPowerOfTwo(),t.size=e.width+" x "+e.height;let n=e.texTarget;return e.texTarget==e._cgl.gl.TEXTURE_2D&&(n="TEXTURE_2D"),t.target=n,t.unpackAlpha=e.unpackAlpha,e.cubemap&&(t.cubemap=!0),e.textureType==c.TYPE_FLOAT&&(t.textureType="TYPE_FLOAT"),e.textureType==c.TYPE_HALF_FLOAT?t.textureType="TYPE_HALF_FLOAT":e.textureType==c.TYPE_DEPTH?t.textureType="TYPE_DEPTH":e.textureType==c.TYPE_DEFAULT?t.textureType="TYPE_DEFAULT":t.textureType="UNKNOWN "+this.textureType,e.wrap==c.WRAP_CLAMP_TO_EDGE?t.wrap="CLAMP_TO_EDGE":e.wrap==c.WRAP_REPEAT?t.wrap="WRAP_REPEAT":e.wrap==c.WRAP_MIRRORED_REPEAT?t.wrap="WRAP_MIRRORED_REPEAT":t.wrap="UNKNOWN",e.filter==c.FILTER_NEAREST?t.filter="FILTER_NEAREST":e.filter==c.FILTER_LINEAR?t.filter="FILTER_LINEAR":e.filter==c.FILTER_MIPMAP?t.filter="FILTER_MIPMAP":t.filter="UNKNOWN",t.pixelFormat=e.pixelFormat||"unknown",t},c.FILTER_NEAREST=0,c.FILTER_LINEAR=1,c.FILTER_MIPMAP=2,c.WRAP_REPEAT=0,c.WRAP_MIRRORED_REPEAT=1,c.WRAP_CLAMP_TO_EDGE=2,c.TYPE_DEFAULT=0,c.TYPE_DEPTH=1,c.TYPE_FLOAT=2,c.PFORMATSTR_RGB565="RGB 5/6/5bit ubyte",c.PFORMATSTR_R8UB="R 8bit ubyte",c.PFORMATSTR_RG8UB="RG 8bit ubyte",c.PFORMATSTR_RGB8UB="RGB 8bit ubyte",c.PFORMATSTR_RGBA8UB="RGBA 8bit ubyte",c.PFORMATSTR_R11FG11FB10F="RGB 11/11/10bit float",c.PFORMATSTR_R16F="R 16bit float",c.PFORMATSTR_RG16F="RG 16bit float",c.PFORMATSTR_RGB16F="RGB 16bit float",c.PFORMATSTR_RGBA16F="RGBA 16bit float",c.PFORMATSTR_R32F="R 32bit float",c.PFORMATSTR_RGBA32F="RGBA 32bit float",c.PFORMATSTR_DEPTH="DEPTH",c.PIXELFORMATS=[c.PFORMATSTR_RGB565,c.PFORMATSTR_R8UB,c.PFORMATSTR_RG8UB,c.PFORMATSTR_RGB8UB,c.PFORMATSTR_RGBA8UB,c.PFORMATSTR_R11FG11FB10F,c.PFORMATSTR_R16F,c.PFORMATSTR_RG16F,c.PFORMATSTR_RGBA16F,c.PFORMATSTR_R32F,c.PFORMATSTR_RGBA32F],c.isPixelFormatFloat=e=>(e||"").indexOf("float")>-1,c.isPixelFormatHalfFloat=e=>(e||"").indexOf("float")>-1&&(e||"").indexOf("16bit")>-1;class s{constructor(e,t){this.id=CABLES.uuid(),this.name=t.name||"unknown cubemap texture",this._cgl=e,this.textureType=c.TYPE_DEFAULT,this._options=t,this._cubemapFaces=[this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_X,this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],this.cubemap=this.tex=this._cgl.gl.createTexture(),this.texTarget=this._cgl.gl.TEXTURE_CUBE_MAP,this.width=8,this.height=8,this.filter=t.filter||CGL.Texture.FILTER_NEAREST,this.wrap=t.wrap||CGL.Texture.WRAP_CLAMP_TO_EDGE,this.unpackAlpha=t.unpackAlpha||!0,this.flip=t.flip||!0,t.hasOwnProperty("pixelFormat")||(t.isFloatingPointTexture?t.pixelFormat=c.PFORMATSTR_RGBA32F:t.pixelFormat=c.PFORMATSTR_RGBA8UB),this.pixelFormat=t.pixelFormat,this._cgl.profileData.profileTextureNew++,this.setSize(t.width,t.height)}getInfo(){return{pixelFormat:this.pixelFormat}}setSize(e,t){this.delete(),this.cubemap=this.tex=this._cgl.gl.createTexture(),this._cgl.checkFrameStarted("cubemap corelib setsize"),(e!=e||e<=0||!e)&&(e=8),(t!=t||t<=0||!t)&&(t=8),(e>this._cgl.maxTexSize||t>this._cgl.maxTexSize)&&console.error("texture size too big! "+e+"x"+t+" / max: "+this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.floor(e),t=Math.floor(t),this.width=e,this.height=t,this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++;const n=c.setUpGlPixelFormat(this._cgl,this._options.pixelFormat);this.pixelFormat=n.pixelFormat,CGL.Texture.isPixelFormatHalfFloat(n.pixelFormat)?(this._cgl.enableExtension("EXT_color_buffer_half_float"),this._cgl.enableExtension("OES_texture_float_linear")||(this.filter=c.FILTER_NEAREST)):CGL.Texture.isPixelFormatFloat(n.pixelFormat)&&(this._cgl.enableExtension("OES_texture_float_linear")||(console.log("no linear pixelformat,using nearest"),this.filter=c.FILTER_NEAREST));for(let e=0;e<6;e++)this._cgl.gl.texImage2D(this._cubemapFaces[e],0,n.glInternalFormat,this.width,this.height,0,n.glDataFormat,n.glDataType,null);this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)}_setFilter(){if(this._cgl.checkFrameStarted("cubemap corelib"),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),CGL.Texture.isPixelFormatFloat(this.pixelFormat)&&this.filter==CGL.Texture.FILTER_MIPMAP&&(console.log("texture: HDR and mipmap filtering at the same time is not possible"),this.filter=CGL.Texture.FILTER_LINEAR),1!=this._cgl.glVersion||c.isPowerOfTwo()){if(this.wrap==CGL.Texture.WRAP_CLAMP_TO_EDGE)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE);else if(this.wrap==CGL.Texture.WRAP_REPEAT)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT);else{if(this.wrap!=CGL.Texture.WRAP_MIRRORED_REPEAT)throw new Error("[CubemapTexture] unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)}if(this.filter==CGL.Texture.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==CGL.Texture.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=CGL.Texture.FILTER_MIPMAP)throw new Error("[CubemapTexture] unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=CGL.Texture.FILTER_NEAREST,this.wrap=CGL.Texture.WRAP_CLAMP_TO_EDGE}updateMipMap(){this.filter==CGL.Texture.FILTER_MIPMAP&&(this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)}delete(){this._cgl.gl.deleteTexture(this.tex)}}CGL.CubemapFramebuffer=class{constructor(e,t,n,i){this._cgl=e,this.width=t||8,this.height=n||8,this._cubemapProperties=[{face:this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_X,lookAt:vec3.fromValues(1,0,0),up:vec3.fromValues(0,-1,0)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,lookAt:vec3.fromValues(-1,0,0),up:vec3.fromValues(0,-1,0)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,lookAt:vec3.fromValues(0,1,0),up:vec3.fromValues(0,0,1)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,lookAt:vec3.fromValues(0,-1,0),up:vec3.fromValues(0,0,-1)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,lookAt:vec3.fromValues(0,0,1),up:vec3.fromValues(0,-1,0)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,lookAt:vec3.fromValues(0,0,-1),up:vec3.fromValues(0,-1,0)}],this._lookAtTemp=vec3.fromValues(0,0,0),this.camPos=vec3.fromValues(0,0,0),this._modelMatrix=mat4.create(),this._viewMatrix=mat4.create(),this._projectionMatrix=mat4.perspective(mat4.create(),90*CGL.DEG2RAD,1,.1,1e3),this._depthRenderbuffer=null,this._framebuffer=null,this._depthbuffer=null,this._textureDepth=null,this._options=i||{},this.name=this._options.name||"unknown cubemapframebuffer",this._options.hasOwnProperty("numRenderBuffers")||(this._options.numRenderBuffers=1),this._options.hasOwnProperty("depth")||(this._options.depth=!0),this._options.hasOwnProperty("clear")||(this._options.clear=!0),this._options.hasOwnProperty("multisampling")||(this._options.multisampling=!1,this._options.multisamplingSamples=0),this._options.multisamplingSamples&&(this._cgl.glSlowRenderer&&(this._options.multisamplingSamples=0),this._cgl.gl.MAX_SAMPLES?this._options.multisamplingSamples=Math.min(this._cgl.gl.getParameter(this._cgl.gl.MAX_SAMPLES),this._options.multisamplingSamples):this._options.multisamplingSamples=0),this._options.hasOwnProperty("filter")||(this._options.filter=CGL.Texture.FILTER_LINEAR),this._options.hasOwnProperty("wrap")||(this._options.wrap=CGL.Texture.WRAP_CLAMP_TO_EDGE),this._cgl.checkFrameStarted("cubemap framebuffer"),this.texture=new s(this._cgl,{width:this.width,height:this.height,isFloatingPointTexture:i.isFloatingPointTexture,filter:this._options.filter,wrap:this._options.wrap,name:this.name+" cubemaptexture"}),this.initializeRenderbuffers(),this.setSize(this.width,this.height)}initializeRenderbuffers(){this._framebuffer=this._cgl.gl.createFramebuffer(),this._depthbuffer=this._cgl.gl.createRenderbuffer(),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this.width,this.height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null)}getWidth(){return this.width}getHeight(){return this.height}getGlFrameBuffer(){return this._framebuffer}getDepthRenderBuffer(){return this._depthRenderbuffer}getTextureColor(){return this.texture}getTextureDepth(){return this._textureDepth}dispose(){this.texture&&(this.texture=this.texture.delete()),this._framebuffer&&this._cgl.gl.deleteFramebuffer(this._framebuffer),this._depthRenderbuffer&&this._cgl.gl.deleteRenderbuffer(this._depthbuffer)}delete(){this.dispose()}setSize(e,t){this._cgl.printError("before cubemap setsize"),this.width=Math.floor(e),this.height=Math.floor(t),this.width=Math.min(this.width,this._cgl.maxTexSize),this.height=Math.min(this.height,this._cgl.maxTexSize),this._cgl.profileData.profileFrameBuffercreate++,this._framebuffer=this._cgl.gl.createFramebuffer(),this._depthbuffer=this._cgl.gl.createRenderbuffer(),this.texture.setSize(this.width,this.height),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this.width,this.height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.isFramebuffer(this._framebuffer)||console.error("invalid framebuffer...");const n=this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);this.checkErrorsByStatus(n),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.printError("cubemap setsize")}checkErrorsByStatus(e){switch(e){case this._cgl.gl.FRAMEBUFFER_COMPLETE:break;case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw console.error("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",this.width,this.height,this.texture.tex,this._depthBuffer),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw console.error("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw console.error("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:throw console.error("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");case 36059:console.error("Incomplete: FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER from ext. Or Safari/iOS undefined behaviour.");break;default:throw console.error("incomplete framebuffer",e),console.log(this),new Error("Incomplete framebuffer: "+e)}}setFilter(e){this.texture.filter=e,this.texture.setSize(this.width,this.height)}setCamPos(e){this.camPos=e||this.camPos}setMatrices(e,t,n){this._modelMatrix=e||this._modelMatrix,this._viewMatrix=t||this._viewMatrix,this._projectionMatrix=n||this._projectionMatrix}renderStart(){this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,this.texture.tex),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.viewport(0,0,this.width,this.height),this._cgl.pushGlFrameBuffer(this._framebuffer),this._cgl.pushFrameBuffer(this)}renderStartCubemapFace(e){this._cgl.pushModelMatrix(),this._cgl.pushViewMatrix(),this._cgl.pushPMatrix(),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cubemapProperties[e].face,this.texture.tex,0),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._options.clear&&(this._cgl.gl.clearColor(0,0,0,1),this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT)),this.setMatricesCubemapFace(e)}setMatricesCubemapFace(e){mat4.copy(this._cgl.mMatrix,this._modelMatrix),vec3.add(this._lookAtTemp,this.camPos,this._cubemapProperties[e].lookAt),mat4.lookAt(this._cgl.vMatrix,this.camPos,this._lookAtTemp,this._cubemapProperties[e].up),mat4.copy(this._cgl.pMatrix,this._projectionMatrix)}renderEndCubemapFace(){this._cgl.popPMatrix(),this._cgl.popModelMatrix(),this._cgl.popViewMatrix()}renderEnd(){this._cgl.profileData.profileFramebuffer++,1!==this._cgl.glVersion&&this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.popFrameBuffer(),this._cgl.resetViewPort(),this.updateMipMap()}updateMipMap(){this.texture&&(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,this.texture.tex),this.texture.updateMipMap(),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,null))}},((this.CGL=this.CGL||{}).COREMODULES=this.CGL.COREMODULES||{}).Cubemapframebuffer={}.Cubemapframebuffer})();(()=>{"use strict";CGL.ShaderModifier=class{constructor(e,t,n){this._cgl=e,this._name=t,this._origShaders={},this._uniforms=[],this._structUniforms=[],this._definesToggled={},this._defines={},this._mods=[],this._textures=[],this._boundShader=null,this._changedDefines=!0,this._changedUniforms=!0,this._modulesChanged=!1,this.needsTexturePush=!1,this._lastShader=null,this._attributes=[],1==this._cgl.glVersion&&(this._cgl.enableExtension("OES_texture_float"),this._cgl.enableExtension("OES_texture_float_linear"),this._cgl.enableExtension("OES_texture_half_float"),this._cgl.enableExtension("OES_texture_half_float_linear"))}bind(t,n){const i=t||this._cgl.getShader();if(!i)return;this._boundShader=this._origShaders[i.id];let s=!1;if(this._boundShader&&this._lastShader!=this._boundShader.shader&&(this._boundShader.shader.hasModule(this._mods[0].id)||(s=!0)),(s||!this._boundShader||i.lastCompile!=this._boundShader.lastCompile||this._modulesChanged||i._needsRecompile)&&(this._boundShader&&this._boundShader.shader.dispose(),i._needsRecompile&&i.compile(),this._boundShader=this._origShaders[i.id]={lastCompile:i.lastCompile,orig:i,shader:i.copy()},this._addModulesToShader(this._boundShader.shader),this._updateDefinesShader(this._boundShader.shader),this._updateUniformsShader(this._boundShader.shader)),this._boundShader.wireframe=i.wireframe,this._changedDefines&&this._updateDefines(),this._changedUniforms&&this._updateUniforms(),!1!==n&&this._cgl.pushShader(this._boundShader.shader),this._boundShader.shader.copyUniformValues(this._boundShader.orig),this.needsTexturePush){for(let e=0;e<this._textures.length;e+=1){const n=this._textures[e][0],i=this._textures[e][1],s=this._textures[e][2];if(this._getUniform(n)){const t=this.getPrefixedName(n),r=this._boundShader.shader.getUniform(t);r&&this._boundShader.shader.pushTexture(r,i,s)}}this.needsTexturePush=!1,this._textures.length=0}return this._modulesChanged=!1,this._boundShader.shader.fromMod=this,this.onBind&&this.onBind(this._boundShader.shader),this._boundShader.shader}unbind(e){this._boundShader&&!1!==e&&this._cgl.popShader(),this._boundShader=null}_addModulesToShader(t){let n;this._mods.length>1&&(n=this._mods[0]);for(let e=0;e<this._mods.length;e++)t.addModule(this._mods[e],n)}_removeModulesFromShader(e){for(const t in this._origShaders)this._origShaders[t].shader.removeModule(e)}addModule(e){this._mods.push(e),this._modulesChanged=!0}removeModule(t){const n=[];let i=!1;for(let e=0;e<this._mods.length;e++)this._mods[e].title==t&&(i=!0,this._removeModulesFromShader(this._mods[e]),n.push(e));for(let e=n.length-1;e>=0;e-=1)this._mods.splice(n[e],1);this._modulesChanged=!0}_updateUniformsShader(i){for(let e=0;e<this._uniforms.length;e++){const s=this._uniforms[e],t=this.getPrefixedName(s.name);if(!i.hasUniform(t)&&!s.structName){let e=null;"both"===s.shaderType?(e=i.addUniformBoth(s.type,t,s.v1,s.v2,s.v3,s.v4),e.comment="mod: "+this._name):"frag"===s.shaderType?(e=i.addUniformFrag(s.type,t,s.v1,s.v2,s.v3,s.v4),e.comment="mod: "+this._name):"vert"===s.shaderType&&(e=i.addUniformVert(s.type,t,s.v1,s.v2,s.v3,s.v4),e.comment="mod: "+this._name)}}for(let n=0;n<this._structUniforms.length;n+=1){const s=this._structUniforms[n];let e=s.uniformName,t=s.structName;const r=s.members;e=this.getPrefixedName(s.uniformName),t=this.getPrefixedName(s.structName),"frag"===s.shaderType&&i.addUniformStructFrag(t,e,r),"vert"===s.shaderType&&i.addUniformStructVert(t,e,r),"both"===s.shaderType&&i.addUniformStructBoth(t,e,r)}}_updateUniforms(){for(const e in this._origShaders)this._updateUniformsShader(this._origShaders[e].shader);this._changedUniforms=!1}_setUniformValue(e,t,n){const i=e.getUniform(t);i&&i.setValue(n)}setUniformValue(e,t){if(!this._getUniform(e))return;const n=this.getPrefixedName(e);for(const e in this._origShaders)this._setUniformValue(this._origShaders[e].shader,n,t)}hasUniform(e){return this._getUniform(e)}_getUniform(t){for(let e=0;e<this._uniforms.length;e++){if(this._uniforms[e].name==t)return this._uniforms[e];if(this._uniforms[e].structName&&this._uniforms[e].propertyName==t)return this._uniforms[e]}return!1}_getStructUniform(t){for(let e=0;e<this._structUniforms.length;e+=1)if(this._structUniforms[e].uniformName===t)return this._structUniforms[e];return null}_isStructUniform(t){for(let e=0;e<this._uniforms.length;e++){if(this._uniforms[e].name==t)return!1;if(this._uniforms[e].structName&&this._uniforms[e].propertyName==t)return!0}return!1}addUniform(t,n,i,s,r,a,o,l,h,c){if(!this._getUniform(n)){let e="both";c&&(e=c),this._uniforms.push({type:t,name:n,v1:i,v2:s,v3:r,v4:a,structUniformName:o,structName:l,propertyName:h,shaderType:e}),this._changedUniforms=!0}}addUniformFrag(e,t,n,i,s,r){this.addUniform(e,t,n,i,s,r,null,null,null,"frag"),this._changedUniforms=!0}addUniformVert(e,t,n,i,s,r){this.addUniform(e,t,n,i,s,r,null,null,null,"vert"),this._changedUniforms=!0}addUniformBoth(e,t,n,i,s,r){this.addUniform(e,t,n,i,s,r,null,null,null,"both"),this._changedUniforms=!0}addUniformStruct(t,n,i,s){for(let e=0;e<i.length;e+=1){const r=i[e];"2i"!==r.type&&"i"!==r.type&&"3i"!==r.type||"both"!==s||console.error("Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:",t," with member:",r.name," of type:",r.type,"."),this._getUniform(n+"."+r.name)||this.addUniform(r.type,n+"."+r.name,r.v1,r.v2,r.v3,r.v4,n,t,r.name,s)}this._getStructUniform(n)||this._structUniforms.push({structName:t,uniformName:n,members:i,shaderType:s})}addUniformStructVert(e,t,n){this.addUniformStruct(e,t,n,"vert")}addUniformStructFrag(e,t,n){this.addUniformStruct(e,t,n,"frag")}addUniformStructBoth(e,t,n){this.addUniformStruct(e,t,n,"both")}addAttribute(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t.name&&this._attributes[e].nameFrag==t.nameFrag)return;this._attributes.push(t)}pushTexture(e,t,n){if(!t)throw new Error("no texture given to texturestack");this._textures.push([e,t,n]),this.needsTexturePush=!0}_removeUniformFromShader(e,t){t.hasUniform(e)&&t.removeUniform(e)}removeUniform(t){if(this._getUniform(t)){for(let e=this._uniforms.length-1;e>=0;e-=1){const n=t;if(this._uniforms[e].name==t&&!this._uniforms[e].structName){for(const t in this._origShaders)this._removeUniformFromShader(this.getPrefixedName(n),this._origShaders[t].shader);this._uniforms.splice(e,1)}}this._changedUniforms=!0}}removeUniformStruct(t){if(this._getStructUniform(t)){for(let e=this._structUniforms.length-1;e>=0;e-=1){const n=this._structUniforms[e];if(n.uniformName===t){for(const t in this._origShaders)for(let e=0;e<n.members.length;e+=1){const i=n.members[e];this._removeUniformFromShader(this.getPrefixedName(i.name),this._origShaders[t].shader)}this._structUniforms.splice(e,1)}}this._changedUniforms=!0}}getPrefixedName(e){const t=this._mods[0].group;if(void 0!==t)return 0==e.indexOf("MOD_")&&(e="mod"+t+"_"+(e=e.substr("MOD_".length))),e}_updateDefinesShader(e){for(const t in this._defines){const n=this.getPrefixedName(t);null!==this._defines[t]&&void 0!==this._defines[t]?e.define(n,this._defines[t]):e.removeDefine(n)}for(const t in this._definesToggled){const n=this.getPrefixedName(t);e.toggleDefine(n,this._definesToggled[t])}}_updateDefines(){for(const e in this._origShaders)this._updateDefinesShader(this._origShaders[e].shader);this._changedDefines=!1}define(e,t){void 0===t&&(t=!0),this._defines[e]=t,this._changedDefines=!0}removeDefine(e){this._defines[e]=null,this._changedDefines=!0}hasDefine(e){return null!==this._defines[e]&&void 0!==this._defines[e]}toggleDefine(e,t){this._changedDefines=!0,this._definesToggled[e]=t}currentShader(){return this._boundShader?this._boundShader.shader:null}dispose(){}},((this.CGL=this.CGL||{}).COREMODULES=this.CGL.COREMODULES||{}).Shadermodifier={}.Shadermodifier})();